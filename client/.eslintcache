[{"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Routes\\index.js":"3","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil.js":"4","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Home.js":"5","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\index.js":"6","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInForm.js":"7","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpForm.js":"8","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Navbar.js":"9","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Logout.js":"10","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\index.js":"11","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\user.reducer.js":"12","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Thread.js":"13","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\post.reducer.js":"14","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\users.reducer.js":"15","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\error.reducer.js":"16","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNav.js":"17","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Trends.js":"18","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Card.js":"19","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\NewPostForm.js":"20","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\LikeButton.js":"21","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\DeleteCard.js":"22","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardComments.js":"23","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\EditDeleteComment.js":"24","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Favoris.js":"25","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Search.js":"26","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\SearchForm.js":"27","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Results.js":"28","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Newpost.js":"29","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadsFavoris.js":"30","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Reservation.js":"31","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Chat.js":"32","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\ChatFeed.jsx":"33","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MyMessage.jsx":"34","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\TheirMessage.jsx":"35","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MessageForm.jsx":"36","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_pro.js":"37","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_pro.js":"38","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInProForm.js":"39","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpProForm.js":"40","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_admin.js":"41","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInAdminForm.js":"42","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpAdminForm.js":"43","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion.js":"44","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_admin.js":"45","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNavAdmin.js":"46","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pro.js":"47","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Parametres.js":"48","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_clients.js":"49","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\User_view.js":"50","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pubs.js":"51","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadAdmin.js":"52","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardAdmin.js":"53","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Ajout_admin.js":"54","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\ListAdmin.js":"55","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Bestof.js":"56","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\bestof.reducer.js":"57","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\postAction.js":"58","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\userAction.js":"59","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\usersAction.js":"60","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdateInfoProfil.js":"61","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdatePicture.js":"62","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\UserIdConnect.js":"63","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Utilitaires.js":"64","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\posts.reducres.js":"65","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Post_pro.js":"66","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadsPro.js":"67","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Mes_reservations.js":"68","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadClient.js":"69","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\page_accueil\\Accueil.js":"70","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\page_accueil\\globalStyles.js":"71","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\data\\InfoData.js":"72","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\data\\SliderData.js":"73","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\Hero.js":"74","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\Dropdown.js":"75","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\InfoSection.js":"76","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\NavBar.js":"77","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\Button.js":"78","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\data\\MenuData.js":"79","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\NavBarPro.js":"80","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\HomePro.js":"81","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\DropdownPro.js":"82"},{"size":747,"mtime":1615395603597,"results":"83","hashOfConfig":"84"},{"size":882,"mtime":1615396131457,"results":"85","hashOfConfig":"84"},{"size":2861,"mtime":1615677769879,"results":"86","hashOfConfig":"84"},{"size":1096,"mtime":1615654357571,"results":"87","hashOfConfig":"84"},{"size":1363,"mtime":1615655222021,"results":"88","hashOfConfig":"84"},{"size":1296,"mtime":1615674637869,"results":"89","hashOfConfig":"84"},{"size":2852,"mtime":1615685798735,"results":"90","hashOfConfig":"84"},{"size":5553,"mtime":1615658316224,"results":"91","hashOfConfig":"84"},{"size":3487,"mtime":1615641729474,"results":"92","hashOfConfig":"84"},{"size":725,"mtime":1615686254835,"results":"93","hashOfConfig":"84"},{"size":441,"mtime":1615396516908,"results":"94","hashOfConfig":"84"},{"size":604,"mtime":1615395553396,"results":"95","hashOfConfig":"84"},{"size":1259,"mtime":1615549376514,"results":"96","hashOfConfig":"84"},{"size":2318,"mtime":1615543422365,"results":"97","hashOfConfig":"84"},{"size":261,"mtime":1615395603597,"results":"98","hashOfConfig":"84"},{"size":515,"mtime":1615395553399,"results":"99","hashOfConfig":"84"},{"size":1369,"mtime":1615398187674,"results":"100","hashOfConfig":"84"},{"size":2534,"mtime":1615712341368,"results":"101","hashOfConfig":"84"},{"size":12980,"mtime":1615655480717,"results":"102","hashOfConfig":"84"},{"size":10030,"mtime":1615682383603,"results":"103","hashOfConfig":"84"},{"size":1417,"mtime":1615410656857,"results":"104","hashOfConfig":"84"},{"size":563,"mtime":1615493899650,"results":"105","hashOfConfig":"84"},{"size":2792,"mtime":1615396301502,"results":"106","hashOfConfig":"84"},{"size":2090,"mtime":1615396131435,"results":"107","hashOfConfig":"84"},{"size":1165,"mtime":1615654804913,"results":"108","hashOfConfig":"84"},{"size":2187,"mtime":1615654715930,"results":"109","hashOfConfig":"84"},{"size":1988,"mtime":1615685637271,"results":"110","hashOfConfig":"84"},{"size":267,"mtime":1611210583320,"results":"111","hashOfConfig":"84"},{"size":877,"mtime":1615682963677,"results":"112","hashOfConfig":"84"},{"size":1478,"mtime":1615396301500,"results":"113","hashOfConfig":"84"},{"size":10400,"mtime":1615655664363,"results":"114","hashOfConfig":"84"},{"size":1108,"mtime":1615656093042,"results":"115","hashOfConfig":"84"},{"size":2049,"mtime":1615018747870,"results":"116","hashOfConfig":"84"},{"size":549,"mtime":1615018190723,"results":"117","hashOfConfig":"84"},{"size":1048,"mtime":1615018217083,"results":"118","hashOfConfig":"84"},{"size":1506,"mtime":1615018154921,"results":"119","hashOfConfig":"84"},{"size":1204,"mtime":1615683095100,"results":"120","hashOfConfig":"84"},{"size":1454,"mtime":1615684141971,"results":"121","hashOfConfig":"84"},{"size":2765,"mtime":1615398124350,"results":"122","hashOfConfig":"84"},{"size":5716,"mtime":1615401848488,"results":"123","hashOfConfig":"84"},{"size":299,"mtime":1615684182818,"results":"124","hashOfConfig":"84"},{"size":2751,"mtime":1615712597297,"results":"125","hashOfConfig":"84"},{"size":5655,"mtime":1615112459268,"results":"126","hashOfConfig":"84"},{"size":1391,"mtime":1615686689209,"results":"127","hashOfConfig":"84"},{"size":1173,"mtime":1615644970902,"results":"128","hashOfConfig":"84"},{"size":1298,"mtime":1615396131467,"results":"129","hashOfConfig":"84"},{"size":5832,"mtime":1615401408198,"results":"130","hashOfConfig":"84"},{"size":2779,"mtime":1615401648009,"results":"131","hashOfConfig":"84"},{"size":5226,"mtime":1615686851205,"results":"132","hashOfConfig":"84"},{"size":3154,"mtime":1615396301500,"results":"133","hashOfConfig":"84"},{"size":1354,"mtime":1615401540689,"results":"134","hashOfConfig":"84"},{"size":1214,"mtime":1615396301500,"results":"135","hashOfConfig":"84"},{"size":10529,"mtime":1615686538607,"results":"136","hashOfConfig":"84"},{"size":7014,"mtime":1615401192708,"results":"137","hashOfConfig":"84"},{"size":4529,"mtime":1615401748131,"results":"138","hashOfConfig":"84"},{"size":1157,"mtime":1615657715445,"results":"139","hashOfConfig":"84"},{"size":263,"mtime":1615395411697,"results":"140","hashOfConfig":"84"},{"size":5332,"mtime":1615543823538,"results":"141","hashOfConfig":"84"},{"size":1629,"mtime":1615397104245,"results":"142","hashOfConfig":"84"},{"size":360,"mtime":1615397085872,"results":"143","hashOfConfig":"84"},{"size":1979,"mtime":1615683894037,"results":"144","hashOfConfig":"84"},{"size":1029,"mtime":1615683437650,"results":"145","hashOfConfig":"84"},{"size":82,"mtime":1615396162619,"results":"146","hashOfConfig":"84"},{"size":893,"mtime":1615396324670,"results":"147","hashOfConfig":"84"},{"size":270,"mtime":1615396536261,"results":"148","hashOfConfig":"84"},{"size":1202,"mtime":1615683050428,"results":"149","hashOfConfig":"84"},{"size":1327,"mtime":1615555649597,"results":"150","hashOfConfig":"84"},{"size":1168,"mtime":1615654749953,"results":"151","hashOfConfig":"84"},{"size":1364,"mtime":1615550613342,"results":"152","hashOfConfig":"84"},{"size":818,"mtime":1615677450331,"results":"153","hashOfConfig":"84"},{"size":324,"mtime":1615581775302,"results":"154","hashOfConfig":"84"},{"size":1169,"mtime":1615671471395,"results":"155","hashOfConfig":"84"},{"size":1686,"mtime":1615671302884,"results":"156","hashOfConfig":"84"},{"size":5145,"mtime":1615712956269,"results":"157","hashOfConfig":"84"},{"size":3153,"mtime":1615657842156,"results":"158","hashOfConfig":"84"},{"size":4088,"mtime":1615674288205,"results":"159","hashOfConfig":"84"},{"size":2504,"mtime":1615675731525,"results":"160","hashOfConfig":"84"},{"size":706,"mtime":1615658124132,"results":"161","hashOfConfig":"84"},{"size":605,"mtime":1615676055100,"results":"162","hashOfConfig":"84"},{"size":2505,"mtime":1615677759564,"results":"163","hashOfConfig":"84"},{"size":1476,"mtime":1615685240427,"results":"164","hashOfConfig":"84"},{"size":3168,"mtime":1615683127365,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"1vvdbak",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"168"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"168"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"168"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"168"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"168"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"168"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"168"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"168"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"168"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"168"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"168"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"168"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"168"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"168"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"168"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"168"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"168"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"168"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"168"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"168"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"168"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"168"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"168"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"168"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"168"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"168"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"168"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"168"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"168"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"168"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"168"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"168"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"168"},"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\index.js",[],["367","368"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\App.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Routes\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Home.js",["369","370","371","372"],"import React, { useContext, useState } from \"react\";\nimport { UidContext } from \"../components/UserIdConnect\";\nimport LeftNav from \"../components/LeftNav\";\nimport Thread from \"../components/Thread\";\nimport Trends from \"../components/Trends\";\nimport SearchForm from \"../components/Post/SearchForm\";\nimport { useSelector } from \"react-redux\";\nimport NavBar from '../components/PageAccueil/NavBar';\nimport Dropdown from '../components/PageAccueil/Dropdown';\n\nconst Home = () => {\n  const uid = useContext(UidContext);\n  const userData = useSelector((state) => state.userReducer);\n  const [state, setState] = useState({\n    isSearching: false,\n    active:\"search\",\n    post:[{}, {}],\n    query: \"\"\n  });\n\n  const onTextChange = input => {\n    setState({ ...state, isSearching : input.length > 0})\n    console.log(input)\n  }\n\n\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n    <NavBar toggle={toggle}/>\n    <Dropdown isOpen={isOpen} toggle={toggle}/>\n    <div className=\"container\" style={{paddingTop:'10%'}}>\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <br/>\n          <SearchForm/>\n          <hr/>\n          <Thread />\n        </div>\n        <div className=\"col-4\">\n          <Trends />\n        </div>\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default Home;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInForm.js",["373","374"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport SignUpForm from \"./SignUpForm\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\n\nconst SignInForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const emailError = document.querySelector(\".email.error\");\n    const passwordError = document.querySelector(\".password.error\");\n    const roleError = document.querySelector(\".role.error\")\n\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_API_URL}api/user/login`,\n      withCredentials: true,\n      data: {\n        email,\n        password,\n        role,\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.errors) {\n          emailError.innerHTML = res.data.errors.email;\n          passwordError.innerHTML = res.data.errors.password;\n          roleError.innerHTML = res.data.errors.role;\n        } else {\n          window.location = \"/home\";\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <MDBContainer>\n    <MDBRow>\n      <MDBCol md=\"12\">\n        <MDBCard >\n          <MDBCardBody>\n            <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\n              <p className=\"h4 text-center py-4\">Connexion locataire</p>\n              <div className=\"role error\"></div>\n              <div className=\"grey-text\">\n                <MDBInput\n                  label=\"email\"\n                  icon=\"envelope\"\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n                <div className=\"email error\"></div>\n                <MDBInput\n                  label=\"password\"\n                  icon=\"lock\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                />\n                <div className=\"password error\"></div>\n              </div>\n              <div className=\"text-center py-4 mt-3\">\n                <MDBBtn type=\"submit\">\n                  Se connecter\n                </MDBBtn>\n              </div>\n            </form>\n            <MDBModalFooter>\n                <div className=\"font-weight-light\">\n                  <a href=\"/profil\">Forgot Password?</a>\n                </div>\n            </MDBModalFooter>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  </MDBContainer>\n  );\n};\n\nexport default SignInForm;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Navbar.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Logout.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\user.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Thread.js",["375"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/postAction\";\nimport Card from \"./Post/Card\";\nimport { isEmpty } from \"./Utilitaires\";\n\nconst Thread = () => {\n  const [loadPost, setLoadPost] = useState(true);\n  const [count, setCount] = useState(5);\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.postReducer);\n\n  const loadMore = () => {\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\n      setLoadPost(true);\n    }\n  }\n\n  useEffect(() => {\n    if (loadPost) {\n      dispatch(getPosts(count));\n      setLoadPost(false);\n      setCount(count + 5);\n    }\n\n    window.addEventListener('scroll', loadMore);\n    return () => window.removeEventListener('scroll', loadMore);\n  }, [loadPost, dispatch, count]);\n\n  return (\n    <div className=\"thread-container\">\n      <ul>\n        {!isEmpty(posts[0]) &&\n          posts.map((post) => {\n            if( (post.status === \"non_reservé\") || ( post.status === \"refusé\")) {\n               return <Card post={post} key={post._id} />;\n            }           \n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Thread;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\post.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\users.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\error.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNav.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Trends.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Card.js",["376","377","378","379","380","381"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dateParser, isEmpty } from \"../Utilitaires\";\nimport LikeButton from \"./LikeButton\";\nimport { updatePost, updateStatus } from \"../../actions/postAction\";\nimport DeleteCard from \"./DeleteCard\";\nimport CardComments from \"./CardComments\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBBtn, MDBCard } from 'mdbreact';\nimport Popup from \"reactjs-popup\";\nimport { useContext } from \"react\";\nimport { UidContext } from \"../UserIdConnect\";\n\nconst Card = ({ post }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [textUpdate, setTextUpdate] = useState(null);\n  const [showComments, setShowComments] = useState(false);\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n  const uid = useContext(UidContext);\n  \n\n  const updateItem = () => {\n    if (textUpdate) {\n      dispatch(updatePost(post._id, textUpdate));\n    }\n    setIsUpdated(false);\n  };\n\n  useEffect(() => {\n    !isEmpty(usersData[0]) && setIsLoading(false);\n  }, [usersData]);\n\n  const valideReservation = () => {\n    dispatch(updateStatus(post._id, post.message, \"reservé\", post.clientId));\n  }\n\n  const refuseReservation = () => {\n    dispatch(updateStatus(post._id, post.message, \"refusé\", post.clientId));\n  }\n\n  const annuleReservation = () => {\n    dispatch(updateStatus(post._id, post.message, \"non_reservé\"));\n  }\n\n  const status = () => {\n    if (post.status === 'reservé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#2ed573', borderRadius:\"4px 8px\"}}>Réservé</span>)\n    } else if (post.status === 'attente') {\n      return (\n        <div>\n          <span style={{fontSize:'12px', backgroundColor:'#25fde9', borderRadius:\"4px 8px\"}}>En attente</span>\n          \n          <form action=\"\" onClick={valideReservation}>\n            <button type=\"submit\" >Valider</button>\n          </form>\n             \n          {\" \"}\n          <form action=\"\" onClick={refuseReservation}>\n            <button type=\"button\" >Refuser</button>\n          </form>\n        </div>\n        )\n    } else if (post.status === 'annulé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Annulé</span>)\n    } else if (post.status === 'non_reservé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Non reservé</span>)\n    } else if (post.status === 'refusé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Non reservé (après refus)</span>)\n    } \n  }\n\n  const afficheReservButton = () =>\n  {\n      if (((userData.role !== 'propriétaire') && (post.status === \"non_reservé\")) || ((userData.role !== 'propriétaire') && (post.status === \"refusé\")) ) {\n         return (\n          <button type=\"submit\" className=\"btn btn-light\">\n            <a style={{color:'#ff9f1a'}} href={`/reservation/${post._id}`}>\n              Reserver \n            </a>\n          </button>\n        )\n      } else if((userData.role !== 'propriétaire') && (post.clientId !== null) && (post.status === \"attente\")) {\n          return (\n            <div>\n            <span style={{fontSize:'12px'}}>\n              status : <span style={{backgroundColor:'#25fde9', borderRadius:\"4px 8px\"}}>En attente de validation</span>\n            </span>\n            <br/>\n            <form action=\"\"  onClick={() => {\n              if (window.confirm(\"Voulez-vous annuler votre demande de reservation ?\")) {\n                annuleReservation();\n              }\n            }}\n            >\n              <button type=\"submit\" titre=\"Annuler la reservation\" >Annuler</button>\n            </form>\n          </div>\n          )\n      } else if((userData.role !== 'propriétaire') && (post.clientId !== null) && (post.status === \"reservé\")) {\n        return (\n          <div>\n          <span style={{fontSize:'12px'}}>\n            status : <span style={{backgroundColor:'#2ed573', borderRadius:\"4px 8px\"}}>Reservation acceptée &#128521;</span>\n          </span>\n        </div>\n        )\n    }  else if((userData.role !== 'propriétaire') && (post.clientId !== null) && (post.status === \"refusé\")) {\n      return (\n        <div>\n        <span style={{fontSize:'12px'}}>\n          status : <span style={{backgroundColor:'#ff4757', borderRadius:\"4px 8px\"}}>Refus</span>\n        </span>\n      </div>\n      )\n    } else if((userData.role !== 'propriétaire') && (post.clientId !== null) && (post.status === \"annulé\")) {\n      return (\n        <div>\n        <span style={{fontSize:'12px'}}>\n          status : <span style={{backgroundColor:'#ff4757', borderRadius:\"4px 8px\"}}>Votre reservation a été annulée</span>\n        </span>\n      </div>\n      )\n    } else if (userData.role === 'propriétaire'){\n          return (\n            <div>\n              <span style={{fontSize:'12px'}}>\n                status : {status()}\n              </span>\n            </div>\n          )  \n      }    \n  }\n\n  const ficheLocataire = () => {\n    if ((post.clientId !== null) && (userData.role === 'propriétaire') ) {\n      return (\n              <Popup\n                trigger={<i class=\"fas fa-address-card\" title=\"fiche locataire\"></i>}\n                position={[\"bottom right\"]}\n                closeOnDocumentClick>\n                <div>\n                  {!isEmpty(usersData[0]) && \n                    usersData.map((user) => {\n                        if (user._id === post.clientId) {\n                          return (\n                            <>\n                              <p>\n                                Pseudo : {user.pseudo} \n                                         {  (post.status === \"reservé\") &&\n                                            <img src=\"./img/check.png\"/>\n                                         }\n                                         {  (post.status === \"refusé\") &&\n                                            <img src=\"./img/close.png\"/>\n                                         }\n                                         {  (post.status === \"attente\") &&\n                                            <img src=\"./img/Spinner.svg\"/>\n                                         }\n                                         <br/>\n                                {user.email} <br/> \n                                Tel :\n                              </p>\n                            </>\n                          )\n                        }\n                    })\n                  }\n                </div>\n              </Popup>\n      \n      )\n    }\n    \n  }\n\n  return (\n    <div>\n      <br />\n      <MDBCard >\n        <li className=\"container\" key={post._id}>\n          {isLoading ? (\n            <i className=\"fas fa-spinner fa-spin\"></i>\n          ) : (\n              <>\n                <div className=\"round\">\n                  <br />\n                  <h6>\n                    <img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\n                      src={\n                        !isEmpty(usersData[0]) &&\n                        usersData\n                          .map((user) => {\n                            if (user._id === post.posterId) return user.picture;\n                            else return null;\n                          })\n                          .join(\"\")\n                      }\n                      alt=\"poster-pic\"\n                    />\n                    {\"  \"}\n                    {!isEmpty(usersData[0]) &&\n                      usersData\n                        .map((user) => {\n                          if (user._id === post.posterId) return user.pseudo;\n                          else return null;\n                        })\n                        .join(\"\")}\n\n                    <div className=\"col-sm\" style={{textAlign:'right'}}>\n                        <img src=\"./img/camera.png\" title=\"Prise de vue locataire\"/>\n                        <br/>\n                        {ficheLocataire()}\n                    </div>\n                  </h6>\n\n                </div>\n                <div>\n                  <div>\n                    <div>\n                      <h4>{post.titre}</h4>\n                      \n                    </div>\n                  </div>\n                  <div className=\"row\" >\n                    <div className=\"col-sm\">\n                      {uid ? (\n                        <a href={`/reservation/${post._id}`}>\n                          {post.picture && (\n                            <img height=\"200\" width=\"100%\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\n                          )}\n                          {post.video && (\n                            <iframe\n                              width=\"100%\"\n                              height=\"200\"\n                              src={post.video}\n                              frameBorder=\"0\"\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                              allowFullScreen\n                              title={post._id}\n                            ></iframe>\n                          )}\n                        </a>\n                      ) : (\n                        <>\n\n                            {post.picture && (\n                            <img height=\"200\" width=\"100%\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\n                          )}\n                          {post.video && (\n                            <iframe\n                              width=\"100%\"\n                              height=\"200\"\n                              src={post.video}\n                              frameBorder=\"0\"\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                              allowFullScreen\n                              title={post._id}\n                            ></iframe>\n                          )}\n                        </>\n                      )}\n\n                      \n\n\n\n                      {isUpdated && (\n                        <div className=\"update-post\">\n                          <textarea\n                            defaultValue={post.message}\n                            onChange={(e) => setTextUpdate(e.target.value)}\n                          />\n                          <div className=\"button-container\">\n                            <button className=\"btn\" onClick={updateItem}>\n                              Valider modification\n                      </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"col-sm\">\n                      <span style={{fontSize:\"12px\", fontWeight:\"bold\"}}>Publiée le {dateParser(post.createdAt)}</span>\n                      {isUpdated === false && <p>{post.message}</p>}\n                    </div>\n                  </div>\n\n\n                  {userData._id === post.posterId && (\n                    <div className=\"button-container\">\n                      <div onClick={() => setIsUpdated(!isUpdated)}>\n                        <img height=\"40\" src=\"./img/icons/document.svg\" alt=\"edit\" />\n                      </div>\n                      <DeleteCard id={post._id} />\n                    </div>\n                  )}\n                  <div className=\"row\">\n                  <div className=\"col-sm\">\n                      <span style={{fontSize:'12px'}}>commentaire </span>\n                          <i onClick={() => setShowComments(!showComments)} className=\"fas fa-comment\"></i>  {post.comments.length}\n                      \n                  </div>\n                    <div className=\"col-sm\">\n                      <LikeButton post={post} />\n                    </div>\n                    <div></div>\n                    <div className=\"col-sm\">\n                      {uid === null && (\n                        <Popup\n                          trigger={<button type=\"submit\" className=\"btn btn-light\">\n                            Reserver \n                            </button>}\n                          position={[\"bottom center\", \"bottom right\", \"bottom left\"]}\n                          closeOnDocumentClick>\n                          <div>Connectez-vous pour faire une reservation!</div>\n                        </Popup>\n\n                      )}\n                      {uid && (\n                       afficheReservButton()\n                        )}\n                      \n                       \n                    </div>\n\n                  </div>\n                  {showComments && <CardComments post={post} />}\n                </div>\n              </>\n            )}\n        </li>\n      </MDBCard>\n\n    </div>\n  );\n};\n\nexport default Card;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\NewPostForm.js",["382","383"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"../Utilitaires\";\nimport { addPost, getPosts } from \"../../actions/postAction\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\n\n\n\nconst NewPostForm = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [titre, setTitre] = useState(\"\");\n  const [superficie, setSuperficie] = useState(\"\");\n  const [prix, setPrix] = useState(\"\");\n  const [date_open, setDate_open] = useState(\"\");\n  const [date_close, setDate_close] = useState(\"\");\n  const [localisation, setLocalisation] = useState(\"\");\n  const [codepostal, setCodepostal] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [nbr_personne, setNbr_personne] = useState(\"\");\n  const status = 'non_reservé';\n  const clientId = null;\n  const [postPicture, setPostPicture] = useState(null);\n  const [video, setVideo] = useState(\"\");\n  const [file, setFile] = useState([]);\n  const userData = useSelector((state) => state.userReducer);\n  const error = useSelector((state) => state.errorReducer.postError);\n  const dispatch = useDispatch();\n\n  const [selectedImages, setSelectedImages] = useState([])\n  const imageHandleChange = (e) => {\n      console.log(e.target.files)\n      if(e.target.files) {\n        const fileArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file))\n        console.log(fileArray);\n        setSelectedImages((prevImages) =>prevImages.concat(fileArray));\n        setFile(e.target.files[0]);\n        setVideo('');\n        console.log(file)\n        Array.from(e.target.files).map(\n          (file)=>URL.revokeObjectURL(file)\n        );\n      }\n  };\n  const renderPhotos = (source) => {\n\t\tconsole.log('source: ', source);\n\t\treturn source.map((photo) => {\n\t\t\treturn <img height=\"200px\" width=\"50%\" src={photo} alt=\"\" key={photo} />;\n\t\t});\n\t};\n  /*\n  const handlePicture = (e) => {\n    setPostPicture(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n    setVideo('');\n  }; \n  */\n\n  const handlePost = async () => {\n    if (message || postPicture || video) {\n      const data = new FormData();\n      data.append('posterId', userData._id);\n      data.append('message', message);\n      data.append('titre', titre);\n      data.append('superficie', superficie);\n      data.append('prix', prix);\n      data.append('date_open', date_open);\n      data.append('date_close', date_close);\n      data.append('localisation', localisation);\n      data.append('codepostal', codepostal);\n      data.append('type', type);\n      data.append('status', status);\n      data.append('clientId', clientId);\n      data.append('nbr_personne', nbr_personne);\n      if (file) data.append(\"file\", file);\n      data.append('video', video);\n      await dispatch(addPost(data));\n      dispatch(getPosts());\n      cancelPost();\n    } else {\n      alert(\"Veuillez entrer une description brève de votre offre\")\n    }\n  };\n \n  const cancelPost = () => {\n    setMessage(\"\");\n    setTitre(\"\");\n    setSuperficie(\"\");\n    setPrix(\"\");\n    setDate_open(\"\");\n    setDate_close(\"\");\n    setLocalisation(\"\");\n    setCodepostal(\"\");\n    setType(\"\");\n    setPostPicture(\"\");\n    setVideo(\"\");\n    setFile(\"\");\n    setSelectedImages(\"\");\n  };\n\n\n  useEffect(() => {\n    if (!isEmpty(userData)) setIsLoading(false);\n\n    const handleVideo = () => {\n      let findLink = message.split(\" \");\n      for (let i = 0; i < findLink.length; i++) {\n        if (\n          findLink[i].includes(\"https://www.yout\") ||\n          findLink[i].includes(\"https://yout\")\n        ) {\n          let embed = findLink[i].replace(\"watch?v=\", \"embed/\");\n          setVideo(embed.split(\"&\")[0]);\n          findLink.splice(i, 1);\n          setMessage(findLink.join(\" \"));\n          setPostPicture('');\n        }\n      }\n    };\n    handleVideo();\n  }, [userData, message, video]);\n\n  return (\n    <>\n      {isLoading ? (\n        <i className=\"fas fa-spinner fa-pulse\"></i>\n      ) : (\n        <>\n        <MDBContainer>\n    <MDBRow>\n      <MDBCol md=\"12\">\n        <MDBCard >\n          <MDBCardBody>\n            <p style={{backgroundColor:'#ff9f1a'}}>Déposer votre annonce</p>\n            <form action=\"\">\n              <div className=\"grey-text\">\n                <MDBInput\n                required\n                  label=\"titre\"\n                  type=\"text\"\n                  name=\"titre\"\n                  id=\"titre\"\n                  onChange={(e) => setTitre(e.target.value)}\n                  value={titre}\n                />\n                 <MDBInput\n                 required\n                  label=\"type\"\n                  type=\"text\"\n                  name=\"ttype\"\n                  id=\"type\"\n                  onChange={(e) => setType(e.target.value)}\n                  value={type}\n                />\n                 <MDBInput\n                  label=\"superficie\"\n                  type=\"number\"\n                  name=\"superficie\"\n                  id=\"superficie\"\n                  onChange={(e) => setSuperficie(e.target.value)}\n                  value={superficie}\n                />\n                <MDBInput\n                required\n                  label=\"codepostal\"\n                  type=\"number\"\n                  name=\"codepostal\"\n                  id=\"codepostal\"\n                  onChange={(e) => setCodepostal(e.target.value)}\n                  value={codepostal}\n                />\n                <MDBInput\n                required\n                  label=\"localisation\"\n                  type=\"text\"\n                  name=\"localisation\"\n                  id=\"localisation\"\n                  onChange={(e) => setLocalisation(e.target.value)}\n                  value={localisation}\n                />\n                <MDBInput\n                required\n                  label=\"prix\"\n                  type=\"number\"\n                  name=\"prix\"\n                  id=\"prix\"\n                  onChange={(e) => setPrix(e.target.value)}\n                  value={prix}\n                />\n                <MDBInput\n                required\n                  label=\"nombre de personne\"\n                  type=\"number\"\n                  name=\"nbr_personne\"\n                  id=\"nbr_personne\"\n                  onChange={(e) => setNbr_personne(e.target.value)}\n                  value={nbr_personne}\n                />\n                <MDBInput\n                required\n                  label=\"Date début de disponibilité\"\n                  type=\"date\"\n                  name=\"date_open\"\n                  id=\"date_open\"\n                  onChange={(e) => setDate_open(e.target.value)}\n                  value={date_open}\n                />\n                <MDBInput\n                required\n                  label=\"Date fin de disponibilité\"\n                  type=\"date\"\n                  name=\"date_close\"\n                  id=\"date_close\"\n                  onChange={(e) => setDate_close(e.target.value)}\n                  value={date_close}\n                />\n                <textarea \n                  class=\"form-control rounded-0\" \n                  id=\"exampleFormControlTextarea2\" \n                  rows=\"3\"\n                  name=\"message\"\n                  id=\"message\"\n                  placeholder=\"Décrivez votre offre...\"\n                  onChange={(e) => setMessage(e.target.value)}\n                  value={message}\n                ></textarea>\n              </div>\n              <div className=\"footer-form\">\n                  <div className=\"icon\">\n                    {isEmpty(video) && (\n                      <>\n                        <input\n                          multiple\n                          type=\"file\"\n                          id=\"file-upload\"\n                          name=\"file\"\n                          accept=\".jpg, .jpeg, .png\"\n                          onChange={imageHandleChange}\n                        />\n                      </>\n                    )}\n                    {video && (\n                      <MDBBtn onClick={() => setVideo(\"\")}>Supprimer video</MDBBtn>\n                    )}\n                  </div>\n                  {!isEmpty(error.format) && <p>{error.format}</p>}\n                  {!isEmpty(error.maxSize) && <p>{error.maxSize}</p>}\n                  <div className=\"btn-send\">\n                    {message || selectedImages || video.length > 20 ? (\n                      <MDBBtn className=\"cancel\" onClick={cancelPost}>\n                        Annuler la plublication\n                      </MDBBtn>\n                    ) : null}\n                    <MDBBtn type=\"submit\" onClick={handlePost}>\n                      Envoyer\n                    </MDBBtn>\n                  </div>\n              </div>\n            </form>\n          </MDBCardBody>\n        </MDBCard>\n        <MDBCard>\n            <MDBCardBody>\n              <p style={{backgroundColor:'#ff9f1a'}}>Aperçu des images</p>\n                  {message || selectedImages || video.length > 20 ? (\n                \n                <div className=\"right\">\n                    <div className=\"content\">\n                      <div className=\"row\">\n                        {renderPhotos(selectedImages)}\n                      </div>\n                      \n                      {video && (\n                        <iframe\n                          src={video}\n                          frameBorder=\"0\"\n                          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                          allowFullScreen\n                          title={video}\n                        ></iframe>\n                      )}\n                    </div>\n                </div>\n              \n              ) : null}\n            </MDBCardBody>\n          </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  </MDBContainer>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default NewPostForm;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\LikeButton.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\DeleteCard.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardComments.js",["384"],"import { MDBCard } from \"mdbreact\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addComment, getPosts } from \"../../actions/post.actions\";\nimport { isEmpty, timestampParser } from \"../Utils\";\nimport EditDeleteComment from \"./EditDeleteComment\";\n\nconst CardComments = ({ post }) => {\n  const [text, setText] = useState(\"\");\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n\n  const handleComment = (e) => {\n    e.preventDefault();\n\n    if (text) {\n      dispatch(addComment(post._id, userData._id, text, userData.pseudo))\n        .then(() => dispatch(getPosts()))\n        .then(() => setText(''));\n    }\n  };\n\n  return (\n    <div className=\"comments-container\">\n      {post.comments.map((comment) => {\n        return (\n          <div\n            className={\n              comment.commenterId === userData._id\n                ? \"comment-container client\"\n                : \"comment-container\"\n            }\n            key={comment._id}\n          >\n            <div className=\"left-part\">\n              <h6>\n                <img height=\"30\" width=\"30\" style={{ borderRadius: \"50%\" }}\n                src={\n                  !isEmpty(usersData[0]) &&\n                  usersData\n                    .map((user) => {\n                      if (user._id === comment.commenterId) return user.picture;\n                      else return null;\n                    })\n                    .join(\"\")\n                }\n                alt=\"commenter-pic\"\n              />\n                {comment.commenterPseudo}{\" \"} <span style={{fontSize:\"10px\"}}>{timestampParser(comment.timestamp)}</span>\n              </h6>\n              \n            </div>\n            <div className=\"right-part\">\n              <div className=\"comment-header\">\n                <div className=\"pseudo\">\n                  <h3></h3> \n                </div>\n                \n              </div>\n              <MDBCard style={{backgroundColor:'#ecf0f1', borderRadius:\"5px 10px\"}} className=\"col-6\">{comment.text}</MDBCard>\n              <EditDeleteComment comment={comment} postId={post._id} />\n            </div>\n          </div>\n        );\n      })}\n      {userData._id && (\n        <form action=\"\" onSubmit={handleComment} className=\"comment-form\">\n          <input\n            type=\"text\"\n            name=\"text\"\n            onChange={(e) => setText(e.target.value)}\n            value={text}\n            placeholder=\"Laisser un commentaire\"\n          />\n          <br />\n          <button className=\"fas fa-paper-plane\" aria-hidden=\"true\" type=\"submit\" ></button>\n          <br/>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default CardComments;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\EditDeleteComment.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Favoris.js",["385"],"import React, { useContext, useState } from \"react\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport LeftNav from \"../components/LeftNav\";\r\nimport ThreadsFavoris from \"../components/ThreadsFavoris\";\r\nimport Dropdown from '../components/PageAccueil/Dropdown';\r\nimport NavBar from '../components/PageAccueil/NavBar';\r\n\r\nconst Favoris = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => {\r\n      setIsOpen(!isOpen);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <NavBar toggle={toggle}/>\r\n    <Dropdown isOpen={isOpen} toggle={toggle}/>\r\n    <div className=\"container\" style={{paddingTop:'10%'}}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-1\">\r\n          </div>\r\n          <div className=\"col-11\">\r\n            <br/>\r\n            <p>Liste de mes favoris</p>\r\n            <div className=\"main\">\r\n              <div className=\"home-header\">\r\n              </div>\r\n              {uid && <ThreadsFavoris />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Favoris;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Search.js",["386","387","388","389","390","391","392"],"import React, { useContext, useState } from \"react\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport LeftNav from \"../components/LeftNav\";\r\nimport SearchForm from \"../components/Post/SearchForm\";\r\nimport Thread from \"../components/Thread\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\nimport NavBar from '../components/PageAccueil/NavBar';\r\nimport Dropdown from '../components/PageAccueil/Dropdown';\r\n\r\nconst Search = () => {\r\n  const uid = useContext(UidContext);\r\n  const [state, setState] = useState({\r\n    isSearching: false,\r\n    active: \"search\",\r\n    post: [{}, {}],\r\n    query: \"\"\r\n  });\r\n  const onTextChange = input => {\r\n    setState({ ...state, isSearching: input.length > 0 })\r\n    console.log(input)\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <NavBar toggle={toggle}/>\r\n    <Dropdown isOpen={isOpen} toggle={toggle}/>\r\n    <div className=\"container\" style={{paddingTop:'13%'}}>\r\n      <div className=\"row\">\r\n        <div className=\"col-1\">\r\n        </div>\r\n        <div className=\"col-11\">\r\n\r\n          <MDBContainer><bcomplexe r />\r\n            <MDBRow>\r\n\r\n              <MDBCol md=\"12\">\r\n                <MDBCard>\r\n                  <MDBCardBody>\r\n                    <form >\r\n                      <p style={{textAlign:'center'}}>Veuillez entrer les détails de votre recherche</p>\r\n                      <div className=\"grey-text\">\r\n                        \r\n                        <br />\r\n\r\n                        <div className=\"terms error\"></div>\r\n                      </div>\r\n                      <div className=\"text-center py-4 mt-3\">\r\n                        <MDBBtn color=\"#ff9f1a\" type=\"submit\">\r\n                          Valider la recherche\r\n                            </MDBBtn>\r\n                      </div>\r\n                    </form>\r\n                  </MDBCardBody>\r\n                </MDBCard>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\SearchForm.js",["393","394","395"],"import { MDBBtn, MDBCard, MDBInput } from \"mdbreact\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../Utilitaires\";\r\nimport Card from \"./Card\";\r\n\r\nconst SearchForm = () => {\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const [searcharr, setSearcharr] = useState('')\r\n  const [searchdep, setSearchdep] = useState('')\r\n\r\n  const refrechSearch = () => {\r\n    setSearcharr('');\r\n    setSearchdep('');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"row\">\r\n        \r\n        <div className=\"col-6\">\r\n        <MDBCard>\r\n          <MDBInput\r\n            htmlFor=\"date_arr\"\r\n            label=\"Date d'arriver\"\r\n            type=\"date\"\r\n            id=\"date_arr\"\r\n            onChange={e => setSearcharr(e.target.value)}\r\n          />\r\n        </MDBCard>\r\n        </div>\r\n        <div className=\"col-6\">\r\n        <MDBCard>\r\n          <MDBInput\r\n            htmlFor=\"date_dep\"\r\n            label=\"Date de depart\"\r\n            type=\"date\"\r\n            id=\"date_dep\"\r\n            onChange={e => setSearchdep(e.target.value)}\r\n          />\r\n        </MDBCard>\r\n        <i title=\"Rafraîchir\" onClick={refrechSearch} class=\"fas fa-sync-alt\"></i>\r\n       </div>\r\n\r\n      </div>\r\n\r\n      <div>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n            if (\r\n              (((searcharr < post.date_open) || (post.date_close > searcharr))\r\n              && (searcharr > post.date_open))\r\n              \r\n            ) {\r\n              if (searchdep <= post.date_close) {\r\n                return (\r\n                <div>\r\n                  <p style={{ color: 'red' }}>Disponible</p>\r\n                  <Card post={post} key={post._id} />\r\n                </div>\r\n\r\n              )\r\n              }\r\n             \r\n              \r\n            }\r\n             \r\n          } )}\r\n          <p>Recherche par date... </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Results.js",["396"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Newpost.js",["397","398","399","400"],"import React, {useState} from \"react\";\r\nimport LeftNav from \"../components/LeftNav\";\r\nimport NewPostForm from \"../components/Post/NewPostForm\";\r\nimport Navbar from \"../components/Navbar\"\r\nimport { useSelector } from \"react-redux\";\r\nimport Dropdown from '../components/PageAccueil/Dropdown';\r\nimport NavBarPro from \"../components/PageAccueil/NavBarPro\";\r\nimport DropdownPro from \"../components/PageAccueil/DropdownPro\";\r\n\r\n\r\nconst Newpost = () => {\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <NavBarPro toggle={toggle}/>\r\n    <DropdownPro isOpen={isOpen} toggle={toggle}/>\r\n    <div className=\"container\"  style={{paddingTop:'10%'}}>\r\n            <NewPostForm />  \r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Newpost;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadsFavoris.js",["401","402"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/post.actions\";\r\nimport Card from \"./Post/Card\";\r\nimport { isEmpty } from \"./Utils\";\r\n\r\nconst ThreadsFavoris = () => {\r\n  const [loadPost, setLoadPost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const loadMore = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n      setLoadPost(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      dispatch(getPosts(count));\r\n      setLoadPost(false);\r\n      setCount(count + 5);\r\n    }\r\n\r\n    window.addEventListener('scroll', loadMore);\r\n    return () => window.removeEventListener('scroll', loadMore);\r\n  }, [loadPost, dispatch, count]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n            for (let i = 0; i < userData.likes.length; i++) {\r\n              if (post._id === userData.likes[i]) {\r\n                return <Card post={post} key={post._id} />;\r\n              }\r\n            }\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadsFavoris;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Reservation.js",["403","404","405","406","407","408","409","410","411","412","413","414"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { dateParser, isEmpty } from \"../components/Utilitaires\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport StripeCheckout from \"react-stripe-checkout\"\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { MDBBtn, MDBCard } from 'mdbreact';\r\nimport { updateStatus } from \"../actions/postAction\";\r\nimport NavBar from '../components/PageAccueil/NavBar';\r\nimport Dropdown from '../components/PageAccueil/Dropdown';\r\n\r\n \r\nconst Reservation = (props) => {\r\n  const [formSubmit, setFormSubmit] = useState(false);\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const status = \"attente\"\r\n\r\n  const confirmReservation = () => {\r\n    {!isEmpty(posts[0]) &&\r\n      posts.map((post) => {\r\n        if (post._id === props.match.params.id) {\r\n              dispatch(updateStatus(post._id, post.message, status, userData._id));\r\n        }\r\n      })\r\n    }\r\n    setFormSubmit(true);\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  const [post, setPost] = useState({\r\n    name: \"React from Me\",\r\n    price: posts.price,\r\n  });\r\n  /*\r\n    const [Images, setImages] = useState([])\r\n  \r\n    useEffect(() => {\r\n      {!isEmpty(posts[0]) &&\r\n        posts.map((post) => {\r\n          if (post._id === props.match.params.id) {\r\n            if (post.picture.length > 0) {\r\n              let images = [];\r\n  \r\n              post.picture.map((picture) => {\r\n                images.push({\r\n                  original: `http://localhost:5000/${picture}`,\r\n                  thumbnail: `http://localhost:5000/${picture}`,\r\n                })\r\n              })\r\n              setImages(images)\r\n            }\r\n          }\r\n        })}\r\n    }, [props.match.params.url])\r\n  */\r\n  const images = [\r\n    {\r\n      original: 'https://picsum.photos/id/1018/1000/600/',\r\n      thumbnail: 'https://picsum.photos/id/1018/250/150/',\r\n    },\r\n    {\r\n      original: 'https://picsum.photos/id/1015/1000/600/',\r\n      thumbnail: 'https://picsum.photos/id/1015/250/150/',\r\n    },\r\n    {\r\n      original: 'https://picsum.photos/id/1019/1000/600/',\r\n      thumbnail: 'https://picsum.photos/id/1019/250/150/',\r\n    },\r\n  ];\r\n\r\n  const makePayment = token => {\r\n    const body = {\r\n      token,\r\n      post\r\n    }\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    return fetch(`http://localhost:5000/payment`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(body)\r\n    }\r\n    ).then(response => {\r\n      console.log(\"RESPONSE\", response)\r\n      const { status } = response;\r\n      console.log(\"STATUS\", status)\r\n    })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n\r\n  const infoPost = () => {};\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n \r\n\r\n  return (\r\n    <>\r\n    \r\n    <NavBar toggle={toggle}/>\r\n    <Dropdown isOpen={isOpen} toggle={toggle}/>\r\n    <div>\r\n    {formSubmit ? (\r\n                        <>\r\n                        <h4 className=\"success\" style={{textAlign:'center', paddingTop:'15%'}}>\r\n                            Réservation réussite, elle est en attente de validation par le proprio !\r\n                        </h4>\r\n                        <div class=\"success-animation\">\r\n                            <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"><circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" /><path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" /></svg>\r\n                        </div>\r\n                        \r\n                        <span></span>\r\n                        </>\r\n                    ) : (\r\n                      <>\r\n                          <div className=\"container\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-8\">\r\n\r\n                                <ul>\r\n                                  {!isEmpty(posts[0]) &&\r\n                                    posts.map((post) => {\r\n                                      if (post._id === props.match.params.id) {\r\n                                        return <div>\r\n                                          {post.picture && (\r\n                                            <img height=\"200\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\r\n                                          )}\r\n                                          <h6> {post.picture}</h6>\r\n                                          {post.video && (\r\n                                            <iframe\r\n                                              width=\"100%\"\r\n                                              height=\"400\"\r\n                                              src={post.video}\r\n                                              frameBorder=\"0\"\r\n                                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                              allowFullScreen\r\n                                              title={post._id}\r\n                                            ></iframe>\r\n                                          )}\r\n                                          <hr />\r\n                                          <ImageGallery items={images} />\r\n                                          <h3>{post.titre}</h3>\r\n                                          <span>{post.superficie} - {post.localisation}</span>\r\n                                          <h5>{post.price}</h5>\r\n                                          <span>Publiée le {dateParser(post.createdAt)}</span>\r\n                                          <hr />\r\n                                          <h5>Détails</h5>\r\n                                          <p>{post.message}</p>\r\n                                          <hr />\r\n                                          <h5>Cartographie</h5>\r\n                                        </div>\r\n                                      }\r\n                                    })}\r\n                                </ul>\r\n                                <StripeCheckout\r\n                                  stripeKey=\"pk_test_51IQafJDRHvU06AUoTyjd7f3g4TuEJI2wfvRwZxHKSuHQvfZE8J5Dy9GAgeNcH5oZoK6HDa1cYUFyaLKwis59tvRd00ZAf60pn1\"\r\n                                  token=\"\"\r\n                                  name=\"By Merith\"\r\n                                  amount={post.price * 10}\r\n                                  shippingAddress\r\n                                  billingAddress\r\n                                >\r\n                                  <button className=\"btn-large green\">Payer </button>\r\n                                </StripeCheckout>\r\n                                <br/>\r\n                               \r\n                                  <MDBBtn type=\"button\" onClick={confirmReservation}>\r\n                                    Confirmer reservation\r\n                                  </MDBBtn>\r\n                                \r\n                                \r\n                                </div>\r\n                              <div className=\"col-4\">\r\n                                <br />\r\n                                <br />\r\n                                <h5> Les informations du propriétaire</h5>\r\n                                <div>\r\n                                  <MDBCard>\r\n                                    {!isEmpty(posts[0]) &&\r\n                                      posts.map((post) => {\r\n                                        if (post._id === props.match.params.id) {\r\n                                          return <div>\r\n                                            {!isEmpty(usersData[0]) &&\r\n                                              usersData.map((user) => {\r\n                                                if (post.posterId === user._id) {\r\n                                                  return <div>\r\n                                                    <br />\r\n                                                          * Pseudo\r\n                                                          <h3> {user.pseudo}</h3>\r\n                                                          * Email\r\n                                                          <h5> {user.email}</h5>\r\n                                                          * Numéro de tel :\r\n                                                      </div>\r\n                                                }\r\n                                              })}\r\n                                          </div>\r\n                                        }\r\n                                      })}\r\n                                  </MDBCard>\r\n                                  {!isEmpty(posts[0]) &&\r\n                                    posts.map((post) => {\r\n                                      if (post._id === props.match.params.id) {\r\n                                        return <div>\r\n                                          {!isEmpty(usersData[0]) &&\r\n                                            usersData.map((user) => {\r\n                                              if (post.posterId === user._id) {\r\n                                                return <div>\r\n                                                  <a href={`/chat/${user._id}`}>\r\n                                                    <button className=\"btn-large green\">Lui laisser un message </button>\r\n                                                  </a>\r\n                                                </div>\r\n                                              }\r\n                                            })}\r\n                                        </div>\r\n                                      }\r\n                                    })}\r\n\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </>\r\n                   ) }\r\n                    </div>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Reservation\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Chat.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\ChatFeed.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MyMessage.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\TheirMessage.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MessageForm.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_pro.js",["415"],"import React, { useContext, useState } from \"react\";\r\nimport Index_pro from \"../components/Log/Index_pro\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport UpdateInfoProfil from \"../components/Profil/UpdateInfoProfil\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../style/index.css\"\r\nimport NavBarPro from \"../components/PageAccueil/NavBarPro\";\r\nimport DropdownPro from \"../components/PageAccueil/DropdownPro\";\r\n\r\nconst Profil_pro = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => {\r\n      setIsOpen(!isOpen);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <NavBarPro toggle={toggle}/>\r\n    <DropdownPro isOpen={isOpen} toggle={toggle}/>\r\n    <div className=\"container\" >\r\n      <div style={{paddingTop:'10%'}} >\r\n        {uid ? (\r\n          <UpdateInfoProfil />\r\n        ) : (\r\n          <div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <Index_pro signin={true} signup={false} />\r\n                </div>\r\n               \r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profil_pro;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_pro.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInProForm.js",["416"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\n\r\nconst SignInProForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_API_URL}api/user/loginpro`,\r\n      withCredentials: true,\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.errors) {\r\n          emailError.innerHTML = res.data.errors.email;\r\n          passwordError.innerHTML = res.data.errors.password;\r\n        } else {\r\n          window.location = \"/newpost\";\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MDBContainer>\r\n    <MDBRow>\r\n      <MDBCol md=\"12\">\r\n        <MDBCard >\r\n          <MDBCardBody>\r\n            <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\r\n              <p className=\"h4 text-center py-4\">Connexion propriétaire</p>\r\n              <div className=\"grey-text\">\r\n                <MDBInput\r\n                  label=\"email\"\r\n                  icon=\"envelope\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                />\r\n                <div className=\"email error\"></div>\r\n                <MDBInput\r\n                  label=\"password\"\r\n                  icon=\"lock\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                />\r\n                <div className=\"password error\"></div>\r\n              </div>\r\n              <div className=\"text-center py-4 mt-3\">\r\n                <MDBBtn type=\"submit\">\r\n                  Se connecter\r\n                </MDBBtn>\r\n              </div>\r\n            </form>\r\n            <MDBModalFooter>\r\n                <div className=\"font-weight-light\">\r\n                  \r\n                  <a href=\"/profil_pro\">Forgot Password?</a>\r\n                </div>\r\n              </MDBModalFooter>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default SignInProForm;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpProForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_admin.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInAdminForm.js",["417"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpAdminForm.js",[],["418","419"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion.js",["420","421"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { isEmpty } from \"../../components/Utilitaires\";\r\n\r\n\r\nconst Gestion = ({ post }) => {\r\n    const posts = useSelector((state) => state.postReducer);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n    }, [usersData]);\r\n    return (\r\n        <div>\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink> \r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    Gestion des clients\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Gestion;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_admin.js",["422"],"import React, { useContext, useState } from \"react\";\r\nimport Index_admin from \"../components/Log/Index_admin\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport UpdateInfoProfil from \"../components/Profil/UpdateInfoProfil\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../style/index.css\"\r\nimport NavBar from '../components/PageAccueil/NavBar';\r\nimport Dropdown from '../components/PageAccueil/Dropdown';\r\n\r\nconst Profil_admin = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <NavBar toggle={toggle}/>\r\n    <Dropdown isOpen={isOpen} toggle={toggle}/>\r\n    <div className=\"container\" >\r\n      <div style={{paddingTop:'10%'}} >\r\n        {uid ? (\r\n          <UpdateInfoProfil />\r\n        ) : (\r\n          <div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <Index_admin signin={true} signup={false} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profil_admin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNavAdmin.js",["423"],"import React, { useContext } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UidContext } from './AppContext';\r\nimport Logout from './Log/Logout';\r\n\r\nconst LeftNavAdmin = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  return (\r\n    <div className=\"left-nav-container\">\r\n      <div className=\"container\">\r\n        <div className=\"container\">\r\n          <br/>\r\n          { uid ? (\r\n            <>\r\n              <NavLink to='/gestion_clients' exact >\r\n                  Gestion des clients\r\n              </NavLink>\r\n              <hr/>\r\n              <NavLink to='/gestion_pro' exact >\r\n                  Gestion des propriétaires\r\n              </NavLink>\r\n              <hr/>\r\n              <NavLink to='/gestion_pubs' exact >\r\n                  Gestion des Publications\r\n              </NavLink>\r\n              <hr/>\r\n              <NavLink to='/parametres' exact >\r\n                  Paramètres\r\n              </NavLink>\r\n              <hr/>\r\n                <NavLink to=''>\r\n                <Logout/>\r\n              </NavLink>\r\n              <hr/>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftNavAdmin;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pro.js",["424","425","426"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Gestion_pro = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const posts = useSelector((state) => state.postReducer);\r\n    const dispatch = useDispatch();\r\n    const deleteQuote = id => dispatch(deleteUser(id));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <br />\r\n                    <h1>Gestion des propriétaires</h1>\r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Nombre de Post</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"propriétaire\") {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>    \r\n                                                {!isEmpty(posts[0]) &&\r\n                                                    posts.map((post) => {\r\n                                                        if ( post.posterId === user._id) {\r\n                                                           return \r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <button type=\"submit\" className=\"btn btn-danger\" \r\n                                                    onClick={() => {\r\n                                                        if (window.confirm(\"Voulez-vous supprimer cet utilisateur ?\")) {\r\n                                                            deleteQuote(user._id);\r\n                                                            \r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-info\">\r\n                                                    <i className=\"fas fa-user-edit\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <a style={{ color: 'black' }} href={`/user_view/${user._id}`} >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </a>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    ) }\r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Gestion_pro;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Parametres.js",["427","428"],"import { Tooltip } from \"bootstrap\";\r\nimport { MDBBtn, MDBCard } from \"mdbreact\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\n\r\nconst Parametres = () => {\r\n    const userData = useSelector((state) => state.userReducer);\r\n    return (\r\n        <div>\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n                <NavLink exact to=\"/gestion\">\r\n                    <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n                </NavLink>\r\n                <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"block-header\">\r\n                            <br/>\r\n                            <h1>Paramètres</h1>\r\n                            <small className=\"text-muted\">Administrer les composants du fonctionnement de l'application</small>\r\n                        </div>\r\n                        <br/>\r\n                        <div class=\"row clearfix\">\r\n                            <MDBBtn>\r\n                                <NavLink exact to=\"/ajout_admin\">\r\n                                    Administrateur +\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                            <div className=\"col-1\"></div>\r\n                            <MDBBtn >\r\n                                <NavLink exact to=\"/listadmin\">\r\n                                   Liste des Administrateurs\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                            <div className=\"col-1\"></div>\r\n                            <MDBBtn >\r\n                                <NavLink exact to=\"/paramhabitat\">\r\n                                   parametres de l'habitat\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                        </div>\r\n                        <div class=\"row clearfix\">\r\n                            <MDBBtn >\r\n                                <NavLink exact to=\"/alerte\">\r\n                                   Gestion des alertes\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\nexport default Parametres;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_clients.js",["429"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Gestion_clients = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const deleteQuote = id => dispatch(deleteUser(id));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }} width='100%'>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <br />\r\n                    <h1>Gestion des clients</h1>\r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"client\") {\r\n                                      return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>\r\n                                                <button type=\"submit\" className=\"btn btn-danger\" \r\n                                                    onClick={() => {\r\n                                                        if (window.confirm(\"Voulez-vous supprimer cet utilisateur ?\")) {\r\n                                                            deleteQuote(user._id);\r\n                                                            \r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-info\">\r\n                                                    <i className=\"fas fa-user-edit\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <a style={{ color: 'black' }} href={`/user_view/${user._id}`} >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </a>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    )  \r\n                                    }\r\n                                    \r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Gestion_clients;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\User_view.js",["430","431","432","433"],"import React from \"react\";\r\n\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\nimport { useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../../components/Utils\";\r\n\r\n\r\n\r\nconst User_view = (props) => {\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </nav>\r\n            <div className=\"container\">\r\n                <MDBContainer><bcomplexe r />\r\n                    <MDBRow>\r\n\r\n                        <MDBCol md=\"12\">\r\n                            <MDBCard>\r\n                                <MDBCardBody>\r\n                                    {!isEmpty(usersData[0]) &&\r\n                                        usersData.map((users) => {\r\n                                            if (users._id === props.match.params.id) {\r\n                                                return (\r\n                                                    <>\r\n                                                        <h1> Profil de {users.pseudo}</h1>\r\n                                                        <h6>Compte crée le : {dateParser(users.createdAt)}</h6>\r\n                                                        <div className=\"row\">\r\n                                                        <div className=\"col-6\">\r\n                                                        <ul>\r\n                                                            <li>Pseudo: {users.pseudo}</li>\r\n                                                            <li>Email: {users.email}</li>\r\n                                                        </ul>\r\n                                                        </div>\r\n                                                        <div className=\"col-6\">\r\n                                                            <div className=\"left-part\">\r\n                                                            <h3>Photo de profil</h3>\r\n                                                            <img height=\"400\"\r\n                                                                src={users.picture} alt=\"user-pic\" />\r\n                                                                {users.picture}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )\r\n                                                \r\n                                            }\r\n                                        })}\r\n\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User_view;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pubs.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadAdmin.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardAdmin.js",["434","435","436","437"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../Utilitaires\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport { updatePost } from \"../../actions/postAction\";\r\nimport DeleteCard from \"./DeleteCard\";\r\nimport CardComments from \"./CardComments\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBCard } from 'mdbreact';\r\nimport Popup from \"reactjs-popup\";\r\nimport { useContext } from \"react\";\r\nimport { UidContext } from \"../UserIdConnect\";\r\n\r\nconst CardAdmin = ({ post }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n    const [textUpdate, setTextUpdate] = useState(null);\r\n    const [showComments, setShowComments] = useState(false);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const uid = useContext(UidContext);\r\n\r\n    const status = () => {\r\n        if (post.status === 'réservé') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Réservé</span>)\r\n        } else if (post.status === 'attente') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#25fde9', borderRadius:\"4px 8px\"}}>En attente</span>)\r\n        } else if (post.status === 'annulé') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Annulé</span>)\r\n        } else if (post.status === 'non_reservé') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Non reservé</span>)\r\n        } \r\n    }\r\n\r\n    const updateItem = () => {\r\n        if (textUpdate) {\r\n            dispatch(updatePost(post._id, textUpdate));\r\n        }\r\n        setIsUpdated(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n    }, [usersData]);\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <MDBCard >\r\n                <li className=\"container\" key={post._id}>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"round\">\r\n                                <br />\r\n                                <h6>\r\n                                    <img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                        src={\r\n                                            !isEmpty(usersData[0]) &&\r\n                                            usersData\r\n                                                .map((user) => {\r\n                                                    if (user._id === post.posterId) return user.picture;\r\n                                                    else return null;\r\n                                                })\r\n                                                .join(\"\")\r\n                                        }\r\n                                        alt=\"poster-pic\"\r\n                                    />\r\n                                    {\"  \"}\r\n                                    {!isEmpty(usersData[0]) &&\r\n                                        usersData\r\n                                            .map((user) => {\r\n                                                if (user._id === post.posterId) return user.pseudo;\r\n                                                else return null;\r\n                                            })\r\n                                            .join(\"\")}\r\n                                    <div className=\"col-sm\" style={{textAlign:'right'}}>\r\n                                                <img src=\"./img/camera.png\" title=\"Prise de vue locataire\"/>\r\n                                        \r\n                                        </div>\r\n\r\n\r\n                                </h6>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                    <div>\r\n                                        <h4>{post.titre}</h4>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-sm\">\r\n                                        {uid ? (\r\n                                            <div>\r\n                                                {post.picture && (\r\n                                                    <img height=\"200\" width=\"100%\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\r\n                                                )}\r\n                                                {post.video && (\r\n                                                    <iframe\r\n                                                        width=\"100%\"\r\n                                                        height=\"200\"\r\n                                                        src={post.video}\r\n                                                        frameBorder=\"0\"\r\n                                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                                        allowFullScreen\r\n                                                        title={post._id}\r\n                                                    ></iframe>\r\n                                                )}\r\n                                            </div>\r\n                                        ) : (\r\n                                            <>\r\n\r\n                                                {post.picture && (\r\n                                                    <img height=\"200\" width=\"100%\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\r\n                                                )}\r\n                                                {post.video && (\r\n                                                    <iframe\r\n                                                        width=\"100%\"\r\n                                                        height=\"200\"\r\n                                                        src={post.video}\r\n                                                        frameBorder=\"0\"\r\n                                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                                        allowFullScreen\r\n                                                        title={post._id}\r\n                                                    ></iframe>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n\r\n\r\n\r\n\r\n\r\n                                        {isUpdated && (\r\n                                            <div className=\"update-post\">\r\n                                                <textarea\r\n                                                    defaultValue={post.message}\r\n                                                    onChange={(e) => setTextUpdate(e.target.value)}\r\n                                                />\r\n                                                <div className=\"button-container\">\r\n                                                    <button className=\"btn\" onClick={updateItem}>\r\n                                                        Valider modification\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:\"12px\", fontWeight:\"bold\"}}>Publiée le {dateParser(post.createdAt)}</span>\r\n                                        \r\n                                        {isUpdated === false && <p>{post.message}</p>}\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        <span style={{fontSize:'12px'}}>commentaire </span>\r\n                                            <i onClick={() => setShowComments(!showComments)} className=\"fas fa-comment\"></i>  {post.comments.length}\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>j'aime </span>\r\n                                        <i className=\"fas fa-star\"></i>  {post.likers.length}\r\n                                       \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>voir </span>\r\n                                            <i className=\"fas fa-eye\"></i>\r\n                                       \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                        {(\r\n                                            <div className=\"button-container\">\r\n                                                \r\n                                                <DeleteCard id={post._id} />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>status : {status()}</span>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                {showComments && <CardComments post={post} />}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </li>\r\n            </MDBCard>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardAdmin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Ajout_admin.js",["438","439"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ListAdmin from \"./ListAdmin\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst Ajout_admin = () => {\r\n  const [formSubmit, setFormSubmit] = useState(false);\r\n  const [pseudo, setPseudo] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [controlPassword, setControlPassword] = useState(\"\");\r\n  const role = \"administrateur\"\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    const pseudoError = document.querySelector(\".pseudo.error\");\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n    const passwordConfirmError = document.querySelector(\r\n      \".password-confirm.error\"\r\n    );\r\n\r\n    passwordConfirmError.innerHTML = \"\";\r\n\r\n    if (password !== controlPassword) {\r\n      if (password !== controlPassword)\r\n        passwordConfirmError.innerHTML =\r\n          \"Les mots de passe ne correspondent pas\";\r\n    } else {\r\n      await axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_API_URL}api/user/register`,\r\n        data: {\r\n          pseudo,\r\n          email,\r\n          password,\r\n          role,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.errors) {\r\n            pseudoError.innerHTML = res.data.errors.pseudo;\r\n            emailError.innerHTML = res.data.errors.email;\r\n            passwordError.innerHTML = res.data.errors.password;\r\n          } else {\r\n            setFormSubmit(true);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {formSubmit ? (\r\n                        <>\r\n                        <h4 className=\"success\" style={{textAlign:'center', paddingTop:'15%'}}>\r\n                            Ajout réussi!\r\n                        </h4>\r\n                        <div class=\"success-animation\">\r\n                            <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"><circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" /><path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" /></svg>\r\n                        </div>\r\n                        \r\n                        <span></span>\r\n                        </>\r\n                    ) : (\r\n                    <MDBContainer>\r\n                        <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBCard>\r\n                            <MDBCardBody >\r\n                                <form action=\"\" onSubmit={handleRegister} id=\"sign-up-form\">\r\n                                <p className=\"h4 text-center py-4\">Nouveau Administrateur</p>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput\r\n                                    htmlFor=\"pseudo\"\r\n                                    label=\"Pseudo\"\r\n                                    icon=\"user\"\r\n                                    type=\"text\"\r\n                                    name=\"pseudo\"\r\n                                    id=\"pseudo\"\r\n                                    onChange={(e) => setPseudo(e.target.value)}\r\n                                    value={pseudo}\r\n                                    />\r\n                                    <div className=\"pseudo error\"></div>\r\n                                    <MDBInput\r\n                                    htmlFor=\"email\"\r\n                                    label=\"Email\"\r\n                                    icon=\"envelope\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    value={email}\r\n                                    />\r\n                                    <div className=\"email error\"></div>\r\n                                    <MDBInput\r\n                                    htmlFor=\"password\"\r\n                                    label=\"Mot de passe\"\r\n                                    icon=\"lock\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    value={password}\r\n                                    />\r\n                                    <div className=\"password error\"></div>\r\n                                    <MDBInput\r\n                                    htmlFor=\"password-conf\"\r\n                                    label=\"Confirmation mot de passe\"\r\n                                    icon=\"exclamation-triangle\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password-conf\"\r\n                                    onChange={(e) => setControlPassword(e.target.value)}\r\n                                    value={controlPassword}\r\n                                    />\r\n                                    <div className=\"password-confirm error\"></div>\r\n                                    \r\n                                </div>\r\n                                <div className=\"text-center py-4 mt-3\">\r\n                                    <MDBBtn type=\"submit\" >\r\n                                    Valider\r\n                                    </MDBBtn>\r\n                                </div>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ajout_admin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\ListAdmin.js",["440","441","442","443"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\nconst ListAdmin = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const posts = useSelector((state) => state.postReducer);\r\n    const dispatch = useDispatch();\r\n    const deleteQuote = id => dispatch(deleteUser(id));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <br />\r\n                    <h1>Liste des Administrateurs\r\n                        <div style={{textAlign:'right', paddingRight:'30px'}}>\r\n                            <NavLink exact to=\"/ajout_admin\">\r\n                                <i className=\"fas fa-plus\" title=\"Ajouter\"></i>\r\n                            </NavLink>   \r\n                        </div>\r\n                    </h1>\r\n                    \r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"administrateur\") {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>\r\n                                                \r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <a style={{ color: 'black' }} href={`/user_view/${user._id}`} >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </a>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    ) }\r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ListAdmin;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Bestof.js",["444","445"],"import React, { useContext, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { UidContext } from \"../components/UserIdConnect\";\nimport { isEmpty } from \"../components/Utilitaires\";\nimport Card from \"../components/Post/Card\";\nimport Dropdown from '../components/PageAccueil/Dropdown';\nimport NavBar from '../components/PageAccueil/NavBar';\n\nconst Bestof = () => {\n  const uid = useContext(UidContext);\n  const trendList = useSelector((state) => state.bestofReducer);\n  const userData = useSelector((state) => state.userReducer);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n  <>\n  <NavBar toggle={toggle}/>\n  <Dropdown isOpen={isOpen} toggle={toggle}/>\n  <div className=\"container\" style={{paddingTop:'10%'}}>\n    <div className=\"row\">\n      <div className=\"col-1\">\n     \n      </div>  \n      <div className=\"col-11\">\n        <br/>\n        <p>Nos Best of</p>\n        <ul>\n          {!isEmpty(trendList[0]) && trendList.map((post) => <Card post={post} key={post._id} />)}\n        </ul>\n      </div>\n      </div>\n    \n  </div>\n  </>\n  );\n};\n\nexport default Bestof;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\bestof.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\postAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\userAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\usersAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdateInfoProfil.js",["446","447","448","449","450","451"],"import React, { useState } from \"react\";\nimport LeftNav from \"../LeftNav\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UpdatePicture from \"./UpdatePicture\";\nimport { dateParser } from \"../Utilitaires\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\n\n\nconst UpdateInfoProfil = () => {\n  const userData = useSelector((state) => state.userReducer);\n  const error = useSelector((state) => state.errorReducer.userError);\n\n  \n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-1\">\n            \n          </div>\n          <br/>\n          <div className=\"col-11\" style={{paddingTop:'10%'}}>\n            <MDBContainer><bcomplexe r />\n              <MDBRow>\n\n                <MDBCol md=\"12\">\n                  <MDBCard>\n                    <MDBCardBody>\n                      <h1> Profil de {userData.pseudo}</h1>\n                      <h6>Compte créé le : {dateParser(userData.createdAt)}</h6>\n                      <h6>Pseudo: {userData.pseudo}</h6>\n                      <h6>Email: {userData.email}</h6>\n                      <div className=\"row\">\n                        <div className=\"col-12\">\n                          <div className=\"left-part\">\n                            <img height=\"30%\" width=\"100%\"\n                              style={{borderRadius:'30px', border: '2px solid #ff7979'}}\n                              src={userData.picture} alt=\"user-pic\" />\n                            <UpdatePicture />\n                            <p>{error.maxSize}</p>\n                            <p>{error.format}</p>\n                          </div>\n                        </div>\n                      </div>\n                    </MDBCardBody>\n                  </MDBCard>\n                </MDBCol>\n              </MDBRow>\n            </MDBContainer>\n          </div>\n\n          </div>\n      </div>\n    )\n};\n\nexport default UpdateInfoProfil;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdatePicture.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\UserIdConnect.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Utilitaires.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\posts.reducres.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Post_pro.js",["452","453","454","455"],"import React, { useContext, useState } from \"react\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ThreadsPro from \"../components/ThreadsPro\";\r\nimport NavBarPro from \"../components/PageAccueil/NavBarPro\";\r\nimport DropdownPro from \"../components/PageAccueil/DropdownPro\";\r\n\r\n\r\nconst Post_pro = () => {\r\n  const uid = useContext(UidContext);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const [state, setState] = useState({\r\n    isSearching: false,\r\n    active:\"search\",\r\n    post:[{}, {}],\r\n    query: \"\"\r\n  });\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n    <NavBarPro toggle={toggle}/>\r\n    <DropdownPro isOpen={isOpen} toggle={toggle}/>\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-1\">\r\n        </div>\r\n        <div className=\"col-10\"  style={{paddingTop:'10%'}}>\r\n          <br/>\r\n          <h1>Mes posts</h1>\r\n          <ThreadsPro />\r\n        </div>\r\n        <div className=\"col-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post_pro;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadsPro.js",["456"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/postAction\";\r\nimport Card from \"./Post/Card\";\r\nimport { isEmpty } from \"./Utilitaires\";\r\n\r\nconst ThreadsPro = () => {\r\n  const [loadPost, setLoadPost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const loadMore = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n      setLoadPost(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      dispatch(getPosts(count));\r\n      setLoadPost(false);\r\n      setCount(count + 5);\r\n    }\r\n\r\n    window.addEventListener('scroll', loadMore);\r\n    return () => window.removeEventListener('scroll', loadMore);\r\n  }, [loadPost, dispatch, count]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n              if (post.posterId === userData._id) {\r\n                return <Card post={post} key={post._id} />;\r\n              }\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadsPro;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Mes_reservations.js",["457","458","459","460","461"],"import React, { useContext, useState } from \"react\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport Navbar from \"../components/Navbar\"\r\nimport { useSelector } from \"react-redux\";\r\nimport ThreadClient from \"../components/ThreadClient\";\r\nimport Dropdown from '../components/PageAccueil/Dropdown';\r\nimport NavBar from '../components/PageAccueil/NavBar';\r\n\r\n\r\nconst Mes_reservations = () => {\r\n  const uid = useContext(UidContext);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => {\r\n      setIsOpen(!isOpen);\r\n    };\r\n  const [state, setState] = useState({\r\n    isSearching: false,\r\n    active:\"search\",\r\n    post:[{}, {}],\r\n    query: \"\"\r\n  });\r\n\r\n \r\n  return (\r\n    <>\r\n    <NavBar toggle={toggle}/>\r\n    <Dropdown isOpen={isOpen} toggle={toggle}/>\r\n    <div className=\"container\" style={{paddingTop:'10%'}}>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <br/>\r\n          <p>Liste de mes reservations</p>\r\n          <ThreadClient />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mes_reservations;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadClient.js",["462"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/postAction\";\r\nimport Card from \"./Post/Card\";\r\nimport { isEmpty } from \"./Utilitaires\";\r\n\r\nconst ThreadClient = () => {\r\n  const [loadPost, setLoadPost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const loadMore = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n      setLoadPost(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      dispatch(getPosts(count));\r\n      setLoadPost(false);\r\n      setCount(count + 5);\r\n    }\r\n\r\n    window.addEventListener('scroll', loadMore);\r\n    return () => window.removeEventListener('scroll', loadMore);\r\n  }, [loadPost, dispatch, count]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n              if ((post.clientId === userData._id) && (post.status !== \"refusé\")) {\r\n                return <Card post={post} key={post._id} />;\r\n              }\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadClient;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\page_accueil\\Accueil.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\page_accueil\\globalStyles.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\data\\InfoData.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\data\\SliderData.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\Hero.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\Dropdown.js",["463"],"import React, {useContext} from 'react'\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport styled from 'styled-components'\r\nimport { menuData, menuDataLocaitaire } from '../../data/MenuData';\r\nimport { Button } from './Button';\r\nimport {Link} from 'react-router-dom';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { useSelector } from 'react-redux';\r\nimport Logout from '../Log/Logout';\r\n\r\n\r\nconst DropdownContainer = styled.div`\r\n    position: fixed;\r\n    z-index: 999;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #cd853f;\r\n    display: grid;\r\n    align-items: center;\r\n    top: 0;\r\n    left: 0;\r\n    transition: 0.3s ease-in-out;\r\n    opacity: ${({isOpen}) => (isOpen ? '1' : '0')};\r\n    top: ${({isOpen}) => (isOpen ? '0' : '-100%')};\r\n`;\r\n\r\nconst Icon = styled.div`\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 1.5rem;\r\n    background: transparent;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n\r\nconst CloseIcon = styled(FaTimes)`\r\n    color: #000d1a;\r\n`;\r\nconst DropdownWrapper = styled.div`\r\n\r\n`;\r\nconst DropdownMenu = styled.div`\r\n    display: grid;\r\n    grid-template-colunms: 1fr;\r\n    grid-template-rows: repeat(4, 80px);\r\n    text-align: center;\r\n    margin-bottom: 4rem;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        grid-template-rows: repeat(4, 60px);\r\n    }\r\n`;\r\nconst DropdownLink = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #fff\r\n    font-size: 1.5rem;\r\n    text-decoration: none;\r\n    list-style: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: 0.2s ease-in-out;\r\n\r\n    &:hover {\r\n        color: #000d1a;\r\n    }\r\n`;\r\nconst BtnWrap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Dropdown = ({isOpen, toggle}) => {\r\n\r\n    const uid = useContext(UidContext);\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <DropdownContainer isOpen={isOpen} onClick={toggle}>\r\n            <Icon onClick={toggle}>\r\n                <CloseIcon />\r\n            </Icon>\r\n            <DropdownWrapper>\r\n                <DropdownMenu>\r\n                {uid ? (\r\n                menuDataLocaitaire.map((item, index) => (\r\n                <DropdownLink to= {item.link}  key={index}>\r\n                    {item.title}\r\n                </DropdownLink>\r\n                ))) : (\r\n                menuData.map((item, index) => (\r\n                    <DropdownLink to= {item.link}  key={index}>\r\n                        {item.title}\r\n                    </DropdownLink>\r\n                ))) }\r\n                 {uid ? (\r\n                     <div style={{paddingRight:'40%'}}>\r\n                          <Logout />\r\n                     </div>\r\n                   \r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n                </DropdownMenu>\r\n                <BtnWrap>\r\n                    <Button primary=\"true\" round=\"true\" to=\"/home\">\r\n                        Home\r\n                    </Button>\r\n                </BtnWrap>\r\n            </DropdownWrapper>\r\n        </DropdownContainer>\r\n    )\r\n}\r\n\r\nexport default Dropdown\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\InfoSection.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\NavBar.js",["464"],"import React, { useContext } from 'react'\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport styled, { css } from \"styled-components/macro\"\r\nimport {Link}  from 'react-router-dom'\r\nimport { menuData, menuDataLocaitaire } from '../../data/MenuData';\r\nimport { Button } from './Button';\r\nimport { FaBars } from 'react-icons/fa';\r\nimport Logout from '../Log/Logout';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Nav = styled.nav`\r\n    height : 60px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 1rem 2rem;\r\n    z-index: 100;\r\n    position: fixed;\r\n    width: 100%;\r\n`;\r\n\r\nconst NavLink = css`\r\n    color: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 1rem;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n`\r\n\r\n\r\nconst Logo = styled(Link)`\r\n    ${NavLink}\r\n    \r\n\r\n`\r\n\r\nconst MenuBars = styled(FaBars)`\r\n    display: none;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n    display : flex;\r\n    align-items: center;\r\n    margin-right: -48px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst NavMenuLinks = styled(Link)`\r\n    ${NavLink}\r\n`;\r\n\r\nconst NavBtn = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 24px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst NavBar = ({toggle}) => {\r\n\r\n    const uid = useContext(UidContext);\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <Nav>\r\n            <Logo to='/accueil'><h3 style={{ color: 'white', fontFamily: 'fantasy' }}>AtypikHouse</h3></Logo>\r\n            <MenuBars onClick={toggle}/>\r\n            <NavMenu>\r\n            {uid ? (\r\n                menuDataLocaitaire.map((item, index) => (\r\n                <NavMenuLinks to= {item.link}  key={index}>\r\n                    {item.title}\r\n                </NavMenuLinks>\r\n                ))) : (\r\n                menuData.map((item, index) => (\r\n                    <NavMenuLinks to= {item.link}  key={index}>\r\n                        {item.title}\r\n                    </NavMenuLinks>\r\n                ))) }\r\n                {uid ? (\r\n                    <Logout />\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n            </NavMenu>\r\n            <NavBtn>\r\n                <Button to=\"/home\" primary='true'>Home</Button>\r\n            </NavBtn>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\Button.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\data\\MenuData.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\NavBarPro.js",["465","466"],"import React, { useContext } from 'react'\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport styled, { css } from \"styled-components/macro\"\r\nimport {Link}  from 'react-router-dom'\r\nimport { menuData, menuDataLocaitaire, menuDataPro } from '../../data/MenuData';\r\nimport { Button } from './Button';\r\nimport { FaBars } from 'react-icons/fa';\r\nimport Logout from '../Log/Logout';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Nav = styled.nav`\r\n    height : 60px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 1rem 2rem;\r\n    z-index: 100;\r\n    position: fixed;\r\n    width: 100%;\r\n`;\r\n\r\nconst NavLink = css`\r\n    color: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 1rem;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n`\r\n\r\n\r\nconst Logo = styled(Link)`\r\n    ${NavLink}\r\n    \r\n\r\n`\r\n\r\nconst MenuBars = styled(FaBars)`\r\n    display: none;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n    display : flex;\r\n    align-items: center;\r\n    margin-right: -48px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst NavMenuLinks = styled(Link)`\r\n    ${NavLink}\r\n`;\r\n\r\nconst NavBtn = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 24px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst NavBarPro = ({toggle}) => {\r\n\r\n    const uid = useContext(UidContext);\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <Nav>\r\n            <Logo><h3 style={{ color: 'white', fontFamily: 'fantasy' }}>AtypikHouse</h3></Logo>\r\n            <MenuBars onClick={toggle}/>\r\n            <NavMenu>\r\n            {uid ? (\r\n                menuDataPro.map((item, index) => (\r\n                <NavMenuLinks to= {item.link}  key={index}>\r\n                    {item.title}\r\n                </NavMenuLinks>\r\n                ))) : (\r\n                menuData.map((item, index) => (\r\n                    <NavMenuLinks to= {item.link}  key={index}>\r\n                        {item.title}\r\n                    </NavMenuLinks>\r\n                ))) }\r\n                {uid ? (\r\n                    <Logout />\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n            </NavMenu>\r\n            <NavBtn>\r\n                <Button to=\"/homepro\" primary='true'>Home</Button>\r\n            </NavBtn>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default NavBarPro\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\HomePro.js",["467","468","469","470","471","472"],"import React, { useContext, useState } from \"react\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport LeftNav from \"../components/LeftNav\";\r\nimport Thread from \"../components/Thread\";\r\nimport Trends from \"../components/Trends\";\r\nimport SearchForm from \"../components/Post/SearchForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Dropdown from '../components/PageAccueil/Dropdown';\r\nimport NavBarPro from \"../components/PageAccueil/NavBarPro\";\r\nimport DropdownPro from \"../components/PageAccueil/DropdownPro\";\r\n\r\nconst HomePro = () => {\r\n  const uid = useContext(UidContext);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const [state, setState] = useState({\r\n    isSearching: false,\r\n    active:\"search\",\r\n    post:[{}, {}],\r\n    query: \"\"\r\n  });\r\n\r\n  const onTextChange = input => {\r\n    setState({ ...state, isSearching : input.length > 0})\r\n    console.log(input)\r\n  }\r\n\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <NavBarPro toggle={toggle}/>\r\n    <DropdownPro isOpen={isOpen} toggle={toggle}/>\r\n    <div className=\"container\" style={{paddingTop:'10%'}}>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <br/>\r\n          <SearchForm/>\r\n          <hr/>\r\n          <Thread />\r\n        </div>\r\n        <div className=\"\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePro;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\PageAccueil\\DropdownPro.js",["473","474"],"import React, {useContext} from 'react'\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport styled from 'styled-components'\r\nimport { menuData, menuDataLocaitaire, menuDataPro } from '../../data/MenuData';\r\nimport { Button } from './Button';\r\nimport {Link} from 'react-router-dom';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { useSelector } from 'react-redux';\r\nimport Logout from '../Log/Logout';\r\n\r\n\r\nconst DropdownContainer = styled.div`\r\n    position: fixed;\r\n    z-index: 999;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #cd853f;\r\n    display: grid;\r\n    align-items: center;\r\n    top: 0;\r\n    left: 0;\r\n    transition: 0.3s ease-in-out;\r\n    opacity: ${({isOpen}) => (isOpen ? '1' : '0')};\r\n    top: ${({isOpen}) => (isOpen ? '0' : '-100%')};\r\n`;\r\n\r\nconst Icon = styled.div`\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 1.5rem;\r\n    background: transparent;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n\r\nconst CloseIcon = styled(FaTimes)`\r\n    color: #000d1a;\r\n`;\r\nconst DropdownWrapper = styled.div`\r\n\r\n`;\r\nconst DropdownMenu = styled.div`\r\n    display: grid;\r\n    grid-template-colunms: 1fr;\r\n    grid-template-rows: repeat(4, 80px);\r\n    text-align: center;\r\n    margin-bottom: 4rem;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        grid-template-rows: repeat(4, 60px);\r\n    }\r\n`;\r\nconst DropdownLink = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #fff\r\n    font-size: 1.5rem;\r\n    text-decoration: none;\r\n    list-style: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: 0.2s ease-in-out;\r\n\r\n    &:hover {\r\n        color: #000d1a;\r\n    }\r\n`;\r\nconst BtnWrap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst DropdownPro = ({isOpen, toggle}) => {\r\n\r\n    const uid = useContext(UidContext);\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <DropdownContainer isOpen={isOpen} onClick={toggle}>\r\n            <Icon onClick={toggle}>\r\n                <CloseIcon />\r\n            </Icon>\r\n            <DropdownWrapper>\r\n                <DropdownMenu>\r\n                {uid ? (\r\n                menuDataPro.map((item, index) => (\r\n                <DropdownLink to= {item.link}  key={index}>\r\n                    {item.title}\r\n                </DropdownLink>\r\n                ))) : (\r\n                menuData.map((item, index) => (\r\n                    <DropdownLink to= {item.link}  key={index}>\r\n                        {item.title}\r\n                    </DropdownLink>\r\n                ))) }\r\n                 {uid ? (\r\n                     <div style={{paddingRight:'40%'}}>\r\n                          <Logout />\r\n                     </div>\r\n                   \r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n                </DropdownMenu>\r\n                <BtnWrap>\r\n                    <Button primary=\"true\" round=\"true\" to=\"/homepro\">\r\n                        Home\r\n                    </Button>\r\n                </BtnWrap>\r\n            </DropdownWrapper>\r\n        </DropdownContainer>\r\n    )\r\n}\r\n\r\nexport default DropdownPro\r\n",{"ruleId":"475","replacedBy":"476"},{"ruleId":"477","replacedBy":"478"},{"ruleId":"479","severity":1,"message":"480","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":15},{"ruleId":"479","severity":1,"message":"483","line":12,"column":9,"nodeType":"481","messageId":"482","endLine":12,"endColumn":12},{"ruleId":"479","severity":1,"message":"484","line":13,"column":9,"nodeType":"481","messageId":"482","endLine":13,"endColumn":17},{"ruleId":"479","severity":1,"message":"485","line":21,"column":9,"nodeType":"481","messageId":"482","endLine":21,"endColumn":21},{"ruleId":"479","severity":1,"message":"486","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":18},{"ruleId":"479","severity":1,"message":"487","line":10,"column":16,"nodeType":"481","messageId":"482","endLine":10,"endColumn":23},{"ruleId":"488","severity":1,"message":"489","line":34,"column":28,"nodeType":"490","messageId":"491","endLine":34,"endColumn":30},{"ruleId":"479","severity":1,"message":"492","line":9,"column":10,"nodeType":"481","messageId":"482","endLine":9,"endColumn":16},{"ruleId":"488","severity":1,"message":"489","line":146,"column":42,"nodeType":"490","messageId":"491","endLine":146,"endColumn":44},{"ruleId":"493","severity":1,"message":"494","line":153,"column":45,"nodeType":"495","endLine":153,"endColumn":73},{"ruleId":"493","severity":1,"message":"494","line":156,"column":45,"nodeType":"495","endLine":156,"endColumn":73},{"ruleId":"493","severity":1,"message":"494","line":159,"column":45,"nodeType":"495","endLine":159,"endColumn":75},{"ruleId":"493","severity":1,"message":"494","line":212,"column":25,"nodeType":"495","endLine":212,"endColumn":85},{"ruleId":"479","severity":1,"message":"496","line":6,"column":80,"nodeType":"481","messageId":"482","endLine":6,"endColumn":94},{"ruleId":"497","severity":1,"message":"498","line":223,"column":19,"nodeType":"499","endLine":223,"endColumn":31},{"ruleId":"500","severity":1,"message":"501","line":57,"column":19,"nodeType":"495","endLine":57,"endColumn":23},{"ruleId":"479","severity":1,"message":"480","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":15},{"ruleId":"479","severity":1,"message":"480","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":15},{"ruleId":"479","severity":1,"message":"502","line":4,"column":8,"nodeType":"481","messageId":"482","endLine":4,"endColumn":18},{"ruleId":"479","severity":1,"message":"503","line":5,"column":8,"nodeType":"481","messageId":"482","endLine":5,"endColumn":14},{"ruleId":"479","severity":1,"message":"504","line":6,"column":40,"nodeType":"481","messageId":"482","endLine":6,"endColumn":48},{"ruleId":"479","severity":1,"message":"496","line":6,"column":80,"nodeType":"481","messageId":"482","endLine":6,"endColumn":94},{"ruleId":"479","severity":1,"message":"483","line":11,"column":9,"nodeType":"481","messageId":"482","endLine":11,"endColumn":12},{"ruleId":"479","severity":1,"message":"485","line":18,"column":9,"nodeType":"481","messageId":"482","endLine":18,"endColumn":21},{"ruleId":"479","severity":1,"message":"492","line":1,"column":10,"nodeType":"481","messageId":"482","endLine":1,"endColumn":16},{"ruleId":"479","severity":1,"message":"505","line":4,"column":10,"nodeType":"481","messageId":"482","endLine":4,"endColumn":20},{"ruleId":"488","severity":1,"message":"489","line":50,"column":28,"nodeType":"490","messageId":"491","endLine":50,"endColumn":30},{"ruleId":"506","severity":1,"message":"507","line":12,"column":1,"nodeType":"508","endLine":12,"endColumn":26},{"ruleId":"479","severity":1,"message":"480","line":2,"column":8,"nodeType":"481","messageId":"482","endLine":2,"endColumn":15},{"ruleId":"479","severity":1,"message":"509","line":4,"column":8,"nodeType":"481","messageId":"482","endLine":4,"endColumn":14},{"ruleId":"479","severity":1,"message":"510","line":6,"column":8,"nodeType":"481","messageId":"482","endLine":6,"endColumn":16},{"ruleId":"479","severity":1,"message":"484","line":12,"column":9,"nodeType":"481","messageId":"482","endLine":12,"endColumn":17},{"ruleId":"479","severity":1,"message":"511","line":12,"column":9,"nodeType":"481","messageId":"482","endLine":12,"endColumn":18},{"ruleId":"488","severity":1,"message":"489","line":36,"column":28,"nodeType":"490","messageId":"491","endLine":36,"endColumn":30},{"ruleId":"479","severity":1,"message":"512","line":1,"column":8,"nodeType":"481","messageId":"482","endLine":1,"endColumn":13},{"ruleId":"479","severity":1,"message":"513","line":18,"column":10,"nodeType":"481","messageId":"482","endLine":18,"endColumn":19},{"ruleId":"514","severity":1,"message":"515","line":23,"column":5,"nodeType":"516","messageId":"517","endLine":29,"endColumn":6},{"ruleId":"488","severity":1,"message":"518","line":24,"column":24,"nodeType":"490","messageId":"519","endLine":24,"endColumn":26},{"ruleId":"479","severity":1,"message":"520","line":38,"column":16,"nodeType":"481","messageId":"482","endLine":38,"endColumn":23},{"ruleId":"479","severity":1,"message":"521","line":79,"column":9,"nodeType":"481","messageId":"482","endLine":79,"endColumn":20},{"ruleId":"479","severity":1,"message":"522","line":102,"column":9,"nodeType":"481","messageId":"482","endLine":102,"endColumn":17},{"ruleId":"488","severity":1,"message":"489","line":136,"column":54,"nodeType":"490","messageId":"491","endLine":136,"endColumn":56},{"ruleId":"488","severity":1,"message":"489","line":194,"column":56,"nodeType":"490","messageId":"491","endLine":194,"endColumn":58},{"ruleId":"488","severity":1,"message":"489","line":198,"column":68,"nodeType":"490","messageId":"491","endLine":198,"endColumn":70},{"ruleId":"488","severity":1,"message":"489","line":215,"column":54,"nodeType":"490","messageId":"491","endLine":215,"endColumn":56},{"ruleId":"488","severity":1,"message":"489","line":219,"column":66,"nodeType":"490","messageId":"491","endLine":219,"endColumn":68},{"ruleId":"523","severity":1,"message":"524","line":31,"column":19,"nodeType":"495","endLine":31,"endColumn":61},{"ruleId":"479","severity":1,"message":"486","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":18},{"ruleId":"479","severity":1,"message":"486","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":18},{"ruleId":"475","replacedBy":"525"},{"ruleId":"477","replacedBy":"526"},{"ruleId":"479","severity":1,"message":"527","line":9,"column":11,"nodeType":"481","messageId":"482","endLine":9,"endColumn":16},{"ruleId":"479","severity":1,"message":"513","line":10,"column":12,"nodeType":"481","messageId":"482","endLine":10,"endColumn":21},{"ruleId":"523","severity":1,"message":"528","line":31,"column":19,"nodeType":"495","endLine":31,"endColumn":63},{"ruleId":"479","severity":1,"message":"529","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":21},{"ruleId":"488","severity":1,"message":"489","line":57,"column":54,"nodeType":"490","messageId":"491","endLine":57,"endColumn":56},{"ruleId":"488","severity":1,"message":"489","line":70,"column":70,"nodeType":"490","messageId":"491","endLine":70,"endColumn":72},{"ruleId":"488","severity":1,"message":"518","line":72,"column":60,"nodeType":"530","messageId":"531","endLine":72,"endColumn":66},{"ruleId":"479","severity":1,"message":"532","line":1,"column":10,"nodeType":"481","messageId":"482","endLine":1,"endColumn":17},{"ruleId":"479","severity":1,"message":"533","line":2,"column":18,"nodeType":"481","messageId":"482","endLine":2,"endColumn":25},{"ruleId":"488","severity":1,"message":"489","line":55,"column":54,"nodeType":"490","messageId":"491","endLine":55,"endColumn":56},{"ruleId":"479","severity":1,"message":"504","line":3,"column":40,"nodeType":"481","messageId":"482","endLine":3,"endColumn":48},{"ruleId":"479","severity":1,"message":"492","line":3,"column":50,"nodeType":"481","messageId":"482","endLine":3,"endColumn":56},{"ruleId":"479","severity":1,"message":"496","line":3,"column":80,"nodeType":"481","messageId":"482","endLine":3,"endColumn":94},{"ruleId":"488","severity":1,"message":"489","line":24,"column":63,"nodeType":"490","messageId":"491","endLine":24,"endColumn":65},{"ruleId":"479","severity":1,"message":"534","line":4,"column":8,"nodeType":"481","messageId":"482","endLine":4,"endColumn":18},{"ruleId":"479","severity":1,"message":"535","line":10,"column":8,"nodeType":"481","messageId":"482","endLine":10,"endColumn":13},{"ruleId":"479","severity":1,"message":"484","line":20,"column":11,"nodeType":"481","messageId":"482","endLine":20,"endColumn":19},{"ruleId":"493","severity":1,"message":"494","line":80,"column":49,"nodeType":"495","endLine":80,"endColumn":109},{"ruleId":"479","severity":1,"message":"496","line":4,"column":80,"nodeType":"481","messageId":"482","endLine":4,"endColumn":94},{"ruleId":"479","severity":1,"message":"536","line":7,"column":8,"nodeType":"481","messageId":"482","endLine":7,"endColumn":17},{"ruleId":"479","severity":1,"message":"509","line":9,"column":8,"nodeType":"481","messageId":"482","endLine":9,"endColumn":14},{"ruleId":"479","severity":1,"message":"527","line":15,"column":11,"nodeType":"481","messageId":"482","endLine":15,"endColumn":16},{"ruleId":"479","severity":1,"message":"537","line":17,"column":11,"nodeType":"481","messageId":"482","endLine":17,"endColumn":22},{"ruleId":"488","severity":1,"message":"489","line":64,"column":54,"nodeType":"490","messageId":"491","endLine":64,"endColumn":56},{"ruleId":"479","severity":1,"message":"483","line":10,"column":9,"nodeType":"481","messageId":"482","endLine":10,"endColumn":12},{"ruleId":"479","severity":1,"message":"484","line":12,"column":9,"nodeType":"481","messageId":"482","endLine":12,"endColumn":17},{"ruleId":"479","severity":1,"message":"538","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":25},{"ruleId":"479","severity":1,"message":"480","line":2,"column":8,"nodeType":"481","messageId":"482","endLine":2,"endColumn":15},{"ruleId":"479","severity":1,"message":"539","line":3,"column":10,"nodeType":"481","messageId":"482","endLine":3,"endColumn":21},{"ruleId":"479","severity":1,"message":"504","line":6,"column":40,"nodeType":"481","messageId":"482","endLine":6,"endColumn":48},{"ruleId":"479","severity":1,"message":"492","line":6,"column":50,"nodeType":"481","messageId":"482","endLine":6,"endColumn":56},{"ruleId":"479","severity":1,"message":"496","line":6,"column":80,"nodeType":"481","messageId":"482","endLine":6,"endColumn":94},{"ruleId":"479","severity":1,"message":"483","line":10,"column":9,"nodeType":"481","messageId":"482","endLine":10,"endColumn":12},{"ruleId":"479","severity":1,"message":"484","line":11,"column":9,"nodeType":"481","messageId":"482","endLine":11,"endColumn":17},{"ruleId":"479","severity":1,"message":"540","line":12,"column":10,"nodeType":"481","messageId":"482","endLine":12,"endColumn":15},{"ruleId":"479","severity":1,"message":"541","line":12,"column":17,"nodeType":"481","messageId":"482","endLine":12,"endColumn":25},{"ruleId":"488","severity":1,"message":"489","line":35,"column":28,"nodeType":"490","messageId":"491","endLine":35,"endColumn":30},{"ruleId":"479","severity":1,"message":"509","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":14},{"ruleId":"479","severity":1,"message":"483","line":11,"column":9,"nodeType":"481","messageId":"482","endLine":11,"endColumn":12},{"ruleId":"479","severity":1,"message":"484","line":12,"column":9,"nodeType":"481","messageId":"482","endLine":12,"endColumn":17},{"ruleId":"479","severity":1,"message":"540","line":18,"column":10,"nodeType":"481","messageId":"482","endLine":18,"endColumn":15},{"ruleId":"479","severity":1,"message":"541","line":18,"column":17,"nodeType":"481","messageId":"482","endLine":18,"endColumn":25},{"ruleId":"488","severity":1,"message":"489","line":35,"column":28,"nodeType":"490","messageId":"491","endLine":35,"endColumn":30},{"ruleId":"479","severity":1,"message":"484","line":78,"column":11,"nodeType":"481","messageId":"482","endLine":78,"endColumn":19},{"ruleId":"479","severity":1,"message":"484","line":73,"column":11,"nodeType":"481","messageId":"482","endLine":73,"endColumn":19},{"ruleId":"479","severity":1,"message":"542","line":5,"column":20,"nodeType":"481","messageId":"482","endLine":5,"endColumn":38},{"ruleId":"479","severity":1,"message":"484","line":73,"column":11,"nodeType":"481","messageId":"482","endLine":73,"endColumn":19},{"ruleId":"479","severity":1,"message":"480","line":3,"column":8,"nodeType":"481","messageId":"482","endLine":3,"endColumn":15},{"ruleId":"479","severity":1,"message":"543","line":5,"column":8,"nodeType":"481","messageId":"482","endLine":5,"endColumn":14},{"ruleId":"479","severity":1,"message":"510","line":8,"column":8,"nodeType":"481","messageId":"482","endLine":8,"endColumn":16},{"ruleId":"479","severity":1,"message":"483","line":13,"column":9,"nodeType":"481","messageId":"482","endLine":13,"endColumn":12},{"ruleId":"479","severity":1,"message":"484","line":14,"column":9,"nodeType":"481","messageId":"482","endLine":14,"endColumn":17},{"ruleId":"479","severity":1,"message":"485","line":22,"column":9,"nodeType":"481","messageId":"482","endLine":22,"endColumn":21},{"ruleId":"479","severity":1,"message":"542","line":4,"column":20,"nodeType":"481","messageId":"482","endLine":4,"endColumn":38},{"ruleId":"479","severity":1,"message":"484","line":78,"column":11,"nodeType":"481","messageId":"482","endLine":78,"endColumn":19},"no-native-reassign",["544"],"no-negated-in-lhs",["545"],"no-unused-vars","'LeftNav' is defined but never used.","Identifier","unusedVar","'uid' is assigned a value but never used.","'userData' is assigned a value but never used.","'onTextChange' is assigned a value but never used.","'SignUpForm' is defined but never used.","'setRole' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'MDBBtn' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MDBModalFooter' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'SearchForm' is defined but never used.","'Thread' is defined but never used.","'MDBInput' is defined but never used.","'dateParser' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Navbar' is defined but never used.","'Dropdown' is defined but never used.","'usersData' is assigned a value but never used.","'axios' is defined but never used.","'isLoading' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Array.prototype.map() expects a return value from arrow function.","expectedInside","'setPost' is assigned a value but never used.","'makePayment' is assigned a value but never used.","'infoPost' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Index_pro must be in PascalCase or SCREAMING_SNAKE_CASE",["544"],["545"],"'posts' is assigned a value but never used.","Imported JSX component Index_admin must be in PascalCase or SCREAMING_SNAKE_CASE","'useSelector' is defined but never used.","ReturnStatement","expectedReturnValue","'Tooltip' is defined but never used.","'MDBCard' is defined but never used.","'LikeButton' is defined but never used.","'Popup' is defined but never used.","'ListAdmin' is defined but never used.","'deleteQuote' is assigned a value but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'menuDataLocaitaire' is defined but never used.","'Trends' is defined but never used.","no-global-assign","no-unsafe-negation"]