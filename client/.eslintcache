[{"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Routes\\index.js":"3","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil.js":"4","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Home.js":"5","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\index.js":"6","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInForm.js":"7","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpForm.js":"8","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Navbar.js":"9","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Logout.js":"10","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\index.js":"11","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\user.reducer.js":"12","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Thread.js":"13","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\post.reducer.js":"14","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\users.reducer.js":"15","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\error.reducer.js":"16","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNav.js":"17","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Trends.js":"18","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Card.js":"19","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\NewPostForm.js":"20","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\LikeButton.js":"21","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\DeleteCard.js":"22","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardComments.js":"23","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\EditDeleteComment.js":"24","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Favoris.js":"25","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Search.js":"26","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\SearchForm.js":"27","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Results.js":"28","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Newpost.js":"29","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadsFavoris.js":"30","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Reservation.js":"31","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Chat.js":"32","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\ChatFeed.jsx":"33","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MyMessage.jsx":"34","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\TheirMessage.jsx":"35","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MessageForm.jsx":"36","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_pro.js":"37","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_pro.js":"38","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInProForm.js":"39","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpProForm.js":"40","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_admin.js":"41","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInAdminForm.js":"42","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpAdminForm.js":"43","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion.js":"44","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_admin.js":"45","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNavAdmin.js":"46","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pro.js":"47","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Parametres.js":"48","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_clients.js":"49","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\User_view.js":"50","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pubs.js":"51","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadAdmin.js":"52","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardAdmin.js":"53","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Ajout_admin.js":"54","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\ListAdmin.js":"55","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Bestof.js":"56","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\bestof.reducer.js":"57","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\postAction.js":"58","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\userAction.js":"59","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\usersAction.js":"60","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdateInfoProfil.js":"61","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdatePicture.js":"62","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\UserIdConnect.js":"63","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Utilitaires.js":"64","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\posts.reducres.js":"65","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Post_pro.js":"66","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadsPro.js":"67","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Mes_reservations.js":"68","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadClient.js":"69"},{"size":747,"mtime":1615395603597,"results":"70","hashOfConfig":"71"},{"size":882,"mtime":1615396131457,"results":"72","hashOfConfig":"71"},{"size":2641,"mtime":1615533887540,"results":"73","hashOfConfig":"71"},{"size":979,"mtime":1615396131431,"results":"74","hashOfConfig":"71"},{"size":1300,"mtime":1615398240894,"results":"75","hashOfConfig":"71"},{"size":1296,"mtime":1615397938072,"results":"76","hashOfConfig":"71"},{"size":2847,"mtime":1615397971832,"results":"77","hashOfConfig":"71"},{"size":5550,"mtime":1615400314292,"results":"78","hashOfConfig":"71"},{"size":3480,"mtime":1615533654001,"results":"79","hashOfConfig":"71"},{"size":727,"mtime":1615404014022,"results":"80","hashOfConfig":"71"},{"size":441,"mtime":1615396516908,"results":"81","hashOfConfig":"71"},{"size":604,"mtime":1615395553396,"results":"82","hashOfConfig":"71"},{"size":1259,"mtime":1615549376514,"results":"83","hashOfConfig":"71"},{"size":2318,"mtime":1615543422365,"results":"84","hashOfConfig":"71"},{"size":261,"mtime":1615395603597,"results":"85","hashOfConfig":"71"},{"size":515,"mtime":1615395553399,"results":"86","hashOfConfig":"71"},{"size":1369,"mtime":1615398187674,"results":"87","hashOfConfig":"71"},{"size":2385,"mtime":1615396301500,"results":"88","hashOfConfig":"71"},{"size":12964,"mtime":1615555773941,"results":"89","hashOfConfig":"71"},{"size":11499,"mtime":1615535176016,"results":"90","hashOfConfig":"71"},{"size":1417,"mtime":1615410656857,"results":"91","hashOfConfig":"71"},{"size":563,"mtime":1615493899650,"results":"92","hashOfConfig":"71"},{"size":2792,"mtime":1615396301502,"results":"93","hashOfConfig":"71"},{"size":2090,"mtime":1615396131435,"results":"94","hashOfConfig":"71"},{"size":900,"mtime":1615396131431,"results":"95","hashOfConfig":"71"},{"size":1939,"mtime":1615400462108,"results":"96","hashOfConfig":"71"},{"size":1847,"mtime":1615396301502,"results":"97","hashOfConfig":"71"},{"size":267,"mtime":1611210583320,"results":"98","hashOfConfig":"71"},{"size":774,"mtime":1615381034525,"results":"99","hashOfConfig":"71"},{"size":1478,"mtime":1615396301500,"results":"100","hashOfConfig":"71"},{"size":10156,"mtime":1615543808402,"results":"101","hashOfConfig":"71"},{"size":739,"mtime":1615122860160,"results":"102","hashOfConfig":"71"},{"size":2049,"mtime":1615018747870,"results":"103","hashOfConfig":"71"},{"size":549,"mtime":1615018190723,"results":"104","hashOfConfig":"71"},{"size":1048,"mtime":1615018217083,"results":"105","hashOfConfig":"71"},{"size":1506,"mtime":1615018154921,"results":"106","hashOfConfig":"71"},{"size":944,"mtime":1615396131431,"results":"107","hashOfConfig":"71"},{"size":1426,"mtime":1615398075620,"results":"108","hashOfConfig":"71"},{"size":2765,"mtime":1615398124350,"results":"109","hashOfConfig":"71"},{"size":5716,"mtime":1615401848488,"results":"110","hashOfConfig":"71"},{"size":271,"mtime":1615398291889,"results":"111","hashOfConfig":"71"},{"size":2905,"mtime":1615374614311,"results":"112","hashOfConfig":"71"},{"size":5655,"mtime":1615112459268,"results":"113","hashOfConfig":"71"},{"size":1391,"mtime":1615401076453,"results":"114","hashOfConfig":"71"},{"size":1057,"mtime":1615396131431,"results":"115","hashOfConfig":"71"},{"size":1298,"mtime":1615396131467,"results":"116","hashOfConfig":"71"},{"size":5832,"mtime":1615401408198,"results":"117","hashOfConfig":"71"},{"size":2779,"mtime":1615401648009,"results":"118","hashOfConfig":"71"},{"size":5213,"mtime":1615401335746,"results":"119","hashOfConfig":"71"},{"size":3154,"mtime":1615396301500,"results":"120","hashOfConfig":"71"},{"size":1354,"mtime":1615401540689,"results":"121","hashOfConfig":"71"},{"size":1214,"mtime":1615396301500,"results":"122","hashOfConfig":"71"},{"size":10501,"mtime":1615494136656,"results":"123","hashOfConfig":"71"},{"size":7014,"mtime":1615401192708,"results":"124","hashOfConfig":"71"},{"size":4529,"mtime":1615401748131,"results":"125","hashOfConfig":"71"},{"size":1078,"mtime":1615532033292,"results":"126","hashOfConfig":"71"},{"size":263,"mtime":1615395411697,"results":"127","hashOfConfig":"71"},{"size":5332,"mtime":1615543823538,"results":"128","hashOfConfig":"71"},{"size":1629,"mtime":1615397104245,"results":"129","hashOfConfig":"71"},{"size":360,"mtime":1615397085872,"results":"130","hashOfConfig":"71"},{"size":2109,"mtime":1615398593998,"results":"131","hashOfConfig":"71"},{"size":995,"mtime":1615395972178,"results":"132","hashOfConfig":"71"},{"size":82,"mtime":1615396162619,"results":"133","hashOfConfig":"71"},{"size":893,"mtime":1615396324670,"results":"134","hashOfConfig":"71"},{"size":270,"mtime":1615396536261,"results":"135","hashOfConfig":"71"},{"size":910,"mtime":1615472686698,"results":"136","hashOfConfig":"71"},{"size":1327,"mtime":1615555649597,"results":"137","hashOfConfig":"71"},{"size":948,"mtime":1615544105390,"results":"138","hashOfConfig":"71"},{"size":1364,"mtime":1615550613342,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1vvdbak",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"142"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"142"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"142"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"142"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"142"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"142"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"142"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"142"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"142"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"142"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"142"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"142"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"142"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"142"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"142"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"142"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"142"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"142"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"142"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"142"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"142"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"142"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"142"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\index.js",[],["303","304"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\App.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Routes\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Home.js",["305","306"],"import React, { useContext, useState } from \"react\";\nimport { UidContext } from \"../components/UserIdConnect\";\nimport LeftNav from \"../components/LeftNav\";\nimport Thread from \"../components/Thread\";\nimport Trends from \"../components/Trends\";\nimport SearchForm from \"../components/Post/SearchForm\";\nimport Navbar from \"../components/Navbar\"\nimport { useSelector } from \"react-redux\";\n\n\nconst Home = () => {\n  const uid = useContext(UidContext);\n  const userData = useSelector((state) => state.userReducer);\n  const [state, setState] = useState({\n    isSearching: false,\n    active:\"search\",\n    post:[{}, {}],\n    query: \"\"\n  });\n\n  const onTextChange = input => {\n    setState({ ...state, isSearching : input.length > 0})\n    console.log(input)\n  }\n\n  const afficheLeftNav = () =>\n  {\n    if (userData.role === 'client') {\n      return (\n        <LeftNav />\n      )\n    }\n  }\n\n  return (\n    <>\n    <Navbar />\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-1\">\n          {afficheLeftNav()}\n        </div>\n        <div className=\"col-7\">\n          <br/>\n          <SearchForm/>\n          <hr/>\n          <Thread />\n        </div>\n        <div className=\"col-4\">\n          <Trends />\n        </div>\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default Home;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInForm.js",["307","308"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport SignUpForm from \"./SignUpForm\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\n\nconst SignInForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const emailError = document.querySelector(\".email.error\");\n    const passwordError = document.querySelector(\".password.error\");\n    const roleError = document.querySelector(\".role.error\")\n\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_API_URL}api/user/login`,\n      withCredentials: true,\n      data: {\n        email,\n        password,\n        role,\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.errors) {\n          emailError.innerHTML = res.data.errors.email;\n          passwordError.innerHTML = res.data.errors.password;\n          roleError.innerHTML = res.data.errors.role;\n        } else {\n          window.location = \"/\";\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <MDBContainer>\n    <MDBRow>\n      <MDBCol md=\"12\">\n        <MDBCard >\n          <MDBCardBody>\n            <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\n              <p className=\"h4 text-center py-4\">Connexion client</p>\n              <div className=\"role error\"></div>\n              <div className=\"grey-text\">\n                <MDBInput\n                  label=\"email\"\n                  icon=\"envelope\"\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n                <div className=\"email error\"></div>\n                <MDBInput\n                  label=\"password\"\n                  icon=\"lock\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                />\n                <div className=\"password error\"></div>\n              </div>\n              <div className=\"text-center py-4 mt-3\">\n                <MDBBtn type=\"submit\">\n                  Se connecter\n                </MDBBtn>\n              </div>\n            </form>\n            <MDBModalFooter>\n                <div className=\"font-weight-light\">\n                  <a href=\"/profil\">Forgot Password?</a>\n                </div>\n              </MDBModalFooter>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  </MDBContainer>\n  );\n};\n\nexport default SignInForm;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Navbar.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Logout.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\user.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Thread.js",["309"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\post.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\users.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\error.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNav.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Trends.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Card.js",["310","311","312","313","314","315"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\NewPostForm.js",["316","317"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"../Utilitaires\";\nimport { addPost, getPosts } from \"../../actions/postAction\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\n\n\n\nconst NewPostForm = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [titre, setTitre] = useState(\"\");\n  const [superficie, setSuperficie] = useState(\"\");\n  const [prix, setPrix] = useState(\"\");\n  const [date_open, setDate_open] = useState(\"\");\n  const [date_close, setDate_close] = useState(\"\");\n  const [localisation, setLocalisation] = useState(\"\");\n  const [codepostal, setCodepostal] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const status = 'non_reservé';\n  const clientId = null;\n  const [postPicture, setPostPicture] = useState(null);\n  const [video, setVideo] = useState(\"\");\n  const [file, setFile] = useState([]);\n  const userData = useSelector((state) => state.userReducer);\n  const error = useSelector((state) => state.errorReducer.postError);\n  const dispatch = useDispatch();\n\n  const [selectedImages, setSelectedImages] = useState([])\n  const imageHandleChange = (e) => {\n      console.log(e.target.files)\n      if(e.target.files) {\n        const fileArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file))\n        console.log(fileArray);\n        setSelectedImages((prevImages) =>prevImages.concat(fileArray));\n        setFile(e.target.files[0]);\n        setVideo('');\n        console.log(file)\n        Array.from(e.target.files).map(\n          (file)=>URL.revokeObjectURL(file)\n        );\n      }\n  };\n  const renderPhotos = (source) => {\n\t\tconsole.log('source: ', source);\n\t\treturn source.map((photo) => {\n\t\t\treturn <img height=\"200px\" width=\"50%\" src={photo} alt=\"\" key={photo} />;\n\t\t});\n\t};\n  /*\n  const handlePicture = (e) => {\n    setPostPicture(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n    setVideo('');\n  }; \n  */\n\n  const handlePost = async () => {\n    if (message || postPicture || video) {\n      const data = new FormData();\n      data.append('posterId', userData._id);\n      data.append('message', message);\n      data.append('titre', titre);\n      data.append('superficie', superficie);\n      data.append('prix', prix);\n      data.append('date_open', date_open);\n      data.append('date_close', date_close);\n      data.append('localisation', localisation);\n      data.append('codepostal', codepostal);\n      data.append('type', type);\n      data.append('status', status);\n      data.append('clientId', clientId);\n      if (file) data.append(\"file\", file);\n      data.append('video', video);\n      await dispatch(addPost(data));\n      dispatch(getPosts());\n      cancelPost();\n    } else {\n      alert(\"Veuillez entrer un message\")\n    }\n  };\n \n  const cancelPost = () => {\n    setMessage(\"\");\n    setTitre(\"\");\n    setSuperficie(\"\");\n    setPrix(\"\");\n    setDate_open(\"\");\n    setDate_close(\"\");\n    setLocalisation(\"\");\n    setCodepostal(\"\");\n    setType(\"\");\n    setPostPicture(\"\");\n    setVideo(\"\");\n    setFile(\"\");\n    setSelectedImages(\"\");\n  };\n\n\n  useEffect(() => {\n    if (!isEmpty(userData)) setIsLoading(false);\n\n    const handleVideo = () => {\n      let findLink = message.split(\" \");\n      for (let i = 0; i < findLink.length; i++) {\n        if (\n          findLink[i].includes(\"https://www.yout\") ||\n          findLink[i].includes(\"https://yout\")\n        ) {\n          let embed = findLink[i].replace(\"watch?v=\", \"embed/\");\n          setVideo(embed.split(\"&\")[0]);\n          findLink.splice(i, 1);\n          setMessage(findLink.join(\" \"));\n          setPostPicture('');\n        }\n      }\n    };\n    handleVideo();\n  }, [userData, message, video]);\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <i className=\"fas fa-spinner fa-pulse\"></i>\n      ) : (\n        <>\n        <MDBContainer><bcomplexe r />\n            <MDBRow>\n\n              <MDBCol md=\"12\">\n                <MDBCard>\n                  <MDBCardBody>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <h4 style={{backgroundColor:'#ff9f1a'}}>Déposer votre annonce</h4>\n          <div className=\"form\">\n            <br/>\n            \n            <br/>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                  <label htmlFor=\"titre\">Titre de l'annonce :</label>\n                  <br/>\n                  <input\n                    type=\"text\"\n                    name=\"titre\"\n                    id=\"titre\"\n                    placeholder=\"Votre titre ?\"\n                    onChange={(e) => setTitre(e.target.value)}\n                    value={titre}\n                  />\n                </div>\n                <div className=\"col-5\">\n                  <label htmlFor=\"type\">Type :</label>\n                  <br/>\n                  <MDBInput\n                    type=\"text\"\n                    name=\"type\"\n                    id=\"type\"\n                    placeholder=\"Quelle Type ?\"\n                    onChange={(e) => setType(e.target.value)}\n                    value={type}\n                  />\n                </div>\n            </div>\n            <div className=\"row\">\n                  <div className=\"col-6\">\n                    <label htmlFor=\"superficie\">Superficie (m²) :</label>\n                    <br/>\n                    <input\n                      type=\"number\"\n                      name=\"superficie\"\n                      id=\"superficie\"\n                      placeholder=\"Quelle est la superficie de l'habitat ?\"\n                      onChange={(e) => setSuperficie(e.target.value)}\n                      value={superficie}\n                    />\n                  </div>\n                  <div className=\"col-5\">\n                    <label htmlFor=\"codepostal\">Code postal :</label>\n                    <br/>\n                    <input\n                      type=\"number\"\n                      name=\"codepostal\"\n                      id=\"codepostal\"\n                      placeholder=\"Code postal ?\"\n                      onChange={(e) => setCodepostal(e.target.value)}\n                      value={codepostal}\n                    />\n                  </div>\n              </div>\n            <div className=\"col-11\">\n              <label htmlFor=\"localisation\">Localisation :</label>\n              <br/>\n              <input\n                type=\"text\"\n                name=\"localisation\"\n                id=\"localisation\"\n                placeholder=\"Localisation ?\"\n                onChange={(e) => setLocalisation(e.target.value)}\n                value={localisation}\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-6\">\n              <label htmlFor=\"prix\">Prix (€) :</label>\n              <br/>\n              <input\n                type=\"number\"\n                name=\"prix\"\n                id=\"prix\"\n                placeholder=\"Coût ?\"\n                onChange={(e) => setPrix(e.target.value)}\n                value={prix}\n              />\n            </div>\n            <div className=\"col-5\">\n              <label htmlFor=\"nbr_personne\"> Capacité de reception :</label>\n              <br/>\n              <input\n                type=\"number\"\n                name=\"nbr_personne\"\n                id=\"nbr_personne\"\n                placeholder=\"Pour combien de personne max?\"\n                onChange={(e) => setPrix(e.target.value)}\n                \n              />\n            </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"11\">\n              <label htmlFor=\"date_open\">Date de debut de reception :</label>\n              <br/>\n              <input\n                type=\"date\"\n                name=\"date_open\"\n                id=\"date_open\"\n                onChange={(e) => setDate_open(e.target.value)}\n                value={date_open}\n              />\n              </div>\n              </div>\n              <div className=\"row\">\n              <hr/>{\"   \"}\n              <div className=\"11\">\n              <label htmlFor=\"date_close\">Date de fin de reception :</label>\n              <br/>\n              <input\n                type=\"date\"\n                name=\"date_close\"\n                id=\"date_close\"\n                onChange={(e) => setDate_close(e.target.value)}\n                value={date_close}\n              />\n              </div>\n            <div>\n              <label htmlFor=\"message\">Décrivez votre bien :</label>\n              <br/>\n              <textarea\n                rows=\"20\" cols=\"50\"\n                name=\"message\"\n                id=\"message\"\n                placeholder=\"Votre commentaire...\"\n                onChange={(e) => setMessage(e.target.value)}\n                value={message}\n              />\n            </div>\n            </div>\n            \n            \n            \n            \n            \n            \n            <div className=\"footer-form\">\n              <div className=\"icon\">\n                {isEmpty(video) && (\n                  <>\n                    <img src=\"./img/icons/picture.svg\" alt=\"img\" />\n                    <input\n                      multiple\n                      type=\"file\"\n                      id=\"file-upload\"\n                      name=\"file\"\n                      accept=\".jpg, .jpeg, .png\"\n                      onChange={imageHandleChange}\n                    />\n                  </>\n                )}\n                {video && (\n                  <button onClick={() => setVideo(\"\")}>Supprimer video</button>\n                )}\n              </div>\n              {!isEmpty(error.format) && <p>{error.format}</p>}\n              {!isEmpty(error.maxSize) && <p>{error.maxSize}</p>}\n              <div className=\"btn-send\">\n                {message || selectedImages || video.length > 20 ? (\n                  <button className=\"cancel\" onClick={cancelPost}>\n                    Annuler message\n                  </button>\n                ) : null}\n                <button  className=\"send\" onClick={handlePost}>\n                  Envoyer\n                </button>\n              </div>\n            </div>\n          </div>\n          </div>\n          <div className=\"col-6\" style={{borderLeft:\"2px solid black\", }}>\n            <h4 style={{backgroundColor:'#ff9f1a'}}>Images</h4>\n                {message || selectedImages || video.length > 20 ? (\n              \n              <div className=\"right\">\n                  <div className=\"content\">\n                    <div className=\"row\">\n                      {renderPhotos(selectedImages)}\n                    </div>\n                    \n                    {video && (\n                      <iframe\n                         src={video}\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title={video}\n                      ></iframe>\n                    )}\n                  </div>\n              </div>\n            \n            ) : null}\n          </div>\n          </div>\n          </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NewPostForm;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\LikeButton.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\DeleteCard.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardComments.js",["318"],"import { MDBCard } from \"mdbreact\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addComment, getPosts } from \"../../actions/post.actions\";\nimport { isEmpty, timestampParser } from \"../Utils\";\nimport EditDeleteComment from \"./EditDeleteComment\";\n\nconst CardComments = ({ post }) => {\n  const [text, setText] = useState(\"\");\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n\n  const handleComment = (e) => {\n    e.preventDefault();\n\n    if (text) {\n      dispatch(addComment(post._id, userData._id, text, userData.pseudo))\n        .then(() => dispatch(getPosts()))\n        .then(() => setText(''));\n    }\n  };\n\n  return (\n    <div className=\"comments-container\">\n      {post.comments.map((comment) => {\n        return (\n          <div\n            className={\n              comment.commenterId === userData._id\n                ? \"comment-container client\"\n                : \"comment-container\"\n            }\n            key={comment._id}\n          >\n            <div className=\"left-part\">\n              <h6>\n                <img height=\"30\" width=\"30\" style={{ borderRadius: \"50%\" }}\n                src={\n                  !isEmpty(usersData[0]) &&\n                  usersData\n                    .map((user) => {\n                      if (user._id === comment.commenterId) return user.picture;\n                      else return null;\n                    })\n                    .join(\"\")\n                }\n                alt=\"commenter-pic\"\n              />\n                {comment.commenterPseudo}{\" \"} <span style={{fontSize:\"10px\"}}>{timestampParser(comment.timestamp)}</span>\n              </h6>\n              \n            </div>\n            <div className=\"right-part\">\n              <div className=\"comment-header\">\n                <div className=\"pseudo\">\n                  <h3></h3> \n                </div>\n                \n              </div>\n              <MDBCard style={{backgroundColor:'#ecf0f1', borderRadius:\"5px 10px\"}} className=\"col-6\">{comment.text}</MDBCard>\n              <EditDeleteComment comment={comment} postId={post._id} />\n            </div>\n          </div>\n        );\n      })}\n      {userData._id && (\n        <form action=\"\" onSubmit={handleComment} className=\"comment-form\">\n          <input\n            type=\"text\"\n            name=\"text\"\n            onChange={(e) => setText(e.target.value)}\n            value={text}\n            placeholder=\"Laisser un commentaire\"\n          />\n          <br />\n          <button className=\"fas fa-paper-plane\" aria-hidden=\"true\" type=\"submit\" ></button>\n          <br/>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default CardComments;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\EditDeleteComment.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Favoris.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Search.js",["319","320","321","322","323","324"],"import React, { useContext, useState } from \"react\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport LeftNav from \"../components/LeftNav\";\r\nimport SearchForm from \"../components/Post/SearchForm\";\r\nimport Thread from \"../components/Thread\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\nimport Navbar from \"../components/Navbar\"\r\n\r\nconst Search = () => {\r\n  const uid = useContext(UidContext);\r\n  const [state, setState] = useState({\r\n    isSearching: false,\r\n    active: \"search\",\r\n    post: [{}, {}],\r\n    query: \"\"\r\n  });\r\n  const onTextChange = input => {\r\n    setState({ ...state, isSearching: input.length > 0 })\r\n    console.log(input)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-1\">\r\n          <LeftNav />\r\n        </div>\r\n        <div className=\"col-11\">\r\n\r\n          <MDBContainer><bcomplexe r />\r\n            <MDBRow>\r\n\r\n              <MDBCol md=\"12\">\r\n                <MDBCard>\r\n                  <MDBCardBody>\r\n                    <form >\r\n                      <p className=\"h4 text-center py-4\">Veuillez entrer les détails de votre recherche</p>\r\n                      <div className=\"grey-text\">\r\n                        \r\n                        <br />\r\n\r\n                        <div className=\"terms error\"></div>\r\n                      </div>\r\n                      <div className=\"text-center py-4 mt-3\">\r\n                        <MDBBtn color=\"#ff9f1a\" type=\"submit\">\r\n                          Valider la recherche\r\n                            </MDBBtn>\r\n                      </div>\r\n                    </form>\r\n                  </MDBCardBody>\r\n                </MDBCard>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\SearchForm.js",["325","326","327","328"],"import { MDBBtn, MDBCard, MDBInput } from \"mdbreact\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../Utils\";\r\nimport Card from \"./Card\";\r\n\r\nconst SearchForm = () => {\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const [searcharr, setSearcharr] = useState('')\r\n  const [searchdep, setSearchdep] = useState('')\r\n\r\n  const refrechSearch = () => {\r\n    setSearcharr('');\r\n    setSearchdep('');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-1\"></div>\r\n        <MDBInput\r\n          htmlFor=\"date_arr\"\r\n          label=\"Date d'arriver\"\r\n          type=\"date\"\r\n          id=\"date_arr\"\r\n          onChange={e => setSearcharr(e.target.value)}\r\n        />\r\n        <div className=\"col-1\"></div>\r\n        <MDBInput\r\n          htmlFor=\"date_dep\"\r\n          label=\"Date de depart\"\r\n          type=\"date\"\r\n          id=\"date_dep\"\r\n          onChange={e => setSearchdep(e.target.value)}\r\n        />\r\n        <i title=\"Rafraîchir\" style={{padding: '20px'}} onClick={refrechSearch} class=\"fas fa-sync-alt\"></i>\r\n       \r\n\r\n      </div>\r\n\r\n      <div>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n            if (\r\n              (((searcharr < post.date_open) || (post.date_close > searcharr))\r\n              && (searcharr > post.date_open))\r\n              \r\n            ) {\r\n              if (searchdep <= post.date_close) {\r\n                return (\r\n                <div>\r\n                  <p style={{ color: 'red' }}>Disponible</p>\r\n                  <Card post={post} key={post._id} />\r\n                </div>\r\n\r\n              )\r\n              }\r\n             \r\n              \r\n            }\r\n             \r\n          } )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Results.js",["329"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Newpost.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadsFavoris.js",["330","331"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/post.actions\";\r\nimport Card from \"./Post/Card\";\r\nimport { isEmpty } from \"./Utils\";\r\n\r\nconst ThreadsFavoris = () => {\r\n  const [loadPost, setLoadPost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const loadMore = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n      setLoadPost(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      dispatch(getPosts(count));\r\n      setLoadPost(false);\r\n      setCount(count + 5);\r\n    }\r\n\r\n    window.addEventListener('scroll', loadMore);\r\n    return () => window.removeEventListener('scroll', loadMore);\r\n  }, [loadPost, dispatch, count]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n            for (let i = 0; i < userData.likes.length; i++) {\r\n              if (post._id === userData.likes[i]) {\r\n                return <Card post={post} key={post._id} />;\r\n              }\r\n            }\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadsFavoris;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Reservation.js",["332","333","334","335","336","337","338","339","340","341","342","343"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Chat.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\ChatFeed.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MyMessage.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\TheirMessage.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MessageForm.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_pro.js",["344"],"import React, { useContext } from \"react\";\r\nimport Index_pro from \"../components/Log/Index_pro\";\r\nimport { UidContext } from \"../components/AppContext\";\r\nimport UpdateProfil from \"../components/Profil/UpdateProfil\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../style/index.css\"\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst Profil_pro = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"container\" >\r\n      <div style={{ backgroundImage: \"./img/fond.svg\" }} >\r\n        {uid ? (\r\n          <UpdateProfil />\r\n        ) : (\r\n          <div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <Index_pro signin={true} signup={false} />\r\n                </div>\r\n               \r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profil_pro;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_pro.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInProForm.js",["345"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\n\r\nconst SignInProForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_API_URL}api/user/loginpro`,\r\n      withCredentials: true,\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.errors) {\r\n          emailError.innerHTML = res.data.errors.email;\r\n          passwordError.innerHTML = res.data.errors.password;\r\n        } else {\r\n          window.location = \"/newpost\";\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MDBContainer>\r\n    <MDBRow>\r\n      <MDBCol md=\"12\">\r\n        <MDBCard >\r\n          <MDBCardBody>\r\n            <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\r\n              <p className=\"h4 text-center py-4\">Connexion propriétaire</p>\r\n              <div className=\"grey-text\">\r\n                <MDBInput\r\n                  label=\"email\"\r\n                  icon=\"envelope\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                />\r\n                <div className=\"email error\"></div>\r\n                <MDBInput\r\n                  label=\"password\"\r\n                  icon=\"lock\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                />\r\n                <div className=\"password error\"></div>\r\n              </div>\r\n              <div className=\"text-center py-4 mt-3\">\r\n                <MDBBtn type=\"submit\">\r\n                  Se connecter\r\n                </MDBBtn>\r\n              </div>\r\n            </form>\r\n            <MDBModalFooter>\r\n                <div className=\"font-weight-light\">\r\n                  \r\n                  <a href=\"/profil_pro\">Forgot Password?</a>\r\n                </div>\r\n              </MDBModalFooter>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default SignInProForm;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpProForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_admin.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInAdminForm.js",["346"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\n\r\nconst SignInAdminForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_API_URL}api/user/loginadmin`,\r\n      withCredentials: true,\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.errors) {\r\n          emailError.innerHTML = res.data.errors.email;\r\n          passwordError.innerHTML = res.data.errors.password;\r\n        } else {\r\n          window.location = \"gestion\";\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MDBContainer>\r\n    <MDBRow>\r\n      <MDBCol md=\"12\">\r\n        <MDBCard >\r\n          <MDBCardBody>\r\n            <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\r\n              <p className=\"h4 text-center py-4\">Connexion administrateur</p>\r\n              <div className=\"grey-text\">\r\n                <MDBInput\r\n                  label=\"email\"\r\n                  icon=\"envelope\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                />\r\n                <div className=\"email error\"></div>\r\n                <MDBInput\r\n                  label=\"password\"\r\n                  icon=\"lock\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                />\r\n                <div className=\"password error\"></div>\r\n              </div>\r\n              <div className=\"text-center py-4 mt-3\">\r\n                <MDBBtn type=\"submit\">\r\n                  Se connecter\r\n                </MDBBtn>\r\n              </div>\r\n            </form>\r\n            <MDBModalFooter>\r\n                <div className=\"font-weight-light\">\r\n                  <p>Not a member? {\" \"}\r\n                      <a href=\"/profil_pro\"  >\r\n                      Sign up\r\n                      </a> </p>\r\n                  <a href=\"/profil_pro\">Forgot Password?</a>\r\n                </div>\r\n              </MDBModalFooter>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default SignInAdminForm;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpAdminForm.js",[],["347","348"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion.js",["349","350"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { isEmpty } from \"../../components/Utilitaires\";\r\n\r\n\r\nconst Gestion = ({ post }) => {\r\n    const posts = useSelector((state) => state.postReducer);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n    }, [usersData]);\r\n    return (\r\n        <div>\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink> \r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    Gestion des clients\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Gestion;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_admin.js",["351"],"import React, { useContext } from \"react\";\r\nimport Index_admin from \"../components/Log/Index_admin\";\r\nimport { UidContext } from \"../components/AppContext\";\r\nimport UpdateProfil from \"../components/Profil/UpdateProfil\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../style/index.css\"\r\nimport Navbar from \"../components/Navbar\"\r\n\r\nconst Profil_admin = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"container\" >\r\n      <div style={{ backgroundImage: \"./img/fond.svg\" }} >\r\n        {uid ? (\r\n          <UpdateProfil />\r\n        ) : (\r\n          <div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <Index_admin signin={true} signup={false} />\r\n                </div>\r\n                <div className=\"col\">\r\n                  <img src=\"./img/fond.svg\" alt=\"img\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profil_admin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNavAdmin.js",["352"],"import React, { useContext } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UidContext } from './AppContext';\r\nimport Logout from './Log/Logout';\r\n\r\nconst LeftNavAdmin = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  return (\r\n    <div className=\"left-nav-container\">\r\n      <div className=\"container\">\r\n        <div className=\"container\">\r\n          <br/>\r\n          { uid ? (\r\n            <>\r\n              <NavLink to='/gestion_clients' exact >\r\n                  Gestion des clients\r\n              </NavLink>\r\n              <hr/>\r\n              <NavLink to='/gestion_pro' exact >\r\n                  Gestion des propriétaires\r\n              </NavLink>\r\n              <hr/>\r\n              <NavLink to='/gestion_pubs' exact >\r\n                  Gestion des Publications\r\n              </NavLink>\r\n              <hr/>\r\n              <NavLink to='/parametres' exact >\r\n                  Paramètres\r\n              </NavLink>\r\n              <hr/>\r\n                <NavLink to=''>\r\n                <Logout/>\r\n              </NavLink>\r\n              <hr/>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftNavAdmin;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pro.js",["353","354","355"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Gestion_pro = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const posts = useSelector((state) => state.postReducer);\r\n    const dispatch = useDispatch();\r\n    const deleteQuote = id => dispatch(deleteUser(id));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <br />\r\n                    <h1>Gestion des propriétaires</h1>\r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Nombre de Post</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"propriétaire\") {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>    \r\n                                                {!isEmpty(posts[0]) &&\r\n                                                    posts.map((post) => {\r\n                                                        if ( post.posterId === user._id) {\r\n                                                           return \r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <button type=\"submit\" className=\"btn btn-danger\" \r\n                                                    onClick={() => {\r\n                                                        if (window.confirm(\"Voulez-vous supprimer cet utilisateur ?\")) {\r\n                                                            deleteQuote(user._id);\r\n                                                            \r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-info\">\r\n                                                    <i className=\"fas fa-user-edit\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <a style={{ color: 'black' }} href={`/user_view/${user._id}`} >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </a>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    ) }\r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Gestion_pro;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Parametres.js",["356","357"],"import { Tooltip } from \"bootstrap\";\r\nimport { MDBBtn, MDBCard } from \"mdbreact\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\n\r\nconst Parametres = () => {\r\n    const userData = useSelector((state) => state.userReducer);\r\n    return (\r\n        <div>\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n                <NavLink exact to=\"/gestion\">\r\n                    <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n                </NavLink>\r\n                <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"block-header\">\r\n                            <br/>\r\n                            <h1>Paramètres</h1>\r\n                            <small className=\"text-muted\">Administrer les composants du fonctionnement de l'application</small>\r\n                        </div>\r\n                        <br/>\r\n                        <div class=\"row clearfix\">\r\n                            <MDBBtn>\r\n                                <NavLink exact to=\"/ajout_admin\">\r\n                                    Administrateur +\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                            <div className=\"col-1\"></div>\r\n                            <MDBBtn >\r\n                                <NavLink exact to=\"/listadmin\">\r\n                                   Liste des Administrateurs\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                            <div className=\"col-1\"></div>\r\n                            <MDBBtn >\r\n                                <NavLink exact to=\"/paramhabitat\">\r\n                                   parametres de l'habitat\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                        </div>\r\n                        <div class=\"row clearfix\">\r\n                            <MDBBtn >\r\n                                <NavLink exact to=\"/alerte\">\r\n                                   Gestion des alertes\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\nexport default Parametres;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_clients.js",["358"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Gestion_clients = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const deleteQuote = id => dispatch(deleteUser(id));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <br />\r\n                    <h1>Gestion des clients</h1>\r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"client\") {\r\n                                      return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>\r\n                                                <button type=\"submit\" className=\"btn btn-danger\" \r\n                                                    onClick={() => {\r\n                                                        if (window.confirm(\"Voulez-vous supprimer cet utilisateur ?\")) {\r\n                                                            deleteQuote(user._id);\r\n                                                            \r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-info\">\r\n                                                    <i className=\"fas fa-user-edit\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <a style={{ color: 'black' }} href={`/user_view/${user._id}`} >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </a>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    )  \r\n                                    }\r\n                                    \r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Gestion_clients;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\User_view.js",["359","360","361","362"],"import React from \"react\";\r\n\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\nimport { useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../../components/Utils\";\r\n\r\n\r\n\r\nconst User_view = (props) => {\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </nav>\r\n            <div className=\"container\">\r\n                <MDBContainer><bcomplexe r />\r\n                    <MDBRow>\r\n\r\n                        <MDBCol md=\"12\">\r\n                            <MDBCard>\r\n                                <MDBCardBody>\r\n                                    {!isEmpty(usersData[0]) &&\r\n                                        usersData.map((users) => {\r\n                                            if (users._id === props.match.params.id) {\r\n                                                return (\r\n                                                    <>\r\n                                                        <h1> Profil de {users.pseudo}</h1>\r\n                                                        <h6>Compte crée le : {dateParser(users.createdAt)}</h6>\r\n                                                        <div className=\"row\">\r\n                                                        <div className=\"col-6\">\r\n                                                        <ul>\r\n                                                            <li>Pseudo: {users.pseudo}</li>\r\n                                                            <li>Email: {users.email}</li>\r\n                                                        </ul>\r\n                                                        </div>\r\n                                                        <div className=\"col-6\">\r\n                                                            <div className=\"left-part\">\r\n                                                            <h3>Photo de profil</h3>\r\n                                                            <img height=\"400\"\r\n                                                                src={users.picture} alt=\"user-pic\" />\r\n                                                                {users.picture}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )\r\n                                                \r\n                                            }\r\n                                        })}\r\n\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User_view;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pubs.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadAdmin.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardAdmin.js",["363","364","365","366"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../Utilitaires\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport { updatePost } from \"../../actions/postAction\";\r\nimport DeleteCard from \"./DeleteCard\";\r\nimport CardComments from \"./CardComments\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBCard } from 'mdbreact';\r\nimport Popup from \"reactjs-popup\";\r\nimport { useContext } from \"react\";\r\nimport { UidContext } from \"../UserIdConnect\";\r\n\r\nconst CardAdmin = ({ post }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n    const [textUpdate, setTextUpdate] = useState(null);\r\n    const [showComments, setShowComments] = useState(false);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const uid = useContext(UidContext);\r\n\r\n    const status = () => {\r\n        if (post.status === 'réservé') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Réservé</span>)\r\n        } else if (post.status === 'attente') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#25fde9', borderRadius:\"4px 8px\"}}>En attente</span>)\r\n        } else if (post.status === 'annulé') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Annulé</span>)\r\n        } else if (post.status === 'non_reservé') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Non reservé</span>)\r\n        } \r\n    }\r\n\r\n    const updateItem = () => {\r\n        if (textUpdate) {\r\n            dispatch(updatePost(post._id, textUpdate));\r\n        }\r\n        setIsUpdated(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n    }, [usersData]);\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <MDBCard >\r\n                <li className=\"container\" key={post._id}>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"round\">\r\n                                <br />\r\n                                <h6>\r\n                                    <img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                        src={\r\n                                            !isEmpty(usersData[0]) &&\r\n                                            usersData\r\n                                                .map((user) => {\r\n                                                    if (user._id === post.posterId) return user.picture;\r\n                                                    else return null;\r\n                                                })\r\n                                                .join(\"\")\r\n                                        }\r\n                                        alt=\"poster-pic\"\r\n                                    />\r\n                                    {\"  \"}\r\n                                    {!isEmpty(usersData[0]) &&\r\n                                        usersData\r\n                                            .map((user) => {\r\n                                                if (user._id === post.posterId) return user.pseudo;\r\n                                                else return null;\r\n                                            })\r\n                                            .join(\"\")}\r\n                                    <div className=\"col-sm\" style={{textAlign:'right'}}>\r\n                                                <img src=\"./img/camera.png\" title=\"Prise de vue locataire\"/>\r\n                                        \r\n                                        </div>\r\n\r\n\r\n                                </h6>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                    <div>\r\n                                        <h4>{post.titre}</h4>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-sm\">\r\n                                        {uid ? (\r\n                                            <div>\r\n                                                {post.picture && (\r\n                                                    <img height=\"200\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\r\n                                                )}\r\n                                                {post.video && (\r\n                                                    <iframe\r\n                                                        width=\"200\"\r\n                                                        height=\"200\"\r\n                                                        src={post.video}\r\n                                                        frameBorder=\"0\"\r\n                                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                                        allowFullScreen\r\n                                                        title={post._id}\r\n                                                    ></iframe>\r\n                                                )}\r\n                                            </div>\r\n                                        ) : (\r\n                                            <>\r\n\r\n                                                {post.picture && (\r\n                                                    <img height=\"200\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\r\n                                                )}\r\n                                                {post.video && (\r\n                                                    <iframe\r\n                                                        width=\"365\"\r\n                                                        height=\"200\"\r\n                                                        src={post.video}\r\n                                                        frameBorder=\"0\"\r\n                                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                                        allowFullScreen\r\n                                                        title={post._id}\r\n                                                    ></iframe>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n\r\n\r\n\r\n\r\n\r\n                                        {isUpdated && (\r\n                                            <div className=\"update-post\">\r\n                                                <textarea\r\n                                                    defaultValue={post.message}\r\n                                                    onChange={(e) => setTextUpdate(e.target.value)}\r\n                                                />\r\n                                                <div className=\"button-container\">\r\n                                                    <button className=\"btn\" onClick={updateItem}>\r\n                                                        Valider modification\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:\"12px\", fontWeight:\"bold\"}}>Publiée le {dateParser(post.createdAt)}</span>\r\n                                        \r\n                                        {isUpdated === false && <p>{post.message}</p>}\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        <span style={{fontSize:'12px'}}>commentaire </span>\r\n                                            <i onClick={() => setShowComments(!showComments)} className=\"fas fa-comment\"></i>  {post.comments.length}\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>j'aime </span>\r\n                                        <i className=\"fas fa-star\"></i>  {post.likers.length}\r\n                                       \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>voir </span>\r\n                                            <i className=\"fas fa-eye\"></i>\r\n                                       \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                        {(\r\n                                            <div className=\"button-container\">\r\n                                                \r\n                                                <DeleteCard id={post._id} />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>status : {status()}</span>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                {showComments && <CardComments post={post} />}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </li>\r\n            </MDBCard>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardAdmin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Ajout_admin.js",["367","368"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ListAdmin from \"./ListAdmin\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst Ajout_admin = () => {\r\n  const [formSubmit, setFormSubmit] = useState(false);\r\n  const [pseudo, setPseudo] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [controlPassword, setControlPassword] = useState(\"\");\r\n  const role = \"administrateur\"\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    const pseudoError = document.querySelector(\".pseudo.error\");\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n    const passwordConfirmError = document.querySelector(\r\n      \".password-confirm.error\"\r\n    );\r\n\r\n    passwordConfirmError.innerHTML = \"\";\r\n\r\n    if (password !== controlPassword) {\r\n      if (password !== controlPassword)\r\n        passwordConfirmError.innerHTML =\r\n          \"Les mots de passe ne correspondent pas\";\r\n    } else {\r\n      await axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_API_URL}api/user/register`,\r\n        data: {\r\n          pseudo,\r\n          email,\r\n          password,\r\n          role,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.errors) {\r\n            pseudoError.innerHTML = res.data.errors.pseudo;\r\n            emailError.innerHTML = res.data.errors.email;\r\n            passwordError.innerHTML = res.data.errors.password;\r\n          } else {\r\n            setFormSubmit(true);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {formSubmit ? (\r\n                        <>\r\n                        <h4 className=\"success\" style={{textAlign:'center', paddingTop:'15%'}}>\r\n                            Ajout réussi!\r\n                        </h4>\r\n                        <div class=\"success-animation\">\r\n                            <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"><circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" /><path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" /></svg>\r\n                        </div>\r\n                        \r\n                        <span></span>\r\n                        </>\r\n                    ) : (\r\n                    <MDBContainer>\r\n                        <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBCard>\r\n                            <MDBCardBody >\r\n                                <form action=\"\" onSubmit={handleRegister} id=\"sign-up-form\">\r\n                                <p className=\"h4 text-center py-4\">Nouveau Administrateur</p>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput\r\n                                    htmlFor=\"pseudo\"\r\n                                    label=\"Pseudo\"\r\n                                    icon=\"user\"\r\n                                    type=\"text\"\r\n                                    name=\"pseudo\"\r\n                                    id=\"pseudo\"\r\n                                    onChange={(e) => setPseudo(e.target.value)}\r\n                                    value={pseudo}\r\n                                    />\r\n                                    <div className=\"pseudo error\"></div>\r\n                                    <MDBInput\r\n                                    htmlFor=\"email\"\r\n                                    label=\"Email\"\r\n                                    icon=\"envelope\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    value={email}\r\n                                    />\r\n                                    <div className=\"email error\"></div>\r\n                                    <MDBInput\r\n                                    htmlFor=\"password\"\r\n                                    label=\"Mot de passe\"\r\n                                    icon=\"lock\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    value={password}\r\n                                    />\r\n                                    <div className=\"password error\"></div>\r\n                                    <MDBInput\r\n                                    htmlFor=\"password-conf\"\r\n                                    label=\"Confirmation mot de passe\"\r\n                                    icon=\"exclamation-triangle\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password-conf\"\r\n                                    onChange={(e) => setControlPassword(e.target.value)}\r\n                                    value={controlPassword}\r\n                                    />\r\n                                    <div className=\"password-confirm error\"></div>\r\n                                    \r\n                                </div>\r\n                                <div className=\"text-center py-4 mt-3\">\r\n                                    <MDBBtn type=\"submit\" >\r\n                                    Valider\r\n                                    </MDBBtn>\r\n                                </div>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ajout_admin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\ListAdmin.js",["369","370","371","372"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\nconst ListAdmin = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const posts = useSelector((state) => state.postReducer);\r\n    const dispatch = useDispatch();\r\n    const deleteQuote = id => dispatch(deleteUser(id));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <br />\r\n                    <h1>Liste des Administrateurs\r\n                        <div style={{textAlign:'right', paddingRight:'30px'}}>\r\n                            <NavLink exact to=\"/ajout_admin\">\r\n                                <i className=\"fas fa-plus\" title=\"Ajouter\"></i>\r\n                            </NavLink>   \r\n                        </div>\r\n                    </h1>\r\n                    \r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"administrateur\") {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>\r\n                                                \r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <a style={{ color: 'black' }} href={`/user_view/${user._id}`} >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </a>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    ) }\r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ListAdmin;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Bestof.js",["373"],"import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { UidContext } from \"../components/UserIdConnect\";\nimport LeftNav from '../components/LeftNav';\nimport { isEmpty } from \"../components/Utilitaires\";\nimport Card from \"../components/Post/Card\";\nimport Navbar from \"../components/Navbar\"\n\nconst Bestof = () => {\n  const uid = useContext(UidContext);\n  const trendList = useSelector((state) => state.bestofReducer);\n  const userData = useSelector((state) => state.userReducer);\n\n  const afficheLeftNav = () =>\n  {\n    if (userData.role === 'client') {\n      return (\n        <LeftNav />\n      )\n    }\n  }\n\n  return (\n  <>\n  <Navbar />\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-1\">\n      {afficheLeftNav()}\n      </div>  \n      <div className=\"col-11\">\n        <br/>\n        <h1>Nos Best of</h1>\n        <ul>\n          {!isEmpty(trendList[0]) && trendList.map((post) => <Card post={post} key={post._id} />)}\n        </ul>\n      </div>\n      </div>\n    \n  </div>\n  </>\n  );\n};\n\nexport default Bestof;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\bestof.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\postAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\userAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\usersAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdateInfoProfil.js",["374","375","376","377","378"],"import React, { useState } from \"react\";\nimport LeftNav from \"../LeftNav\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UpdatePicture from \"./UpdatePicture\";\nimport { dateParser } from \"../Utilitaires\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\n\n\nconst UpdateInfoProfil = () => {\n  const userData = useSelector((state) => state.userReducer);\n  const error = useSelector((state) => state.errorReducer.userError);\n\n  \n\n  const afficheLeftNav = () =>\n  {\n    if (userData.role === 'client') {\n      return (\n        <LeftNav />\n      )\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-1\">\n          {afficheLeftNav()}\n        </div>\n        <br/>\n        <div className=\"col-11\">\n          <MDBContainer><bcomplexe r />\n            <MDBRow>\n\n              <MDBCol md=\"12\">\n                <MDBCard>\n                  <MDBCardBody>\n                    <h1> Profil de {userData.pseudo}</h1>\n                    <h6>Compte créé le : {dateParser(userData.createdAt)}</h6>\n                    <div className=\"row\">\n                    <div className=\"col-6\">\n                      <ul>\n                        <li>Pseudo: {userData.pseudo}</li>\n                        <li>Email: {userData.email}</li>\n                      </ul>\n                    </div>\n                      <div className=\"col-6\">\n                        <div className=\"left-part\">\n                          <h3>Photo de profil</h3>\n                          <img height=\"400\"\n                            src={userData.picture} alt=\"user-pic\" />\n                          <UpdatePicture />\n                          <p>{error.maxSize}</p>\n                          <p>{error.format}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </div>\n\n        </div>\n      </div>\n  );\n};\n\nexport default UpdateInfoProfil;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdatePicture.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\UserIdConnect.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Utilitaires.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\posts.reducres.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Post_pro.js",["379","380","381","382"],"import React, { useContext, useState } from \"react\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport Navbar from \"../components/Navbar\"\r\nimport { useSelector } from \"react-redux\";\r\nimport ThreadsPro from \"../components/ThreadsPro\";\r\n\r\n\r\nconst Post_pro = () => {\r\n  const uid = useContext(UidContext);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const [state, setState] = useState({\r\n    isSearching: false,\r\n    active:\"search\",\r\n    post:[{}, {}],\r\n    query: \"\"\r\n  });\r\n\r\n \r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-1\">\r\n        </div>\r\n        <div className=\"col-10\">\r\n          <br/>\r\n          <h1>Mes posts</h1>\r\n          <ThreadsPro />\r\n        </div>\r\n        <div className=\"col-1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post_pro;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadsPro.js",["383"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Mes_reservations.js",["384","385","386","387"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadClient.js",["388"],{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","replacedBy":"392"},{"ruleId":"393","severity":1,"message":"394","line":12,"column":9,"nodeType":"395","messageId":"396","endLine":12,"endColumn":12},{"ruleId":"393","severity":1,"message":"397","line":21,"column":9,"nodeType":"395","messageId":"396","endLine":21,"endColumn":21},{"ruleId":"393","severity":1,"message":"398","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":18},{"ruleId":"393","severity":1,"message":"399","line":10,"column":16,"nodeType":"395","messageId":"396","endLine":10,"endColumn":23},{"ruleId":"400","severity":1,"message":"401","line":34,"column":28,"nodeType":"402","messageId":"403","endLine":34,"endColumn":30},{"ruleId":"393","severity":1,"message":"404","line":9,"column":10,"nodeType":"395","messageId":"396","endLine":9,"endColumn":16},{"ruleId":"400","severity":1,"message":"401","line":146,"column":42,"nodeType":"402","messageId":"403","endLine":146,"endColumn":44},{"ruleId":"405","severity":1,"message":"406","line":153,"column":45,"nodeType":"407","endLine":153,"endColumn":73},{"ruleId":"405","severity":1,"message":"406","line":156,"column":45,"nodeType":"407","endLine":156,"endColumn":73},{"ruleId":"405","severity":1,"message":"406","line":159,"column":45,"nodeType":"407","endLine":159,"endColumn":75},{"ruleId":"405","severity":1,"message":"406","line":212,"column":25,"nodeType":"407","endLine":212,"endColumn":85},{"ruleId":"393","severity":1,"message":"404","line":6,"column":50,"nodeType":"395","messageId":"396","endLine":6,"endColumn":56},{"ruleId":"393","severity":1,"message":"408","line":6,"column":80,"nodeType":"395","messageId":"396","endLine":6,"endColumn":94},{"ruleId":"409","severity":1,"message":"410","line":57,"column":19,"nodeType":"407","endLine":57,"endColumn":23},{"ruleId":"393","severity":1,"message":"411","line":4,"column":8,"nodeType":"395","messageId":"396","endLine":4,"endColumn":18},{"ruleId":"393","severity":1,"message":"412","line":5,"column":8,"nodeType":"395","messageId":"396","endLine":5,"endColumn":14},{"ruleId":"393","severity":1,"message":"413","line":6,"column":40,"nodeType":"395","messageId":"396","endLine":6,"endColumn":48},{"ruleId":"393","severity":1,"message":"408","line":6,"column":80,"nodeType":"395","messageId":"396","endLine":6,"endColumn":94},{"ruleId":"393","severity":1,"message":"394","line":10,"column":9,"nodeType":"395","messageId":"396","endLine":10,"endColumn":12},{"ruleId":"393","severity":1,"message":"397","line":17,"column":9,"nodeType":"395","messageId":"396","endLine":17,"endColumn":21},{"ruleId":"393","severity":1,"message":"404","line":1,"column":10,"nodeType":"395","messageId":"396","endLine":1,"endColumn":16},{"ruleId":"393","severity":1,"message":"414","line":1,"column":18,"nodeType":"395","messageId":"396","endLine":1,"endColumn":25},{"ruleId":"393","severity":1,"message":"415","line":4,"column":10,"nodeType":"395","messageId":"396","endLine":4,"endColumn":20},{"ruleId":"400","severity":1,"message":"401","line":44,"column":28,"nodeType":"402","messageId":"403","endLine":44,"endColumn":30},{"ruleId":"416","severity":1,"message":"417","line":12,"column":1,"nodeType":"418","endLine":12,"endColumn":26},{"ruleId":"393","severity":1,"message":"419","line":12,"column":9,"nodeType":"395","messageId":"396","endLine":12,"endColumn":18},{"ruleId":"400","severity":1,"message":"401","line":36,"column":28,"nodeType":"402","messageId":"403","endLine":36,"endColumn":30},{"ruleId":"393","severity":1,"message":"420","line":1,"column":8,"nodeType":"395","messageId":"396","endLine":1,"endColumn":13},{"ruleId":"393","severity":1,"message":"421","line":17,"column":10,"nodeType":"395","messageId":"396","endLine":17,"endColumn":19},{"ruleId":"422","severity":1,"message":"423","line":22,"column":5,"nodeType":"424","messageId":"425","endLine":28,"endColumn":6},{"ruleId":"400","severity":1,"message":"426","line":23,"column":24,"nodeType":"402","messageId":"427","endLine":23,"endColumn":26},{"ruleId":"393","severity":1,"message":"428","line":37,"column":16,"nodeType":"395","messageId":"396","endLine":37,"endColumn":23},{"ruleId":"393","severity":1,"message":"429","line":78,"column":9,"nodeType":"395","messageId":"396","endLine":78,"endColumn":20},{"ruleId":"393","severity":1,"message":"430","line":101,"column":9,"nodeType":"395","messageId":"396","endLine":101,"endColumn":17},{"ruleId":"400","severity":1,"message":"401","line":129,"column":54,"nodeType":"402","messageId":"403","endLine":129,"endColumn":56},{"ruleId":"400","severity":1,"message":"401","line":187,"column":56,"nodeType":"402","messageId":"403","endLine":187,"endColumn":58},{"ruleId":"400","severity":1,"message":"401","line":191,"column":68,"nodeType":"402","messageId":"403","endLine":191,"endColumn":70},{"ruleId":"400","severity":1,"message":"401","line":208,"column":54,"nodeType":"402","messageId":"403","endLine":208,"endColumn":56},{"ruleId":"400","severity":1,"message":"401","line":212,"column":66,"nodeType":"402","messageId":"403","endLine":212,"endColumn":68},{"ruleId":"431","severity":1,"message":"432","line":23,"column":19,"nodeType":"407","endLine":23,"endColumn":61},{"ruleId":"393","severity":1,"message":"398","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":18},{"ruleId":"393","severity":1,"message":"398","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":18},{"ruleId":"389","replacedBy":"433"},{"ruleId":"391","replacedBy":"434"},{"ruleId":"393","severity":1,"message":"435","line":9,"column":11,"nodeType":"395","messageId":"396","endLine":9,"endColumn":16},{"ruleId":"393","severity":1,"message":"421","line":10,"column":12,"nodeType":"395","messageId":"396","endLine":10,"endColumn":21},{"ruleId":"431","severity":1,"message":"436","line":23,"column":19,"nodeType":"407","endLine":23,"endColumn":63},{"ruleId":"393","severity":1,"message":"437","line":2,"column":10,"nodeType":"395","messageId":"396","endLine":2,"endColumn":21},{"ruleId":"400","severity":1,"message":"401","line":57,"column":54,"nodeType":"402","messageId":"403","endLine":57,"endColumn":56},{"ruleId":"400","severity":1,"message":"401","line":70,"column":70,"nodeType":"402","messageId":"403","endLine":70,"endColumn":72},{"ruleId":"400","severity":1,"message":"426","line":72,"column":60,"nodeType":"438","messageId":"439","endLine":72,"endColumn":66},{"ruleId":"393","severity":1,"message":"440","line":1,"column":10,"nodeType":"395","messageId":"396","endLine":1,"endColumn":17},{"ruleId":"393","severity":1,"message":"414","line":2,"column":18,"nodeType":"395","messageId":"396","endLine":2,"endColumn":25},{"ruleId":"400","severity":1,"message":"401","line":55,"column":54,"nodeType":"402","messageId":"403","endLine":55,"endColumn":56},{"ruleId":"393","severity":1,"message":"413","line":3,"column":40,"nodeType":"395","messageId":"396","endLine":3,"endColumn":48},{"ruleId":"393","severity":1,"message":"404","line":3,"column":50,"nodeType":"395","messageId":"396","endLine":3,"endColumn":56},{"ruleId":"393","severity":1,"message":"408","line":3,"column":80,"nodeType":"395","messageId":"396","endLine":3,"endColumn":94},{"ruleId":"400","severity":1,"message":"401","line":24,"column":63,"nodeType":"402","messageId":"403","endLine":24,"endColumn":65},{"ruleId":"393","severity":1,"message":"441","line":4,"column":8,"nodeType":"395","messageId":"396","endLine":4,"endColumn":18},{"ruleId":"393","severity":1,"message":"442","line":10,"column":8,"nodeType":"395","messageId":"396","endLine":10,"endColumn":13},{"ruleId":"393","severity":1,"message":"443","line":20,"column":11,"nodeType":"395","messageId":"396","endLine":20,"endColumn":19},{"ruleId":"405","severity":1,"message":"406","line":80,"column":49,"nodeType":"407","endLine":80,"endColumn":109},{"ruleId":"393","severity":1,"message":"408","line":4,"column":80,"nodeType":"395","messageId":"396","endLine":4,"endColumn":94},{"ruleId":"393","severity":1,"message":"444","line":7,"column":8,"nodeType":"395","messageId":"396","endLine":7,"endColumn":17},{"ruleId":"393","severity":1,"message":"445","line":9,"column":8,"nodeType":"395","messageId":"396","endLine":9,"endColumn":14},{"ruleId":"393","severity":1,"message":"435","line":15,"column":11,"nodeType":"395","messageId":"396","endLine":15,"endColumn":16},{"ruleId":"393","severity":1,"message":"446","line":17,"column":11,"nodeType":"395","messageId":"396","endLine":17,"endColumn":22},{"ruleId":"400","severity":1,"message":"401","line":64,"column":54,"nodeType":"402","messageId":"403","endLine":64,"endColumn":56},{"ruleId":"393","severity":1,"message":"394","line":10,"column":9,"nodeType":"395","messageId":"396","endLine":10,"endColumn":12},{"ruleId":"393","severity":1,"message":"447","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":25},{"ruleId":"393","severity":1,"message":"448","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":21},{"ruleId":"393","severity":1,"message":"413","line":6,"column":40,"nodeType":"395","messageId":"396","endLine":6,"endColumn":48},{"ruleId":"393","severity":1,"message":"404","line":6,"column":50,"nodeType":"395","messageId":"396","endLine":6,"endColumn":56},{"ruleId":"393","severity":1,"message":"408","line":6,"column":80,"nodeType":"395","messageId":"396","endLine":6,"endColumn":94},{"ruleId":"393","severity":1,"message":"394","line":9,"column":9,"nodeType":"395","messageId":"396","endLine":9,"endColumn":12},{"ruleId":"393","severity":1,"message":"443","line":10,"column":9,"nodeType":"395","messageId":"396","endLine":10,"endColumn":17},{"ruleId":"393","severity":1,"message":"449","line":11,"column":10,"nodeType":"395","messageId":"396","endLine":11,"endColumn":15},{"ruleId":"393","severity":1,"message":"450","line":11,"column":17,"nodeType":"395","messageId":"396","endLine":11,"endColumn":25},{"ruleId":"400","severity":1,"message":"401","line":35,"column":28,"nodeType":"402","messageId":"403","endLine":35,"endColumn":30},{"ruleId":"393","severity":1,"message":"394","line":9,"column":9,"nodeType":"395","messageId":"396","endLine":9,"endColumn":12},{"ruleId":"393","severity":1,"message":"443","line":10,"column":9,"nodeType":"395","messageId":"396","endLine":10,"endColumn":17},{"ruleId":"393","severity":1,"message":"449","line":11,"column":10,"nodeType":"395","messageId":"396","endLine":11,"endColumn":15},{"ruleId":"393","severity":1,"message":"450","line":11,"column":17,"nodeType":"395","messageId":"396","endLine":11,"endColumn":25},{"ruleId":"400","severity":1,"message":"401","line":35,"column":28,"nodeType":"402","messageId":"403","endLine":35,"endColumn":30},"no-native-reassign",["451"],"no-negated-in-lhs",["452"],"no-unused-vars","'uid' is assigned a value but never used.","Identifier","unusedVar","'onTextChange' is assigned a value but never used.","'SignUpForm' is defined but never used.","'setRole' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'MDBBtn' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MDBModalFooter' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'SearchForm' is defined but never used.","'Thread' is defined but never used.","'MDBInput' is defined but never used.","'MDBCard' is defined but never used.","'dateParser' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'usersData' is assigned a value but never used.","'axios' is defined but never used.","'isLoading' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Array.prototype.map() expects a return value from arrow function.","expectedInside","'setPost' is assigned a value but never used.","'makePayment' is assigned a value but never used.","'infoPost' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Index_pro must be in PascalCase or SCREAMING_SNAKE_CASE",["451"],["452"],"'posts' is assigned a value but never used.","Imported JSX component Index_admin must be in PascalCase or SCREAMING_SNAKE_CASE","'useSelector' is defined but never used.","ReturnStatement","expectedReturnValue","'Tooltip' is defined but never used.","'LikeButton' is defined but never used.","'Popup' is defined but never used.","'userData' is assigned a value but never used.","'ListAdmin' is defined but never used.","'Navbar' is defined but never used.","'deleteQuote' is assigned a value but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]