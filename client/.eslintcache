[{"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Routes\\index.js":"3","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil.js":"4","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Home.js":"5","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\index.js":"6","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInForm.js":"7","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpForm.js":"8","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Navbar.js":"9","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Logout.js":"10","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\index.js":"11","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\user.reducer.js":"12","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Thread.js":"13","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\post.reducer.js":"14","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\users.reducer.js":"15","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\error.reducer.js":"16","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNav.js":"17","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Trends.js":"18","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Card.js":"19","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\NewPostForm.js":"20","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\LikeButton.js":"21","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\DeleteCard.js":"22","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardComments.js":"23","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\EditDeleteComment.js":"24","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Favoris.js":"25","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Search.js":"26","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\SearchForm.js":"27","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Results.js":"28","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Newpost.js":"29","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadsFavoris.js":"30","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Reservation.js":"31","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Chat.js":"32","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\ChatFeed.jsx":"33","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MyMessage.jsx":"34","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\TheirMessage.jsx":"35","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MessageForm.jsx":"36","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_pro.js":"37","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_pro.js":"38","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInProForm.js":"39","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpProForm.js":"40","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_admin.js":"41","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInAdminForm.js":"42","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpAdminForm.js":"43","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion.js":"44","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_admin.js":"45","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNavAdmin.js":"46","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pro.js":"47","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Parametres.js":"48","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_clients.js":"49","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\User_view.js":"50","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pubs.js":"51","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadAdmin.js":"52","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardAdmin.js":"53","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Ajout_admin.js":"54","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\ListAdmin.js":"55","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Bestof.js":"56","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\bestof.reducer.js":"57","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\postAction.js":"58","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\userAction.js":"59","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\usersAction.js":"60","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdateInfoProfil.js":"61","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdatePicture.js":"62","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\UserIdConnect.js":"63","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Utilitaires.js":"64","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\posts.reducres.js":"65"},{"size":747,"mtime":1615395603597,"results":"66","hashOfConfig":"67"},{"size":882,"mtime":1615396131457,"results":"68","hashOfConfig":"67"},{"size":2393,"mtime":1615395079898,"results":"69","hashOfConfig":"67"},{"size":979,"mtime":1615396131431,"results":"70","hashOfConfig":"67"},{"size":1300,"mtime":1615398240894,"results":"71","hashOfConfig":"67"},{"size":1296,"mtime":1615397938072,"results":"72","hashOfConfig":"67"},{"size":2847,"mtime":1615397971832,"results":"73","hashOfConfig":"67"},{"size":5550,"mtime":1615400314292,"results":"74","hashOfConfig":"67"},{"size":2971,"mtime":1615404055864,"results":"75","hashOfConfig":"67"},{"size":727,"mtime":1615404014022,"results":"76","hashOfConfig":"67"},{"size":441,"mtime":1615396516908,"results":"77","hashOfConfig":"67"},{"size":604,"mtime":1615395553396,"results":"78","hashOfConfig":"67"},{"size":1147,"mtime":1615396301500,"results":"79","hashOfConfig":"67"},{"size":2081,"mtime":1615395411696,"results":"80","hashOfConfig":"67"},{"size":261,"mtime":1615395603597,"results":"81","hashOfConfig":"67"},{"size":515,"mtime":1615395553399,"results":"82","hashOfConfig":"67"},{"size":1369,"mtime":1615398187674,"results":"83","hashOfConfig":"67"},{"size":2385,"mtime":1615396301500,"results":"84","hashOfConfig":"67"},{"size":7507,"mtime":1615404269968,"results":"85","hashOfConfig":"67"},{"size":11363,"mtime":1615396301502,"results":"86","hashOfConfig":"67"},{"size":1417,"mtime":1615410656857,"results":"87","hashOfConfig":"67"},{"size":567,"mtime":1615395411696,"results":"88","hashOfConfig":"67"},{"size":2792,"mtime":1615396301502,"results":"89","hashOfConfig":"67"},{"size":2090,"mtime":1615396131435,"results":"90","hashOfConfig":"67"},{"size":900,"mtime":1615396131431,"results":"91","hashOfConfig":"67"},{"size":1939,"mtime":1615400462108,"results":"92","hashOfConfig":"67"},{"size":1847,"mtime":1615396301502,"results":"93","hashOfConfig":"67"},{"size":267,"mtime":1611210583320,"results":"94","hashOfConfig":"67"},{"size":774,"mtime":1615381034525,"results":"95","hashOfConfig":"67"},{"size":1478,"mtime":1615396301500,"results":"96","hashOfConfig":"67"},{"size":6614,"mtime":1615398811267,"results":"97","hashOfConfig":"67"},{"size":739,"mtime":1615122860160,"results":"98","hashOfConfig":"67"},{"size":2049,"mtime":1615018747870,"results":"99","hashOfConfig":"67"},{"size":549,"mtime":1615018190723,"results":"100","hashOfConfig":"67"},{"size":1048,"mtime":1615018217083,"results":"101","hashOfConfig":"67"},{"size":1506,"mtime":1615018154921,"results":"102","hashOfConfig":"67"},{"size":944,"mtime":1615396131431,"results":"103","hashOfConfig":"67"},{"size":1426,"mtime":1615398075620,"results":"104","hashOfConfig":"67"},{"size":2765,"mtime":1615398124350,"results":"105","hashOfConfig":"67"},{"size":5716,"mtime":1615401848488,"results":"106","hashOfConfig":"67"},{"size":271,"mtime":1615398291889,"results":"107","hashOfConfig":"67"},{"size":2905,"mtime":1615374614311,"results":"108","hashOfConfig":"67"},{"size":5655,"mtime":1615112459268,"results":"109","hashOfConfig":"67"},{"size":1391,"mtime":1615401076453,"results":"110","hashOfConfig":"67"},{"size":1057,"mtime":1615396131431,"results":"111","hashOfConfig":"67"},{"size":1298,"mtime":1615396131467,"results":"112","hashOfConfig":"67"},{"size":5832,"mtime":1615401408198,"results":"113","hashOfConfig":"67"},{"size":2779,"mtime":1615401648009,"results":"114","hashOfConfig":"67"},{"size":5213,"mtime":1615401335746,"results":"115","hashOfConfig":"67"},{"size":3154,"mtime":1615396301500,"results":"116","hashOfConfig":"67"},{"size":1354,"mtime":1615401540689,"results":"117","hashOfConfig":"67"},{"size":1214,"mtime":1615396301500,"results":"118","hashOfConfig":"67"},{"size":9793,"mtime":1615396301501,"results":"119","hashOfConfig":"67"},{"size":7014,"mtime":1615401192708,"results":"120","hashOfConfig":"67"},{"size":4529,"mtime":1615401748131,"results":"121","hashOfConfig":"67"},{"size":839,"mtime":1615398446630,"results":"122","hashOfConfig":"67"},{"size":263,"mtime":1615395411697,"results":"123","hashOfConfig":"67"},{"size":4815,"mtime":1615395512858,"results":"124","hashOfConfig":"67"},{"size":1629,"mtime":1615397104245,"results":"125","hashOfConfig":"67"},{"size":360,"mtime":1615397085872,"results":"126","hashOfConfig":"67"},{"size":2109,"mtime":1615398593998,"results":"127","hashOfConfig":"67"},{"size":995,"mtime":1615395972178,"results":"128","hashOfConfig":"67"},{"size":82,"mtime":1615396162619,"results":"129","hashOfConfig":"67"},{"size":893,"mtime":1615396324670,"results":"130","hashOfConfig":"67"},{"size":270,"mtime":1615396536261,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"1vvdbak",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"134"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"134"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"134"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"134"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"134"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"134"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"134"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"134"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"134"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"134"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"134"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"134"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"134"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"134"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"134"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"134"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"134"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"134"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"134"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"134"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"134"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\index.js",[],["288","289"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\App.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Routes\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Home.js",["290","291"],"import React, { useContext, useState } from \"react\";\nimport { UidContext } from \"../components/UserIdConnect\";\nimport LeftNav from \"../components/LeftNav\";\nimport Thread from \"../components/Thread\";\nimport Trends from \"../components/Trends\";\nimport SearchForm from \"../components/Post/SearchForm\";\nimport Navbar from \"../components/Navbar\"\nimport { useSelector } from \"react-redux\";\n\n\nconst Home = () => {\n  const uid = useContext(UidContext);\n  const userData = useSelector((state) => state.userReducer);\n  const [state, setState] = useState({\n    isSearching: false,\n    active:\"search\",\n    post:[{}, {}],\n    query: \"\"\n  });\n\n  const onTextChange = input => {\n    setState({ ...state, isSearching : input.length > 0})\n    console.log(input)\n  }\n\n  const afficheLeftNav = () =>\n  {\n    if (userData.role === 'client') {\n      return (\n        <LeftNav />\n      )\n    }\n  }\n\n  return (\n    <>\n    <Navbar />\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-1\">\n          {afficheLeftNav()}\n        </div>\n        <div className=\"col-7\">\n          <br/>\n          <SearchForm/>\n          <hr/>\n          <Thread />\n        </div>\n        <div className=\"col-4\">\n          <Trends />\n        </div>\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default Home;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInForm.js",["292","293"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport SignUpForm from \"./SignUpForm\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\n\nconst SignInForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const emailError = document.querySelector(\".email.error\");\n    const passwordError = document.querySelector(\".password.error\");\n    const roleError = document.querySelector(\".role.error\")\n\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_API_URL}api/user/login`,\n      withCredentials: true,\n      data: {\n        email,\n        password,\n        role,\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.errors) {\n          emailError.innerHTML = res.data.errors.email;\n          passwordError.innerHTML = res.data.errors.password;\n          roleError.innerHTML = res.data.errors.role;\n        } else {\n          window.location = \"/\";\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <MDBContainer>\n    <MDBRow>\n      <MDBCol md=\"12\">\n        <MDBCard >\n          <MDBCardBody>\n            <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\n              <p className=\"h4 text-center py-4\">Connexion client</p>\n              <div className=\"role error\"></div>\n              <div className=\"grey-text\">\n                <MDBInput\n                  label=\"email\"\n                  icon=\"envelope\"\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n                <div className=\"email error\"></div>\n                <MDBInput\n                  label=\"password\"\n                  icon=\"lock\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                />\n                <div className=\"password error\"></div>\n              </div>\n              <div className=\"text-center py-4 mt-3\">\n                <MDBBtn type=\"submit\">\n                  Se connecter\n                </MDBBtn>\n              </div>\n            </form>\n            <MDBModalFooter>\n                <div className=\"font-weight-light\">\n                  <a href=\"/profil\">Forgot Password?</a>\n                </div>\n              </MDBModalFooter>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  </MDBContainer>\n  );\n};\n\nexport default SignInForm;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Navbar.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Logout.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\user.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Thread.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\post.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\users.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\error.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNav.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Trends.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Card.js",["294"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dateParser, isEmpty } from \"../Utilitaires\";\nimport LikeButton from \"./LikeButton\";\nimport { updatePost } from \"../../actions/postAction\";\nimport DeleteCard from \"./DeleteCard\";\nimport CardComments from \"./CardComments\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBCard } from 'mdbreact';\nimport Popup from \"reactjs-popup\";\nimport { useContext } from \"react\";\nimport { UidContext } from \"../UserIdConnect\";\n\nconst Card = ({ post }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [textUpdate, setTextUpdate] = useState(null);\n  const [showComments, setShowComments] = useState(false);\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n  const uid = useContext(UidContext);\n\n  const updateItem = () => {\n    if (textUpdate) {\n      dispatch(updatePost(post._id, textUpdate));\n    }\n    setIsUpdated(false);\n  };\n\n  useEffect(() => {\n    !isEmpty(usersData[0]) && setIsLoading(false);\n  }, [usersData]);\n\n  return (\n    <div>\n      <br />\n      <MDBCard >\n        <li className=\"container\" key={post._id}>\n          {isLoading ? (\n            <i className=\"fas fa-spinner fa-spin\"></i>\n          ) : (\n              <>\n                <div className=\"round\">\n                  <br />\n                  <h6>\n                    <img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\n                      src={\n                        !isEmpty(usersData[0]) &&\n                        usersData\n                          .map((user) => {\n                            if (user._id === post.posterId) return user.picture;\n                            else return null;\n                          })\n                          .join(\"\")\n                      }\n                      alt=\"poster-pic\"\n                    />\n                    {\"  \"}\n                    {!isEmpty(usersData[0]) &&\n                      usersData\n                        .map((user) => {\n                          if (user._id === post.posterId) return user.pseudo;\n                          else return null;\n                        })\n                        .join(\"\")}\n\n                    <div className=\"col-sm\" style={{textAlign:'right'}}>\n                        <img src=\"./img/camera.png\" title=\"Prise de vue locataire\"/>\n                    </div>\n                  </h6>\n\n                </div>\n                <div>\n                  <div>\n                    <div>\n                      <h4>{post.titre}</h4>\n                      \n                    </div>\n                  </div>\n                  <div className=\"row\" >\n                    <div className=\"col-sm\">\n                      {uid ? (\n                        <a href={`/reservation/${post._id}`}>\n                          {post.picture && (\n                            <img height=\"200\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\n                          )}\n                          {post.video && (\n                            <iframe\n                              width=\"365\"\n                              height=\"200\"\n                              src={post.video}\n                              frameBorder=\"0\"\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                              allowFullScreen\n                              title={post._id}\n                            ></iframe>\n                          )}\n                        </a>\n                      ) : (\n                        <>\n\n                            {post.picture && (\n                            <img height=\"200\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\n                          )}\n                          {post.video && (\n                            <iframe\n                              width=\"365\"\n                              height=\"200\"\n                              src={post.video}\n                              frameBorder=\"0\"\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                              allowFullScreen\n                              title={post._id}\n                            ></iframe>\n                          )}\n                        </>\n                      )}\n\n                      \n\n\n\n                      {isUpdated && (\n                        <div className=\"update-post\">\n                          <textarea\n                            defaultValue={post.message}\n                            onChange={(e) => setTextUpdate(e.target.value)}\n                          />\n                          <div className=\"button-container\">\n                            <button className=\"btn\" onClick={updateItem}>\n                              Valider modification\n                      </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"col-sm\">\n                      <span style={{fontSize:\"12px\", fontWeight:\"bold\"}}>Publiée le {dateParser(post.createdAt)}</span>\n                      {isUpdated === false && <p>{post.message}</p>}\n                    </div>\n                  </div>\n\n\n                  {userData._id === post.posterId && (\n                    <div className=\"button-container\">\n                      <div onClick={() => setIsUpdated(!isUpdated)}>\n                        <img height=\"40\" src=\"./img/icons/document.svg\" alt=\"edit\" />\n                      </div>\n                      <DeleteCard id={post._id} />\n                    </div>\n                  )}\n                  <div className=\"row\">\n                  <div className=\"col-sm\">\n                      <span style={{fontSize:'12px'}}>commentaire </span>\n                          <i onClick={() => setShowComments(!showComments)} className=\"fas fa-comment\"></i>  {post.comments.length}\n                      \n                  </div>\n                    <div className=\"col-sm\">\n                      <LikeButton post={post} />\n                    </div>\n                    <div className=\"col-sm\">\n                      {uid === null && (\n                        <Popup\n                          trigger={<button type=\"submit\" className=\"btn btn-light\">\n                            Reserver \n                            </button>}\n                          position={[\"bottom center\", \"bottom right\", \"bottom left\"]}\n                          closeOnDocumentClick>\n                          <div>Connectez-vous pour faire une reservation!</div>\n                        </Popup>\n\n                      )}\n                      {uid && (\n                        <button type=\"submit\" className=\"btn btn-light\">\n\n                        <a style={{color:'#ff9f1a'}} href={`/reservation/${post._id}`}>\n                           Reserver \n                        </a>\n                        </button>\n                        )}\n                      \n                       \n                    </div>\n\n                  </div>\n                  {showComments && <CardComments post={post} />}\n                </div>\n              </>\n            )}\n        </li>\n      </MDBCard>\n\n    </div>\n  );\n};\n\nexport default Card;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\NewPostForm.js",["295","296"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"../Utils\";\nimport { addPost, getPosts } from \"../../actions/post.actions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\n\n\n\nconst NewPostForm = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [titre, setTitre] = useState(\"\");\n  const [superficie, setSuperficie] = useState(\"\");\n  const [prix, setPrix] = useState(\"\");\n  const [date_open, setDate_open] = useState(\"\");\n  const [date_close, setDate_close] = useState(\"\");\n  const [localisation, setLocalisation] = useState(\"\");\n  const [codepostal, setCodepostal] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [postPicture, setPostPicture] = useState(null);\n  const [video, setVideo] = useState(\"\");\n  const [file, setFile] = useState([]);\n  const userData = useSelector((state) => state.userReducer);\n  const error = useSelector((state) => state.errorReducer.postError);\n  const dispatch = useDispatch();\n\n  const [selectedImages, setSelectedImages] = useState([])\n  const imageHandleChange = (e) => {\n      console.log(e.target.files)\n      if(e.target.files) {\n        const fileArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file))\n        console.log(fileArray);\n        setSelectedImages((prevImages) =>prevImages.concat(fileArray));\n        setFile(e.target.files[0]);\n        setVideo('');\n        console.log(file)\n        Array.from(e.target.files).map(\n          (file)=>URL.revokeObjectURL(file)\n        );\n      }\n  };\n  const renderPhotos = (source) => {\n\t\tconsole.log('source: ', source);\n\t\treturn source.map((photo) => {\n\t\t\treturn <img height=\"200px\" width=\"50%\" src={photo} alt=\"\" key={photo} />;\n\t\t});\n\t};\n  /*\n  const handlePicture = (e) => {\n    setPostPicture(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n    setVideo('');\n  }; \n  */\n\n  const handlePost = async () => {\n    if (message || postPicture || video) {\n      const data = new FormData();\n      data.append('posterId', userData._id);\n      data.append('message', message);\n      data.append('titre', titre);\n      data.append('superficie', superficie);\n      data.append('prix', prix);\n      data.append('date_open', date_open);\n      data.append('date_close', date_close);\n      data.append('localisation', localisation);\n      data.append('codepostal', codepostal);\n      data.append('type', type);\n      if (file) data.append(\"file\", file);\n      data.append('video', video);\n      await dispatch(addPost(data));\n      dispatch(getPosts());\n      cancelPost();\n    } else {\n      alert(\"Veuillez entrer un message\")\n    }\n  };\n \n  const cancelPost = () => {\n    setMessage(\"\");\n    setTitre(\"\");\n    setSuperficie(\"\");\n    setPrix(\"\");\n    setDate_open(\"\");\n    setDate_close(\"\");\n    setLocalisation(\"\");\n    setCodepostal(\"\");\n    setType(\"\");\n    setPostPicture(\"\");\n    setVideo(\"\");\n    setFile(\"\");\n    setSelectedImages(\"\");\n  };\n\n\n  useEffect(() => {\n    if (!isEmpty(userData)) setIsLoading(false);\n\n    const handleVideo = () => {\n      let findLink = message.split(\" \");\n      for (let i = 0; i < findLink.length; i++) {\n        if (\n          findLink[i].includes(\"https://www.yout\") ||\n          findLink[i].includes(\"https://yout\")\n        ) {\n          let embed = findLink[i].replace(\"watch?v=\", \"embed/\");\n          setVideo(embed.split(\"&\")[0]);\n          findLink.splice(i, 1);\n          setMessage(findLink.join(\" \"));\n          setPostPicture('');\n        }\n      }\n    };\n    handleVideo();\n  }, [userData, message, video]);\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <i className=\"fas fa-spinner fa-pulse\"></i>\n      ) : (\n        <>\n        <MDBContainer><bcomplexe r />\n            <MDBRow>\n\n              <MDBCol md=\"12\">\n                <MDBCard>\n                  <MDBCardBody>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <h4 style={{backgroundColor:'#ff9f1a'}}>Déposer votre annonce</h4>\n          <div className=\"form\">\n            <br/>\n            \n            <br/>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                  <label htmlFor=\"titre\">Titre de l'annonce :</label>\n                  <br/>\n                  <input\n                    type=\"text\"\n                    name=\"titre\"\n                    id=\"titre\"\n                    placeholder=\"Votre titre ?\"\n                    onChange={(e) => setTitre(e.target.value)}\n                    value={titre}\n                  />\n                </div>\n                <div className=\"col-5\">\n                  <label htmlFor=\"type\">Type :</label>\n                  <br/>\n                  <MDBInput\n                    type=\"text\"\n                    name=\"type\"\n                    id=\"type\"\n                    placeholder=\"Quelle Type ?\"\n                    onChange={(e) => setType(e.target.value)}\n                    value={type}\n                  />\n                </div>\n            </div>\n            <div className=\"row\">\n                  <div className=\"col-6\">\n                    <label htmlFor=\"superficie\">Superficie (m²) :</label>\n                    <br/>\n                    <input\n                      type=\"number\"\n                      name=\"superficie\"\n                      id=\"superficie\"\n                      placeholder=\"Quelle est la superficie de l'habitat ?\"\n                      onChange={(e) => setSuperficie(e.target.value)}\n                      value={superficie}\n                    />\n                  </div>\n                  <div className=\"col-5\">\n                    <label htmlFor=\"codepostal\">Code postal :</label>\n                    <br/>\n                    <input\n                      type=\"number\"\n                      name=\"codepostal\"\n                      id=\"codepostal\"\n                      placeholder=\"Code postal ?\"\n                      onChange={(e) => setCodepostal(e.target.value)}\n                      value={codepostal}\n                    />\n                  </div>\n              </div>\n            <div className=\"col-11\">\n              <label htmlFor=\"localisation\">Localisation :</label>\n              <br/>\n              <input\n                type=\"text\"\n                name=\"localisation\"\n                id=\"localisation\"\n                placeholder=\"Localisation ?\"\n                onChange={(e) => setLocalisation(e.target.value)}\n                value={localisation}\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-6\">\n              <label htmlFor=\"prix\">Prix (€) :</label>\n              <br/>\n              <input\n                type=\"number\"\n                name=\"prix\"\n                id=\"prix\"\n                placeholder=\"Coût ?\"\n                onChange={(e) => setPrix(e.target.value)}\n                value={prix}\n              />\n            </div>\n            <div className=\"col-5\">\n              <label htmlFor=\"nbr_personne\"> Capacité de reception :</label>\n              <br/>\n              <input\n                type=\"number\"\n                name=\"nbr_personne\"\n                id=\"nbr_personne\"\n                placeholder=\"Pour combien de personne max?\"\n                onChange={(e) => setPrix(e.target.value)}\n                \n              />\n            </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"11\">\n              <label htmlFor=\"date_open\">Date de debut de reception :</label>\n              <br/>\n              <input\n                type=\"date\"\n                name=\"date_open\"\n                id=\"date_open\"\n                onChange={(e) => setDate_open(e.target.value)}\n                value={date_open}\n              />\n              </div>\n              </div>\n              <div className=\"row\">\n              <hr/>{\"   \"}\n              <div className=\"11\">\n              <label htmlFor=\"date_close\">Date de fin de reception :</label>\n              <br/>\n              <input\n                type=\"date\"\n                name=\"date_close\"\n                id=\"date_close\"\n                onChange={(e) => setDate_close(e.target.value)}\n                value={date_close}\n              />\n              </div>\n            <div>\n              <label htmlFor=\"message\">Décrivez votre bien :</label>\n              <br/>\n              <textarea\n                rows=\"20\" cols=\"50\"\n                name=\"message\"\n                id=\"message\"\n                placeholder=\"Votre commentaire...\"\n                onChange={(e) => setMessage(e.target.value)}\n                value={message}\n              />\n            </div>\n            </div>\n            \n            \n            \n            \n            \n            \n            <div className=\"footer-form\">\n              <div className=\"icon\">\n                {isEmpty(video) && (\n                  <>\n                    <img src=\"./img/icons/picture.svg\" alt=\"img\" />\n                    <input\n                      multiple\n                      type=\"file\"\n                      id=\"file-upload\"\n                      name=\"file\"\n                      accept=\".jpg, .jpeg, .png\"\n                      onChange={imageHandleChange}\n                    />\n                  </>\n                )}\n                {video && (\n                  <button onClick={() => setVideo(\"\")}>Supprimer video</button>\n                )}\n              </div>\n              {!isEmpty(error.format) && <p>{error.format}</p>}\n              {!isEmpty(error.maxSize) && <p>{error.maxSize}</p>}\n              <div className=\"btn-send\">\n                {message || selectedImages || video.length > 20 ? (\n                  <button className=\"cancel\" onClick={cancelPost}>\n                    Annuler message\n                  </button>\n                ) : null}\n                <button  className=\"send\" onClick={handlePost}>\n                  Envoyer\n                </button>\n              </div>\n            </div>\n          </div>\n          </div>\n          <div className=\"col-6\" style={{borderLeft:\"2px solid black\", }}>\n            <h4 style={{backgroundColor:'#ff9f1a'}}>Images</h4>\n                {message || selectedImages || video.length > 20 ? (\n              \n              <div className=\"right\">\n                  <div className=\"content\">\n                    <div className=\"row\">\n                      {renderPhotos(selectedImages)}\n                    </div>\n                    \n                    {video && (\n                      <iframe\n                         src={video}\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title={video}\n                      ></iframe>\n                    )}\n                  </div>\n              </div>\n            \n            ) : null}\n          </div>\n          </div>\n          </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NewPostForm;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\LikeButton.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\DeleteCard.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardComments.js",["297"],"import { MDBCard } from \"mdbreact\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addComment, getPosts } from \"../../actions/post.actions\";\nimport { isEmpty, timestampParser } from \"../Utils\";\nimport EditDeleteComment from \"./EditDeleteComment\";\n\nconst CardComments = ({ post }) => {\n  const [text, setText] = useState(\"\");\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n\n  const handleComment = (e) => {\n    e.preventDefault();\n\n    if (text) {\n      dispatch(addComment(post._id, userData._id, text, userData.pseudo))\n        .then(() => dispatch(getPosts()))\n        .then(() => setText(''));\n    }\n  };\n\n  return (\n    <div className=\"comments-container\">\n      {post.comments.map((comment) => {\n        return (\n          <div\n            className={\n              comment.commenterId === userData._id\n                ? \"comment-container client\"\n                : \"comment-container\"\n            }\n            key={comment._id}\n          >\n            <div className=\"left-part\">\n              <h6>\n                <img height=\"30\" width=\"30\" style={{ borderRadius: \"50%\" }}\n                src={\n                  !isEmpty(usersData[0]) &&\n                  usersData\n                    .map((user) => {\n                      if (user._id === comment.commenterId) return user.picture;\n                      else return null;\n                    })\n                    .join(\"\")\n                }\n                alt=\"commenter-pic\"\n              />\n                {comment.commenterPseudo}{\" \"} <span style={{fontSize:\"10px\"}}>{timestampParser(comment.timestamp)}</span>\n              </h6>\n              \n            </div>\n            <div className=\"right-part\">\n              <div className=\"comment-header\">\n                <div className=\"pseudo\">\n                  <h3></h3> \n                </div>\n                \n              </div>\n              <MDBCard style={{backgroundColor:'#ecf0f1', borderRadius:\"5px 10px\"}} className=\"col-6\">{comment.text}</MDBCard>\n              <EditDeleteComment comment={comment} postId={post._id} />\n            </div>\n          </div>\n        );\n      })}\n      {userData._id && (\n        <form action=\"\" onSubmit={handleComment} className=\"comment-form\">\n          <input\n            type=\"text\"\n            name=\"text\"\n            onChange={(e) => setText(e.target.value)}\n            value={text}\n            placeholder=\"Laisser un commentaire\"\n          />\n          <br />\n          <button className=\"fas fa-paper-plane\" aria-hidden=\"true\" type=\"submit\" ></button>\n          <br/>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default CardComments;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\EditDeleteComment.js",[],["298","299"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Favoris.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Search.js",["300","301","302","303","304","305"],"import React, { useContext, useState } from \"react\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport LeftNav from \"../components/LeftNav\";\r\nimport SearchForm from \"../components/Post/SearchForm\";\r\nimport Thread from \"../components/Thread\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\nimport Navbar from \"../components/Navbar\"\r\n\r\nconst Search = () => {\r\n  const uid = useContext(UidContext);\r\n  const [state, setState] = useState({\r\n    isSearching: false,\r\n    active: \"search\",\r\n    post: [{}, {}],\r\n    query: \"\"\r\n  });\r\n  const onTextChange = input => {\r\n    setState({ ...state, isSearching: input.length > 0 })\r\n    console.log(input)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-1\">\r\n          <LeftNav />\r\n        </div>\r\n        <div className=\"col-11\">\r\n\r\n          <MDBContainer><bcomplexe r />\r\n            <MDBRow>\r\n\r\n              <MDBCol md=\"12\">\r\n                <MDBCard>\r\n                  <MDBCardBody>\r\n                    <form >\r\n                      <p className=\"h4 text-center py-4\">Veuillez entrer les détails de votre recherche</p>\r\n                      <div className=\"grey-text\">\r\n                        \r\n                        <br />\r\n\r\n                        <div className=\"terms error\"></div>\r\n                      </div>\r\n                      <div className=\"text-center py-4 mt-3\">\r\n                        <MDBBtn color=\"#ff9f1a\" type=\"submit\">\r\n                          Valider la recherche\r\n                            </MDBBtn>\r\n                      </div>\r\n                    </form>\r\n                  </MDBCardBody>\r\n                </MDBCard>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\SearchForm.js",["306","307","308","309"],"import { MDBBtn, MDBCard, MDBInput } from \"mdbreact\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../Utils\";\r\nimport Card from \"./Card\";\r\n\r\nconst SearchForm = () => {\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const [searcharr, setSearcharr] = useState('')\r\n  const [searchdep, setSearchdep] = useState('')\r\n\r\n  const refrechSearch = () => {\r\n    setSearcharr('');\r\n    setSearchdep('');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-1\"></div>\r\n        <MDBInput\r\n          htmlFor=\"date_arr\"\r\n          label=\"Date d'arriver\"\r\n          type=\"date\"\r\n          id=\"date_arr\"\r\n          onChange={e => setSearcharr(e.target.value)}\r\n        />\r\n        <div className=\"col-1\"></div>\r\n        <MDBInput\r\n          htmlFor=\"date_dep\"\r\n          label=\"Date de depart\"\r\n          type=\"date\"\r\n          id=\"date_dep\"\r\n          onChange={e => setSearchdep(e.target.value)}\r\n        />\r\n        <i title=\"Rafraîchir\" style={{padding: '20px'}} onClick={refrechSearch} class=\"fas fa-sync-alt\"></i>\r\n       \r\n\r\n      </div>\r\n\r\n      <div>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n            if (\r\n              (((searcharr < post.date_open) || (post.date_close > searcharr))\r\n              && (searcharr > post.date_open))\r\n              \r\n            ) {\r\n              if (searchdep <= post.date_close) {\r\n                return (\r\n                <div>\r\n                  <p style={{ color: 'red' }}>Disponible</p>\r\n                  <Card post={post} key={post._id} />\r\n                </div>\r\n\r\n              )\r\n              }\r\n             \r\n              \r\n            }\r\n             \r\n          } )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\Results.js",["310"],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Newpost.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadsFavoris.js",["311","312"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/post.actions\";\r\nimport Card from \"./Post/Card\";\r\nimport { isEmpty } from \"./Utils\";\r\n\r\nconst ThreadsFavoris = () => {\r\n  const [loadPost, setLoadPost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const loadMore = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n      setLoadPost(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      dispatch(getPosts(count));\r\n      setLoadPost(false);\r\n      setCount(count + 5);\r\n    }\r\n\r\n    window.addEventListener('scroll', loadMore);\r\n    return () => window.removeEventListener('scroll', loadMore);\r\n  }, [loadPost, dispatch, count]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n            for (let i = 0; i < userData.likes.length; i++) {\r\n              if (post._id === userData.likes[i]) {\r\n                return <Card post={post} key={post._id} />;\r\n              }\r\n            }\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadsFavoris;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Reservation.js",["313","314","315","316","317","318","319","320","321","322"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { dateParser, isEmpty } from \"../components/Utilitaires\";\r\nimport { useSelector } from \"react-redux\";\r\nimport StripeCheckout from \"react-stripe-checkout\"\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { MDBCard } from 'mdbreact';\r\nimport Navbar from \"../components/Navbar\";\r\n\r\n\r\nconst Reservation = (props) => {\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  const [post, setPost] = useState({\r\n    name: \"React from Me\",\r\n    price: posts.price,\r\n  });\r\n  /*\r\n    const [Images, setImages] = useState([])\r\n  \r\n    useEffect(() => {\r\n      {!isEmpty(posts[0]) &&\r\n        posts.map((post) => {\r\n          if (post._id === props.match.params.id) {\r\n            if (post.picture.length > 0) {\r\n              let images = [];\r\n  \r\n              post.picture.map((picture) => {\r\n                images.push({\r\n                  original: `http://localhost:5000/${picture}`,\r\n                  thumbnail: `http://localhost:5000/${picture}`,\r\n                })\r\n              })\r\n              setImages(images)\r\n            }\r\n          }\r\n        })}\r\n    }, [props.match.params.url])\r\n  */\r\n  const images = [\r\n    {\r\n      original: 'https://picsum.photos/id/1018/1000/600/',\r\n      thumbnail: 'https://picsum.photos/id/1018/250/150/',\r\n    },\r\n    {\r\n      original: 'https://picsum.photos/id/1015/1000/600/',\r\n      thumbnail: 'https://picsum.photos/id/1015/250/150/',\r\n    },\r\n    {\r\n      original: 'https://picsum.photos/id/1019/1000/600/',\r\n      thumbnail: 'https://picsum.photos/id/1019/250/150/',\r\n    },\r\n  ];\r\n\r\n  const makePayment = token => {\r\n    const body = {\r\n      token,\r\n      post\r\n    }\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    return fetch(`http://localhost:5000/payment`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(body)\r\n    }\r\n    ).then(response => {\r\n      console.log(\"RESPONSE\", response)\r\n      const { status } = response;\r\n      console.log(\"STATUS\", status)\r\n    })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n\r\n  const match = useRouteMatch()\r\n\r\n  useEffect(() => {\r\n    return (dispatch) => {\r\n      axios\r\n        .get(`${process.env.REACT_APP_API_URL}api/post/${props.match.params.id}`)\r\n        .then((res) => [\r\n        ])\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [props])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n\r\n          <ul>\r\n            {!isEmpty(posts[0]) &&\r\n              posts.map((post) => {\r\n                if (post._id === props.match.params.id) {\r\n                  return <div>\r\n                    {post.picture && (\r\n                      <img height=\"200\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\r\n                    )}\r\n                    <h6> {post.picture}</h6>\r\n                    {post.video && (\r\n                      <iframe\r\n                        width=\"100%\"\r\n                        height=\"400\"\r\n                        src={post.video}\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen\r\n                        title={post._id}\r\n                      ></iframe>\r\n                    )}\r\n                    <hr />\r\n                    <ImageGallery items={images} />\r\n                    <h3>{post.titre}</h3>\r\n                    <span>{post.superficie} - {post.localisation}</span>\r\n                    <h5>{post.price}</h5>\r\n                    <span>Publiée le {dateParser(post.createdAt)}</span>\r\n                    <hr />\r\n                    <h5>Détails</h5>\r\n                    <p>{post.message}</p>\r\n                    <hr />\r\n                    <h5>Cartographie</h5>\r\n                  </div>\r\n                }\r\n              })}\r\n          </ul>\r\n          <StripeCheckout\r\n            stripeKey=\"pk_test_51IQafJDRHvU06AUoTyjd7f3g4TuEJI2wfvRwZxHKSuHQvfZE8J5Dy9GAgeNcH5oZoK6HDa1cYUFyaLKwis59tvRd00ZAf60pn1\"\r\n            token=\"\"\r\n            name=\"By Merith\"\r\n            amount={post.price * 10}\r\n            shippingAddress\r\n            billingAddress\r\n          >\r\n            <button className=\"btn-large green\">Payer </button>\r\n          </StripeCheckout></div>\r\n        <div className=\"col-4\">\r\n          <br />\r\n          <br />\r\n          <h5> Les informations du propriétaire</h5>\r\n          <div>\r\n            <MDBCard>\r\n              {!isEmpty(posts[0]) &&\r\n                posts.map((post) => {\r\n                  if (post._id === props.match.params.id) {\r\n                    return <div>\r\n                      {!isEmpty(usersData[0]) &&\r\n                        usersData.map((user) => {\r\n                          if (post.posterId === user._id) {\r\n                            return <div>\r\n                              <br />\r\n                                    * Pseudo\r\n                                    <h3> {user.pseudo}</h3>\r\n                                    * Email\r\n                                    <h5> {user.email}</h5>\r\n                                    * Numéro de tel :\r\n                                </div>\r\n                          }\r\n                        })}\r\n                    </div>\r\n                  }\r\n                })}\r\n            </MDBCard>\r\n            {!isEmpty(posts[0]) &&\r\n              posts.map((post) => {\r\n                if (post._id === props.match.params.id) {\r\n                  return <div>\r\n                    {!isEmpty(usersData[0]) &&\r\n                      usersData.map((user) => {\r\n                        if (post.posterId === user._id) {\r\n                          return <div>\r\n                            <a href={`/chat/${user._id}`}>\r\n                              <button className=\"btn-large green\">Lui laisser un message </button>\r\n                            </a>\r\n                          </div>\r\n                        }\r\n                      })}\r\n                  </div>\r\n                }\r\n              })}\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Reservation\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Chat.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\ChatFeed.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MyMessage.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\TheirMessage.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Chat\\MessageForm.jsx",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_pro.js",["323"],"import React, { useContext } from \"react\";\r\nimport Index_pro from \"../components/Log/Index_pro\";\r\nimport { UidContext } from \"../components/AppContext\";\r\nimport UpdateProfil from \"../components/Profil/UpdateProfil\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../style/index.css\"\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst Profil_pro = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"container\" >\r\n      <div style={{ backgroundImage: \"./img/fond.svg\" }} >\r\n        {uid ? (\r\n          <UpdateProfil />\r\n        ) : (\r\n          <div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <Index_pro signin={true} signup={false} />\r\n                </div>\r\n               \r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profil_pro;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_pro.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInProForm.js",["324"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\n\r\nconst SignInProForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_API_URL}api/user/loginpro`,\r\n      withCredentials: true,\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.errors) {\r\n          emailError.innerHTML = res.data.errors.email;\r\n          passwordError.innerHTML = res.data.errors.password;\r\n        } else {\r\n          window.location = \"/newpost\";\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MDBContainer>\r\n    <MDBRow>\r\n      <MDBCol md=\"12\">\r\n        <MDBCard >\r\n          <MDBCardBody>\r\n            <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\r\n              <p className=\"h4 text-center py-4\">Connexion propriétaire</p>\r\n              <div className=\"grey-text\">\r\n                <MDBInput\r\n                  label=\"email\"\r\n                  icon=\"envelope\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                />\r\n                <div className=\"email error\"></div>\r\n                <MDBInput\r\n                  label=\"password\"\r\n                  icon=\"lock\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                />\r\n                <div className=\"password error\"></div>\r\n              </div>\r\n              <div className=\"text-center py-4 mt-3\">\r\n                <MDBBtn type=\"submit\">\r\n                  Se connecter\r\n                </MDBBtn>\r\n              </div>\r\n            </form>\r\n            <MDBModalFooter>\r\n                <div className=\"font-weight-light\">\r\n                  \r\n                  <a href=\"/profil_pro\">Forgot Password?</a>\r\n                </div>\r\n              </MDBModalFooter>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default SignInProForm;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpProForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\Index_admin.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignInAdminForm.js",["325"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\n\r\nconst SignInAdminForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_API_URL}api/user/loginadmin`,\r\n      withCredentials: true,\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.errors) {\r\n          emailError.innerHTML = res.data.errors.email;\r\n          passwordError.innerHTML = res.data.errors.password;\r\n        } else {\r\n          window.location = \"gestion\";\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MDBContainer>\r\n    <MDBRow>\r\n      <MDBCol md=\"12\">\r\n        <MDBCard >\r\n          <MDBCardBody>\r\n            <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\r\n              <p className=\"h4 text-center py-4\">Connexion administrateur</p>\r\n              <div className=\"grey-text\">\r\n                <MDBInput\r\n                  label=\"email\"\r\n                  icon=\"envelope\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                />\r\n                <div className=\"email error\"></div>\r\n                <MDBInput\r\n                  label=\"password\"\r\n                  icon=\"lock\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                />\r\n                <div className=\"password error\"></div>\r\n              </div>\r\n              <div className=\"text-center py-4 mt-3\">\r\n                <MDBBtn type=\"submit\">\r\n                  Se connecter\r\n                </MDBBtn>\r\n              </div>\r\n            </form>\r\n            <MDBModalFooter>\r\n                <div className=\"font-weight-light\">\r\n                  <p>Not a member? {\" \"}\r\n                      <a href=\"/profil_pro\"  >\r\n                      Sign up\r\n                      </a> </p>\r\n                  <a href=\"/profil_pro\">Forgot Password?</a>\r\n                </div>\r\n              </MDBModalFooter>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default SignInAdminForm;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Log\\SignUpAdminForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion.js",["326","327"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { isEmpty } from \"../../components/Utilitaires\";\r\n\r\n\r\nconst Gestion = ({ post }) => {\r\n    const posts = useSelector((state) => state.postReducer);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n    }, [usersData]);\r\n    return (\r\n        <div>\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink> \r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    Gestion des clients\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Gestion;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Profil_admin.js",["328"],"import React, { useContext } from \"react\";\r\nimport Index_admin from \"../components/Log/Index_admin\";\r\nimport { UidContext } from \"../components/AppContext\";\r\nimport UpdateProfil from \"../components/Profil/UpdateProfil\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../style/index.css\"\r\nimport Navbar from \"../components/Navbar\"\r\n\r\nconst Profil_admin = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"container\" >\r\n      <div style={{ backgroundImage: \"./img/fond.svg\" }} >\r\n        {uid ? (\r\n          <UpdateProfil />\r\n        ) : (\r\n          <div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <Index_admin signin={true} signup={false} />\r\n                </div>\r\n                <div className=\"col\">\r\n                  <img src=\"./img/fond.svg\" alt=\"img\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profil_admin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\LeftNavAdmin.js",["329"],"import React, { useContext } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UidContext } from './AppContext';\r\nimport Logout from './Log/Logout';\r\n\r\nconst LeftNavAdmin = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  return (\r\n    <div className=\"left-nav-container\">\r\n      <div className=\"container\">\r\n        <div className=\"container\">\r\n          <br/>\r\n          { uid ? (\r\n            <>\r\n              <NavLink to='/gestion_clients' exact >\r\n                  Gestion des clients\r\n              </NavLink>\r\n              <hr/>\r\n              <NavLink to='/gestion_pro' exact >\r\n                  Gestion des propriétaires\r\n              </NavLink>\r\n              <hr/>\r\n              <NavLink to='/gestion_pubs' exact >\r\n                  Gestion des Publications\r\n              </NavLink>\r\n              <hr/>\r\n              <NavLink to='/parametres' exact >\r\n                  Paramètres\r\n              </NavLink>\r\n              <hr/>\r\n                <NavLink to=''>\r\n                <Logout/>\r\n              </NavLink>\r\n              <hr/>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftNavAdmin;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pro.js",["330","331","332"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Gestion_pro = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const posts = useSelector((state) => state.postReducer);\r\n    const dispatch = useDispatch();\r\n    const deleteQuote = id => dispatch(deleteUser(id));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <br />\r\n                    <h1>Gestion des propriétaires</h1>\r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Nombre de Post</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"propriétaire\") {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>    \r\n                                                {!isEmpty(posts[0]) &&\r\n                                                    posts.map((post) => {\r\n                                                        if ( post.posterId === user._id) {\r\n                                                           return \r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <button type=\"submit\" className=\"btn btn-danger\" \r\n                                                    onClick={() => {\r\n                                                        if (window.confirm(\"Voulez-vous supprimer cet utilisateur ?\")) {\r\n                                                            deleteQuote(user._id);\r\n                                                            \r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-info\">\r\n                                                    <i className=\"fas fa-user-edit\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <a style={{ color: 'black' }} href={`/user_view/${user._id}`} >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </a>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    ) }\r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Gestion_pro;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Parametres.js",["333","334"],"import { Tooltip } from \"bootstrap\";\r\nimport { MDBBtn, MDBCard } from \"mdbreact\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\n\r\nconst Parametres = () => {\r\n    const userData = useSelector((state) => state.userReducer);\r\n    return (\r\n        <div>\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n                <NavLink exact to=\"/gestion\">\r\n                    <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n                </NavLink>\r\n                <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"block-header\">\r\n                            <br/>\r\n                            <h1>Paramètres</h1>\r\n                            <small className=\"text-muted\">Administrer les composants du fonctionnement de l'application</small>\r\n                        </div>\r\n                        <br/>\r\n                        <div class=\"row clearfix\">\r\n                            <MDBBtn>\r\n                                <NavLink exact to=\"/ajout_admin\">\r\n                                    Administrateur +\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                            <div className=\"col-1\"></div>\r\n                            <MDBBtn >\r\n                                <NavLink exact to=\"/listadmin\">\r\n                                   Liste des Administrateurs\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                            <div className=\"col-1\"></div>\r\n                            <MDBBtn >\r\n                                <NavLink exact to=\"/paramhabitat\">\r\n                                   parametres de l'habitat\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                        </div>\r\n                        <div class=\"row clearfix\">\r\n                            <MDBBtn >\r\n                                <NavLink exact to=\"/alerte\">\r\n                                   Gestion des alertes\r\n                                </NavLink>   \r\n                            </MDBBtn>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\nexport default Parametres;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_clients.js",["335"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Gestion_clients = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const deleteQuote = id => dispatch(deleteUser(id));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <br />\r\n                    <h1>Gestion des clients</h1>\r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"client\") {\r\n                                      return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>\r\n                                                <button type=\"submit\" className=\"btn btn-danger\" \r\n                                                    onClick={() => {\r\n                                                        if (window.confirm(\"Voulez-vous supprimer cet utilisateur ?\")) {\r\n                                                            deleteQuote(user._id);\r\n                                                            \r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-info\">\r\n                                                    <i className=\"fas fa-user-edit\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <a style={{ color: 'black' }} href={`/user_view/${user._id}`} >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </a>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    )  \r\n                                    }\r\n                                    \r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Gestion_clients;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\User_view.js",["336","337","338","339"],"import React from \"react\";\r\n\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\nimport { useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../../components/Utils\";\r\n\r\n\r\n\r\nconst User_view = (props) => {\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </nav>\r\n            <div className=\"container\">\r\n                <MDBContainer><bcomplexe r />\r\n                    <MDBRow>\r\n\r\n                        <MDBCol md=\"12\">\r\n                            <MDBCard>\r\n                                <MDBCardBody>\r\n                                    {!isEmpty(usersData[0]) &&\r\n                                        usersData.map((users) => {\r\n                                            if (users._id === props.match.params.id) {\r\n                                                return (\r\n                                                    <>\r\n                                                        <h1> Profil de {users.pseudo}</h1>\r\n                                                        <h6>Compte crée le : {dateParser(users.createdAt)}</h6>\r\n                                                        <div className=\"row\">\r\n                                                        <div className=\"col-6\">\r\n                                                        <ul>\r\n                                                            <li>Pseudo: {users.pseudo}</li>\r\n                                                            <li>Email: {users.email}</li>\r\n                                                        </ul>\r\n                                                        </div>\r\n                                                        <div className=\"col-6\">\r\n                                                            <div className=\"left-part\">\r\n                                                            <h3>Photo de profil</h3>\r\n                                                            <img height=\"400\"\r\n                                                                src={users.picture} alt=\"user-pic\" />\r\n                                                                {users.picture}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )\r\n                                                \r\n                                            }\r\n                                        })}\r\n\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User_view;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pubs.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\ThreadAdmin.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Post\\CardAdmin.js",["340","341","342","343"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../Utils\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport { updatePost } from \"../../actions/post.actions\";\r\nimport DeleteCard from \"./DeleteCard\";\r\nimport CardComments from \"./CardComments\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBCard } from 'mdbreact';\r\nimport Popup from \"reactjs-popup\";\r\nimport { useContext } from \"react\";\r\nimport { UidContext } from \"../AppContext\";\r\n\r\nconst CardAdmin = ({ post }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n    const [textUpdate, setTextUpdate] = useState(null);\r\n    const [showComments, setShowComments] = useState(false);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const uid = useContext(UidContext);\r\n\r\n    const updateItem = () => {\r\n        if (textUpdate) {\r\n            dispatch(updatePost(post._id, textUpdate));\r\n        }\r\n        setIsUpdated(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n    }, [usersData]);\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <MDBCard >\r\n                <li className=\"container\" key={post._id}>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"round\">\r\n                                <br />\r\n                                <h6>\r\n                                    <img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                        src={\r\n                                            !isEmpty(usersData[0]) &&\r\n                                            usersData\r\n                                                .map((user) => {\r\n                                                    if (user._id === post.posterId) return user.picture;\r\n                                                    else return null;\r\n                                                })\r\n                                                .join(\"\")\r\n                                        }\r\n                                        alt=\"poster-pic\"\r\n                                    />\r\n                                    {\"  \"}\r\n                                    {!isEmpty(usersData[0]) &&\r\n                                        usersData\r\n                                            .map((user) => {\r\n                                                if (user._id === post.posterId) return user.pseudo;\r\n                                                else return null;\r\n                                            })\r\n                                            .join(\"\")}\r\n                                    <div className=\"col-sm\" style={{textAlign:'right'}}>\r\n                                                <img src=\"./img/camera.png\" title=\"Prise de vue locataire\"/>\r\n                                        \r\n                                        </div>\r\n\r\n\r\n                                </h6>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                    <div>\r\n                                        <h4>{post.titre}</h4>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-sm\">\r\n                                        {uid ? (\r\n                                            <a href={`/reservation/${post._id}`}>\r\n                                                {post.picture && (\r\n                                                    <img height=\"200\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\r\n                                                )}\r\n                                                {post.video && (\r\n                                                    <iframe\r\n                                                        width=\"365\"\r\n                                                        height=\"200\"\r\n                                                        src={post.video}\r\n                                                        frameBorder=\"0\"\r\n                                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                                        allowFullScreen\r\n                                                        title={post._id}\r\n                                                    ></iframe>\r\n                                                )}\r\n                                            </a>\r\n                                        ) : (\r\n                                            <>\r\n\r\n                                                {post.picture && (\r\n                                                    <img height=\"200\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\r\n                                                )}\r\n                                                {post.video && (\r\n                                                    <iframe\r\n                                                        width=\"365\"\r\n                                                        height=\"200\"\r\n                                                        src={post.video}\r\n                                                        frameBorder=\"0\"\r\n                                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                                        allowFullScreen\r\n                                                        title={post._id}\r\n                                                    ></iframe>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n\r\n\r\n\r\n\r\n\r\n                                        {isUpdated && (\r\n                                            <div className=\"update-post\">\r\n                                                <textarea\r\n                                                    defaultValue={post.message}\r\n                                                    onChange={(e) => setTextUpdate(e.target.value)}\r\n                                                />\r\n                                                <div className=\"button-container\">\r\n                                                    <button className=\"btn\" onClick={updateItem}>\r\n                                                        Valider modification\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:\"12px\", fontWeight:\"bold\"}}>Publiée le {dateParser(post.createdAt)}</span>\r\n                                        \r\n                                        {isUpdated === false && <p>{post.message}</p>}\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        <span style={{fontSize:'12px'}}>commentaire </span>\r\n                                            <i onClick={() => setShowComments(!showComments)} className=\"fas fa-comment\"></i>  {post.comments.length}\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>j'aime </span>\r\n                                        <i className=\"fas fa-star\"></i>  {post.likers.length}\r\n                                       \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>voir </span>\r\n                                            <i className=\"fas fa-eye\"></i>\r\n                                       \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                        {(\r\n                                            <div className=\"button-container\">\r\n                                                \r\n                                                <DeleteCard id={post._id} />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>status :</span>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                {showComments && <CardComments post={post} />}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </li>\r\n            </MDBCard>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardAdmin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\Ajout_admin.js",["344","345"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ListAdmin from \"./ListAdmin\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst Ajout_admin = () => {\r\n  const [formSubmit, setFormSubmit] = useState(false);\r\n  const [pseudo, setPseudo] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [controlPassword, setControlPassword] = useState(\"\");\r\n  const role = \"administrateur\"\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    const pseudoError = document.querySelector(\".pseudo.error\");\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n    const passwordConfirmError = document.querySelector(\r\n      \".password-confirm.error\"\r\n    );\r\n\r\n    passwordConfirmError.innerHTML = \"\";\r\n\r\n    if (password !== controlPassword) {\r\n      if (password !== controlPassword)\r\n        passwordConfirmError.innerHTML =\r\n          \"Les mots de passe ne correspondent pas\";\r\n    } else {\r\n      await axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_API_URL}api/user/register`,\r\n        data: {\r\n          pseudo,\r\n          email,\r\n          password,\r\n          role,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.errors) {\r\n            pseudoError.innerHTML = res.data.errors.pseudo;\r\n            emailError.innerHTML = res.data.errors.email;\r\n            passwordError.innerHTML = res.data.errors.password;\r\n          } else {\r\n            setFormSubmit(true);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    {formSubmit ? (\r\n                        <>\r\n                        <h4 className=\"success\" style={{textAlign:'center', paddingTop:'15%'}}>\r\n                            Ajout réussi!\r\n                        </h4>\r\n                        <div class=\"success-animation\">\r\n                            <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"><circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" /><path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" /></svg>\r\n                        </div>\r\n                        \r\n                        <span></span>\r\n                        </>\r\n                    ) : (\r\n                    <MDBContainer>\r\n                        <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <MDBCard>\r\n                            <MDBCardBody >\r\n                                <form action=\"\" onSubmit={handleRegister} id=\"sign-up-form\">\r\n                                <p className=\"h4 text-center py-4\">Nouveau Administrateur</p>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput\r\n                                    htmlFor=\"pseudo\"\r\n                                    label=\"Pseudo\"\r\n                                    icon=\"user\"\r\n                                    type=\"text\"\r\n                                    name=\"pseudo\"\r\n                                    id=\"pseudo\"\r\n                                    onChange={(e) => setPseudo(e.target.value)}\r\n                                    value={pseudo}\r\n                                    />\r\n                                    <div className=\"pseudo error\"></div>\r\n                                    <MDBInput\r\n                                    htmlFor=\"email\"\r\n                                    label=\"Email\"\r\n                                    icon=\"envelope\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    value={email}\r\n                                    />\r\n                                    <div className=\"email error\"></div>\r\n                                    <MDBInput\r\n                                    htmlFor=\"password\"\r\n                                    label=\"Mot de passe\"\r\n                                    icon=\"lock\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    value={password}\r\n                                    />\r\n                                    <div className=\"password error\"></div>\r\n                                    <MDBInput\r\n                                    htmlFor=\"password-conf\"\r\n                                    label=\"Confirmation mot de passe\"\r\n                                    icon=\"exclamation-triangle\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password-conf\"\r\n                                    onChange={(e) => setControlPassword(e.target.value)}\r\n                                    value={controlPassword}\r\n                                    />\r\n                                    <div className=\"password-confirm error\"></div>\r\n                                    \r\n                                </div>\r\n                                <div className=\"text-center py-4 mt-3\">\r\n                                    <MDBBtn type=\"submit\" >\r\n                                    Valider\r\n                                    </MDBBtn>\r\n                                </div>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ajout_admin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\pages_admin\\ListAdmin.js",["346","347","348","349"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\nconst ListAdmin = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const posts = useSelector((state) => state.postReducer);\r\n    const dispatch = useDispatch();\r\n    const deleteQuote = id => dispatch(deleteUser(id));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <br />\r\n                    <h1>Liste des Administrateurs\r\n                        <div style={{textAlign:'right', paddingRight:'30px'}}>\r\n                            <NavLink exact to=\"/ajout_admin\">\r\n                                <i className=\"fas fa-plus\" title=\"Ajouter\"></i>\r\n                            </NavLink>   \r\n                        </div>\r\n                    </h1>\r\n                    \r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"administrateur\") {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>\r\n                                                \r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <a style={{ color: 'black' }} href={`/user_view/${user._id}`} >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </a>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    ) }\r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ListAdmin;","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\pages\\Bestof.js",["350"],"import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { UidContext } from \"../components/UserIdConnect\";\nimport LeftNav from '../components/LeftNav';\nimport { isEmpty } from \"../components/Utilitaires\";\nimport Card from \"../components/Post/Card\";\nimport Navbar from \"../components/Navbar\"\n\nconst Bestof = () => {\n  const uid = useContext(UidContext);\n  const trendList = useSelector((state) => state.bestofReducer);\n\n  return (\n  <>\n  <Navbar />\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-1\">\n      <LeftNav />\n      </div>  \n      <div className=\"col-11\">\n        <ul>\n          {!isEmpty(trendList[0]) && trendList.map((post) => <Card post={post} key={post._id} />)}\n        </ul>\n      </div>\n      </div>\n    \n  </div>\n  </>\n  );\n};\n\nexport default Bestof;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\bestof.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\postAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\userAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\actions\\usersAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdateInfoProfil.js",["351","352","353","354","355"],"import React, { useState } from \"react\";\nimport LeftNav from \"../LeftNav\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UpdatePicture from \"./UpdatePicture\";\nimport { dateParser } from \"../Utilitaires\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\n\n\nconst UpdateInfoProfil = () => {\n  const userData = useSelector((state) => state.userReducer);\n  const error = useSelector((state) => state.errorReducer.userError);\n\n  \n\n  const afficheLeftNav = () =>\n  {\n    if (userData.role === 'client') {\n      return (\n        <LeftNav />\n      )\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-1\">\n          {afficheLeftNav()}\n        </div>\n        <br/>\n        <div className=\"col-11\">\n          <MDBContainer><bcomplexe r />\n            <MDBRow>\n\n              <MDBCol md=\"12\">\n                <MDBCard>\n                  <MDBCardBody>\n                    <h1> Profil de {userData.pseudo}</h1>\n                    <h6>Compte créé le : {dateParser(userData.createdAt)}</h6>\n                    <div className=\"row\">\n                    <div className=\"col-6\">\n                      <ul>\n                        <li>Pseudo: {userData.pseudo}</li>\n                        <li>Email: {userData.email}</li>\n                      </ul>\n                    </div>\n                      <div className=\"col-6\">\n                        <div className=\"left-part\">\n                          <h3>Photo de profil</h3>\n                          <img height=\"400\"\n                            src={userData.picture} alt=\"user-pic\" />\n                          <UpdatePicture />\n                          <p>{error.maxSize}</p>\n                          <p>{error.format}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </div>\n\n        </div>\n      </div>\n  );\n};\n\nexport default UpdateInfoProfil;\n","C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Profil\\UpdatePicture.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\UserIdConnect.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\components\\Utilitaires.js",[],"C:\\Users\\user\\Desktop\\atypikhouse\\client\\src\\reducers\\posts.reducres.js",[],{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","severity":1,"message":"361","line":12,"column":9,"nodeType":"362","messageId":"363","endLine":12,"endColumn":12},{"ruleId":"360","severity":1,"message":"364","line":21,"column":9,"nodeType":"362","messageId":"363","endLine":21,"endColumn":21},{"ruleId":"360","severity":1,"message":"365","line":3,"column":8,"nodeType":"362","messageId":"363","endLine":3,"endColumn":18},{"ruleId":"360","severity":1,"message":"366","line":10,"column":16,"nodeType":"362","messageId":"363","endLine":10,"endColumn":23},{"ruleId":"367","severity":1,"message":"368","line":69,"column":25,"nodeType":"369","endLine":69,"endColumn":85},{"ruleId":"360","severity":1,"message":"370","line":6,"column":50,"nodeType":"362","messageId":"363","endLine":6,"endColumn":56},{"ruleId":"360","severity":1,"message":"371","line":6,"column":80,"nodeType":"362","messageId":"363","endLine":6,"endColumn":94},{"ruleId":"372","severity":1,"message":"373","line":57,"column":19,"nodeType":"369","endLine":57,"endColumn":23},{"ruleId":"356","replacedBy":"374"},{"ruleId":"358","replacedBy":"375"},{"ruleId":"360","severity":1,"message":"376","line":4,"column":8,"nodeType":"362","messageId":"363","endLine":4,"endColumn":18},{"ruleId":"360","severity":1,"message":"377","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":14},{"ruleId":"360","severity":1,"message":"378","line":6,"column":40,"nodeType":"362","messageId":"363","endLine":6,"endColumn":48},{"ruleId":"360","severity":1,"message":"371","line":6,"column":80,"nodeType":"362","messageId":"363","endLine":6,"endColumn":94},{"ruleId":"360","severity":1,"message":"361","line":10,"column":9,"nodeType":"362","messageId":"363","endLine":10,"endColumn":12},{"ruleId":"360","severity":1,"message":"364","line":17,"column":9,"nodeType":"362","messageId":"363","endLine":17,"endColumn":21},{"ruleId":"360","severity":1,"message":"370","line":1,"column":10,"nodeType":"362","messageId":"363","endLine":1,"endColumn":16},{"ruleId":"360","severity":1,"message":"379","line":1,"column":18,"nodeType":"362","messageId":"363","endLine":1,"endColumn":25},{"ruleId":"360","severity":1,"message":"380","line":4,"column":10,"nodeType":"362","messageId":"363","endLine":4,"endColumn":20},{"ruleId":"381","severity":1,"message":"382","line":44,"column":28,"nodeType":"383","messageId":"384","endLine":44,"endColumn":30},{"ruleId":"385","severity":1,"message":"386","line":12,"column":1,"nodeType":"387","endLine":12,"endColumn":26},{"ruleId":"360","severity":1,"message":"388","line":12,"column":9,"nodeType":"362","messageId":"363","endLine":12,"endColumn":18},{"ruleId":"381","severity":1,"message":"382","line":36,"column":28,"nodeType":"383","messageId":"384","endLine":36,"endColumn":30},{"ruleId":"360","severity":1,"message":"389","line":15,"column":9,"nodeType":"362","messageId":"363","endLine":15,"endColumn":17},{"ruleId":"360","severity":1,"message":"390","line":16,"column":10,"nodeType":"362","messageId":"363","endLine":16,"endColumn":19},{"ruleId":"360","severity":1,"message":"391","line":22,"column":16,"nodeType":"362","messageId":"363","endLine":22,"endColumn":23},{"ruleId":"360","severity":1,"message":"392","line":63,"column":9,"nodeType":"362","messageId":"363","endLine":63,"endColumn":20},{"ruleId":"360","severity":1,"message":"393","line":86,"column":9,"nodeType":"362","messageId":"363","endLine":86,"endColumn":14},{"ruleId":"381","severity":1,"message":"382","line":109,"column":32,"nodeType":"383","messageId":"384","endLine":109,"endColumn":34},{"ruleId":"381","severity":1,"message":"382","line":159,"column":34,"nodeType":"383","messageId":"384","endLine":159,"endColumn":36},{"ruleId":"381","severity":1,"message":"382","line":163,"column":46,"nodeType":"383","messageId":"384","endLine":163,"endColumn":48},{"ruleId":"381","severity":1,"message":"382","line":180,"column":32,"nodeType":"383","messageId":"384","endLine":180,"endColumn":34},{"ruleId":"381","severity":1,"message":"382","line":184,"column":44,"nodeType":"383","messageId":"384","endLine":184,"endColumn":46},{"ruleId":"394","severity":1,"message":"395","line":23,"column":19,"nodeType":"369","endLine":23,"endColumn":61},{"ruleId":"360","severity":1,"message":"365","line":3,"column":8,"nodeType":"362","messageId":"363","endLine":3,"endColumn":18},{"ruleId":"360","severity":1,"message":"365","line":3,"column":8,"nodeType":"362","messageId":"363","endLine":3,"endColumn":18},{"ruleId":"360","severity":1,"message":"396","line":9,"column":11,"nodeType":"362","messageId":"363","endLine":9,"endColumn":16},{"ruleId":"360","severity":1,"message":"390","line":10,"column":12,"nodeType":"362","messageId":"363","endLine":10,"endColumn":21},{"ruleId":"394","severity":1,"message":"397","line":23,"column":19,"nodeType":"369","endLine":23,"endColumn":63},{"ruleId":"360","severity":1,"message":"398","line":2,"column":10,"nodeType":"362","messageId":"363","endLine":2,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":57,"column":54,"nodeType":"383","messageId":"384","endLine":57,"endColumn":56},{"ruleId":"381","severity":1,"message":"382","line":70,"column":70,"nodeType":"383","messageId":"384","endLine":70,"endColumn":72},{"ruleId":"381","severity":1,"message":"399","line":72,"column":60,"nodeType":"400","messageId":"401","endLine":72,"endColumn":66},{"ruleId":"360","severity":1,"message":"402","line":1,"column":10,"nodeType":"362","messageId":"363","endLine":1,"endColumn":17},{"ruleId":"360","severity":1,"message":"379","line":2,"column":18,"nodeType":"362","messageId":"363","endLine":2,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":55,"column":54,"nodeType":"383","messageId":"384","endLine":55,"endColumn":56},{"ruleId":"360","severity":1,"message":"378","line":3,"column":40,"nodeType":"362","messageId":"363","endLine":3,"endColumn":48},{"ruleId":"360","severity":1,"message":"370","line":3,"column":50,"nodeType":"362","messageId":"363","endLine":3,"endColumn":56},{"ruleId":"360","severity":1,"message":"371","line":3,"column":80,"nodeType":"362","messageId":"363","endLine":3,"endColumn":94},{"ruleId":"381","severity":1,"message":"382","line":24,"column":63,"nodeType":"383","messageId":"384","endLine":24,"endColumn":65},{"ruleId":"360","severity":1,"message":"403","line":4,"column":8,"nodeType":"362","messageId":"363","endLine":4,"endColumn":18},{"ruleId":"360","severity":1,"message":"404","line":10,"column":8,"nodeType":"362","messageId":"363","endLine":10,"endColumn":13},{"ruleId":"360","severity":1,"message":"389","line":20,"column":11,"nodeType":"362","messageId":"363","endLine":20,"endColumn":19},{"ruleId":"367","severity":1,"message":"368","line":68,"column":49,"nodeType":"369","endLine":68,"endColumn":109},{"ruleId":"360","severity":1,"message":"371","line":4,"column":80,"nodeType":"362","messageId":"363","endLine":4,"endColumn":94},{"ruleId":"360","severity":1,"message":"405","line":7,"column":8,"nodeType":"362","messageId":"363","endLine":7,"endColumn":17},{"ruleId":"360","severity":1,"message":"406","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":14},{"ruleId":"360","severity":1,"message":"396","line":15,"column":11,"nodeType":"362","messageId":"363","endLine":15,"endColumn":16},{"ruleId":"360","severity":1,"message":"407","line":17,"column":11,"nodeType":"362","messageId":"363","endLine":17,"endColumn":22},{"ruleId":"381","severity":1,"message":"382","line":64,"column":54,"nodeType":"383","messageId":"384","endLine":64,"endColumn":56},{"ruleId":"360","severity":1,"message":"361","line":10,"column":9,"nodeType":"362","messageId":"363","endLine":10,"endColumn":12},{"ruleId":"360","severity":1,"message":"408","line":1,"column":17,"nodeType":"362","messageId":"363","endLine":1,"endColumn":25},{"ruleId":"360","severity":1,"message":"409","line":3,"column":10,"nodeType":"362","messageId":"363","endLine":3,"endColumn":21},{"ruleId":"360","severity":1,"message":"378","line":6,"column":40,"nodeType":"362","messageId":"363","endLine":6,"endColumn":48},{"ruleId":"360","severity":1,"message":"370","line":6,"column":50,"nodeType":"362","messageId":"363","endLine":6,"endColumn":56},{"ruleId":"360","severity":1,"message":"371","line":6,"column":80,"nodeType":"362","messageId":"363","endLine":6,"endColumn":94},"no-native-reassign",["410"],"no-negated-in-lhs",["411"],"no-unused-vars","'uid' is assigned a value but never used.","Identifier","unusedVar","'onTextChange' is assigned a value but never used.","'SignUpForm' is defined but never used.","'setRole' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MDBBtn' is defined but never used.","'MDBModalFooter' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["410"],["411"],"'SearchForm' is defined but never used.","'Thread' is defined but never used.","'MDBInput' is defined but never used.","'MDBCard' is defined but never used.","'dateParser' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'usersData' is assigned a value but never used.","'userData' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setPost' is assigned a value but never used.","'makePayment' is assigned a value but never used.","'match' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Index_pro must be in PascalCase or SCREAMING_SNAKE_CASE","'posts' is assigned a value but never used.","Imported JSX component Index_admin must be in PascalCase or SCREAMING_SNAKE_CASE","'useSelector' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Tooltip' is defined but never used.","'LikeButton' is defined but never used.","'Popup' is defined but never used.","'ListAdmin' is defined but never used.","'Navbar' is defined but never used.","'deleteQuote' is assigned a value but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]